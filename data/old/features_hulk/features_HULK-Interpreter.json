{
    "total_nodes": 18631,
    "node_count": {
        "Compilation_unitContext": 10,
        "Using_directivesContext": 10,
        "UsingNamespaceDirectiveContext": 53,
        "TerminalNodeImpl": 3065,
        "Namespace_or_type_nameContext": 249,
        "IdentifierContext": 996,
        "Namespace_member_declarationsContext": 20,
        "Namespace_member_declarationContext": 31,
        "Namespace_declarationContext": 10,
        "Qualified_identifierContext": 10,
        "Namespace_bodyContext": 10,
        "Type_declarationContext": 21,
        "All_member_modifiersContext": 99,
        "All_member_modifierContext": 108,
        "Class_definitionContext": 19,
        "Class_bodyContext": 19,
        "Class_member_declarationsContext": 18,
        "Class_member_declarationContext": 82,
        "Common_member_declarationContext": 82,
        "Typed_member_declarationContext": 55,
        "Type_Context": 191,
        "Base_typeContext": 199,
        "Class_typeContext": 206,
        "Type_argument_listContext": 26,
        "Field_declarationContext": 10,
        "Variable_declaratorsContext": 10,
        "Variable_declaratorContext": 10,
        "Simple_typeContext": 6,
        "Numeric_typeContext": 6,
        "Integral_typeContext": 6,
        "Variable_initializerContext": 1,
        "ExpressionContext": 475,
        "Non_assignment_expressionContext": 398,
        "Conditional_expressionContext": 398,
        "Null_coalescing_expressionContext": 398,
        "Conditional_or_expressionContext": 398,
        "Conditional_and_expressionContext": 399,
        "Inclusive_or_expressionContext": 400,
        "Exclusive_or_expressionContext": 400,
        "And_expressionContext": 400,
        "Equality_expressionContext": 400,
        "Relational_expressionContext": 405,
        "Shift_expressionContext": 406,
        "Additive_expressionContext": 406,
        "Multiplicative_expressionContext": 410,
        "Switch_expressionContext": 410,
        "Range_expressionContext": 410,
        "Unary_expressionContext": 466,
        "Primary_expressionContext": 465,
        "LiteralExpressionContext": 75,
        "LiteralContext": 75,
        "Constructor_declarationContext": 16,
        "BodyContext": 16,
        "BlockContext": 65,
        "Statement_listContext": 85,
        "StatementContext": 270,
        "Embedded_statementContext": 204,
        "ExpressionStatementContext": 120,
        "AssignmentContext": 55,
        "SimpleNameExpressionContext": 359,
        "Assignment_operatorContext": 55,
        "ObjectCreationExpressionContext": 28,
        "Object_creation_expressionContext": 27,
        "Member_accessContext": 117,
        "Method_invocationContext": 123,
        "Argument_listContext": 87,
        "ArgumentContext": 130,
        "Method_declarationContext": 26,
        "Method_member_nameContext": 26,
        "Method_bodyContext": 26,
        "DeclarationStatementContext": 44,
        "Local_variable_declarationContext": 41,
        "Local_variable_typeContext": 42,
        "Local_variable_declaratorContext": 41,
        "Local_variable_initializerContext": 41,
        "ForeachStatementContext": 1,
        "Bracket_expressionContext": 8,
        "Indexer_argumentContext": 8,
        "ReturnStatementContext": 34,
        "ThisReferenceExpressionContext": 1,
        "Formal_parameter_listContext": 18,
        "Fixed_parametersContext": 18,
        "Fixed_parameterContext": 31,
        "Arg_declarationContext": 31,
        "IfStatementContext": 24,
        "If_bodyContext": 34,
        "ThrowStatementContext": 5,
        "String_literalContext": 34,
        "IsTypeContext": 8,
        "ErrorNodeImpl": 2823,
        "Enum_definitionContext": 1,
        "Enum_bodyContext": 1,
        "Enum_member_declarationContext": 34,
        "Property_declarationContext": 26,
        "Member_nameContext": 26,
        "Accessor_declarationsContext": 26,
        "Accessor_bodyContext": 29,
        "Set_accessor_declarationContext": 3,
        "Accessor_modifierContext": 3,
        "Class_baseContext": 11,
        "TryStatementContext": 2,
        "Catch_clausesContext": 2,
        "Specific_catch_clauseContext": 2,
        "Constructor_initializerContext": 1,
        "Object_or_collection_initializerContext": 1,
        "Collection_initializerContext": 1,
        "Element_initializerContext": 9,
        "Expression_listContext": 9,
        "WhileStatementContext": 8,
        "SwitchStatementContext": 1,
        "Switch_sectionContext": 20,
        "Switch_labelContext": 23,
        "BreakStatementContext": 22,
        "Throwable_expressionContext": 8,
        "MemberAccessExpressionContext": 2,
        "Predefined_typeContext": 2,
        "DoStatementContext": 1,
        "TheEmptyStatementContext": 1,
        "Rank_specifierContext": 1,
        "Boolean_literalContext": 1
    },
    "max_depth": 611,
    "number_of_variables": 41,
    "number_of_constants": 0,
    "out_variables": 0,
    "ref_params": 0,
    "number_of_methods": 26,
    "number_of_classes": 19,
    "number_of_interfaces": 0,
    "number_of_abstract_classes": 0,
    "number_of_sealed_classes": 0,
    "import_statements": 10,
    "number_of_try_blocks": 2,
    "number_of_lists": 2,
    "number_of_dictionaries": 1,
    "number_of_enums": 1,
    "number_of_delegates": 0,
    "function_calls": 28,
    "variable_names": [
        [
            "Dictionary",
            "newScope"
        ],
        [
            "Expression",
            "AST"
        ],
        [
            "List",
            "tokens"
        ],
        [
            "Parser",
            "parser"
        ],
        [
            "object",
            "result"
        ],
        [
            "Evaluator",
            "evaluator"
        ],
        [
            "Lexer",
            "lexer"
        ],
        [
            "char",
            "c"
        ],
        [
            "Expression",
            "expression"
        ],
        [
            "Token",
            "id"
        ],
        [
            "Token",
            "Operator"
        ],
        [
            "Expression",
            "AST"
        ],
        [
            "Expression",
            "thenBranch"
        ],
        [
            "List",
            "assignments"
        ],
        [
            "Expression",
            "elseBranch"
        ],
        [
            "Expression",
            "condition"
        ],
        [
            "Expression",
            "value"
        ],
        [
            "Expression",
            "right"
        ],
        [
            "Interpreter",
            "interpreter"
        ],
        [
            "string",
            "line"
        ]
    ],
    "method_names": [
        "PushScope",
        "Evaluate",
        "PopScope",
        "CurrentScope",
        "AddFunction",
        "Initialize",
        "ToString",
        "Run",
        "Report",
        "ScanToken",
        "ScanTokens",
        "Power",
        "Comparison",
        "Concatenation",
        "Literal",
        "Primary",
        "IfElseStatement",
        "Parse",
        "Equality",
        "Logical",
        "Factor",
        "Expression",
        "LetInExpression",
        "Unary",
        "Term",
        "Main"
    ],
    "method_lengths": [
        7,
        4,
        4,
        32,
        10,
        4,
        4,
        27,
        3,
        11,
        47,
        10,
        4,
        11,
        11,
        11,
        11,
        11,
        11,
        11,
        10,
        14,
        14,
        10,
        17,
        32
    ],
    "class_names": [
        "Evaluator",
        "Memory",
        "FunctionCall",
        "UnaryExpression",
        "IfElseStatement",
        "FunctionDeclaration",
        "AssignExpression",
        "Expression",
        "GroupingExpression",
        "LetInExpression",
        "VariableExpression",
        "LiteralExpression",
        "BinaryExpression",
        "Token",
        "Interpreter",
        "Error",
        "Lexer",
        "Parser",
        "Program"
    ],
    "interface_names": [],
    "delegate_names": [],
    "enums_names": [
        "TokenType"
    ],
    "distinct_tokens_count": {},
    "control_structures_if": 24,
    "control_structures_switch": 1,
    "control_structures_for": 0,
    "control_structures_while": 8,
    "control_structures_dowhile": 0,
    "access_modifiers_public": 72,
    "access_modifiers_private": 25,
    "access_modifiers_protected": 0,
    "access_modifiers_internal": 1,
    "access_modifiers_static": 5,
    "access_modifiers_protected_internal": 0,
    "access_modifiers_private_protected": 0,
    "modifier_readonly": 3,
    "modifier_volatile": 0,
    "modifier_virtual": 0,
    "modifier_override": 1,
    "modifier_new": 6,
    "modifier_partial": 0,
    "modifier_extern": 0,
    "modifier_unsafe": 0,
    "modifier_async": 0,
    "method_return_types": {
        "PushScope": "void",
        "PopScope": "void",
        "CurrentScope": "Dictionary",
        "Evaluate": "object",
        "Initialize": "void",
        "AddFunction": "void",
        "ToString": "string",
        "Run": "void",
        "Report": "string",
        "ScanTokens": "List",
        "ScanToken": "void",
        "Parse": "Expression",
        "Expression": "Expression",
        "Logical": "Expression",
        "Equality": "Expression",
        "Comparison": "Expression",
        "Concatenation": "Expression",
        "Term": "Expression",
        "Factor": "Expression",
        "Power": "Expression",
        "Unary": "Expression",
        "Literal": "Expression",
        "Primary": "Expression",
        "IfElseStatement": "Expression",
        "LetInExpression": "Expression",
        "Main": "void"
    },
    "method_parameters": {},
    "linq_querie_select": 0,
    "linq_queries_where": 0,
    "linq_queries_orderBy": 0,
    "linq_queries_groupBy": 0,
    "linq_queries_join": 0,
    "linq_queries_sum": 0,
    "linq_queries_count": 0,
    "library_call_console": 10,
    "library_call_math": 0,
    "number_of_lambdas": 0,
    "number_of_getters": 26,
    "number_of_setters": 3,
    "number_of_tuples": 0,
    "number_of_namespaces": 10,
    "project_name": "HULK-Interpreter",
    "label": "original"
}