{
    "total_nodes": 19435,
    "max_depth": 1093,
    "number_of_variables": 11,
    "number_of_constants": 0,
    "out_variables": 0,
    "ref_params": 0,
    "number_of_methods": 19,
    "number_of_classes": 19,
    "number_of_interfaces": 0,
    "number_of_abstract_classes": 0,
    "number_of_sealed_classes": 0,
    "import_statements": 3,
    "number_of_try_blocks": 1,
    "number_of_lists": 0,
    "number_of_dictionaries": 0,
    "number_of_enums": 1,
    "number_of_delegates": 0,
    "function_calls": 10,
    "enums_names": [
        "TokenType"
    ],
    "control_structures_if": 54,
    "control_structures_switch": 3,
    "control_structures_for": 0,
    "control_structures_while": 0,
    "control_structures_dowhile": 0,
    "access_modifiers_public": 84,
    "access_modifiers_private": 28,
    "access_modifiers_protected": 1,
    "access_modifiers_internal": 0,
    "access_modifiers_static": 13,
    "access_modifiers_protected_internal": 0,
    "access_modifiers_private_protected": 0,
    "modifier_readonly": 1,
    "modifier_volatile": 0,
    "modifier_virtual": 1,
    "modifier_override": 1,
    "modifier_new": 19,
    "modifier_partial": 0,
    "modifier_extern": 0,
    "modifier_unsafe": 0,
    "modifier_async": 0,
    "linq_querie_select": 0,
    "linq_queries_where": 0,
    "linq_queries_orderBy": 0,
    "linq_queries_groupBy": 0,
    "linq_queries_join": 0,
    "linq_queries_sum": 4,
    "linq_queries_count": 0,
    "library_call_console": 2,
    "library_call_math": 2,
    "number_of_lambdas": 5,
    "number_of_getters": 31,
    "number_of_setters": 1,
    "number_of_tuples": 0,
    "number_of_namespaces": 21,
    "method_parameters": [
        [
            "Main",
            [
                [
                    "string[]",
                    "args"
                ]
            ]
        ],
        [
            "Sqrt",
            [
                [
                    "(double",
                    ")scope"
                ]
            ]
        ],
        [
            "GetUnaryOperatorPrecedence",
            [
                [
                    "TokenType",
                    "type"
                ]
            ]
        ],
        [
            "GetBinaryOperatorPrecedence",
            [
                [
                    "TokenType",
                    "type"
                ]
            ]
        ],
        [
            "Eval",
            [
                [
                    "Scope",
                    "param"
                ]
            ]
        ],
        [
            "EvaluateExpression",
            [
                [
                    "HulkExpression",
                    "node"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "Parse",
            [
                [
                    "string",
                    "text"
                ]
            ]
        ],
        [
            "AddVariable",
            [
                [
                    "string",
                    "identifier"
                ],
                [
                    "object",
                    "expression"
                ]
            ]
        ],
        [
            "Contains",
            [
                [
                    "string",
                    "identifier"
                ]
            ]
        ],
        [
            "GetValue",
            [
                [
                    "string",
                    "identifier"
                ]
            ]
        ],
        [
            "LookAhead",
            [
                [
                    "int",
                    "offset"
                ]
            ]
        ],
        [
            "MatchToken",
            [
                [
                    "TokenType",
                    "type"
                ]
            ]
        ]
    ],
    "variable_names": [
        [
            "var",
            "lexer"
        ],
        [
            "var",
            "evaluator"
        ],
        [
            "var",
            "result"
        ],
        [
            "var",
            "tree"
        ],
        [
            "var",
            "variables"
        ],
        [
            "Scope",
            "scope"
        ],
        [
            "var",
            "parser"
        ],
        [
            "var",
            "newScope"
        ],
        [
            "var",
            "lexer"
        ],
        [
            "var",
            "currentToken"
        ],
        [
            "var",
            "index"
        ]
    ],
    "method_names": [
        "Main",
        "Sqrt",
        "GetStandardLibraryVariables",
        "GetStandardLibraryFunctions",
        "GetUnaryExpressionType",
        "GetBinaryOperatorPrecedence",
        "GetUnaryOperatorPrecedence",
        "GetExpressionType",
        "Eval",
        "Evaluate",
        "EvaluateExpression",
        "Parse",
        "GetValue",
        "Contains",
        "BuildChildScope",
        "AddVariable",
        "TokenAhead",
        "LookAhead",
        "MatchToken"
    ],
    "method_return_types": [
        [
            "Main",
            "void"
        ],
        [
            "Sqrt",
            "("
        ],
        [
            "GetStandardLibraryVariables",
            "Scope"
        ],
        [
            "GetStandardLibraryFunctions",
            "Dictionary"
        ],
        [
            "GetUnaryExpressionType",
            "Type"
        ],
        [
            "GetUnaryOperatorPrecedence",
            "int"
        ],
        [
            "GetBinaryOperatorPrecedence",
            "int"
        ],
        [
            "GetExpressionType",
            "Type"
        ],
        [
            "Eval",
            "object"
        ],
        [
            "EvaluateExpression",
            "object"
        ],
        [
            "Evaluate",
            "object"
        ],
        [
            "Parse",
            "ASTree"
        ],
        [
            "Contains",
            "bool"
        ],
        [
            "AddVariable",
            "void"
        ],
        [
            "GetValue",
            "object"
        ],
        [
            "BuildChildScope",
            "Scope"
        ],
        [
            "MatchToken",
            "Token"
        ],
        [
            "TokenAhead",
            "Token"
        ],
        [
            "LookAhead",
            "Token"
        ]
    ],
    "class_names": [
        "Program",
        "Let_In_Expression",
        "StandardLibrary",
        "Token",
        "LetExpression",
        "HulkUnaryExpression",
        "FunctionDeclarationExpression",
        "HulkParenthesesExpression",
        "HulkExpression",
        "HulkLiteralExpression",
        "FunctionCallExpression",
        "If_ElseStatement",
        "TokensPrecedences",
        "HulkBinaryExpression",
        "FunctionReference",
        "HulkEvaluator",
        "ASTree",
        "Scope",
        "Parser"
    ],
    "interface_names": [],
    "delegate_names": [],
    "node_count": {
        "Compilation_unitContext": 24,
        "Using_directivesContext": 3,
        "UsingNamespaceDirectiveContext": 5,
        "TerminalNodeImpl": 3100,
        "Namespace_or_type_nameContext": 186,
        "IdentifierContext": 866,
        "Global_attribute_sectionContext": 8,
        "Global_attribute_targetContext": 8,
        "Attribute_listContext": 10,
        "AttributeContext": 10,
        "Qualified_alias_memberContext": 2,
        "Attribute_argumentContext": 9,
        "ExpressionContext": 427,
        "Non_assignment_expressionContext": 340,
        "Conditional_expressionContext": 335,
        "Null_coalescing_expressionContext": 335,
        "Conditional_or_expressionContext": 335,
        "Conditional_and_expressionContext": 337,
        "Inclusive_or_expressionContext": 364,
        "Exclusive_or_expressionContext": 364,
        "And_expressionContext": 364,
        "Equality_expressionContext": 364,
        "Relational_expressionContext": 425,
        "Shift_expressionContext": 427,
        "Additive_expressionContext": 427,
        "Multiplicative_expressionContext": 429,
        "Switch_expressionContext": 429,
        "Range_expressionContext": 429,
        "Unary_expressionContext": 473,
        "Primary_expressionContext": 471,
        "LiteralExpressionContext": 112,
        "LiteralContext": 112,
        "String_literalContext": 43,
        "AssignmentContext": 42,
        "SimpleNameExpressionContext": 307,
        "Assignment_operatorContext": 42,
        "ErrorNodeImpl": 3936,
        "Namespace_member_declarationsContext": 24,
        "Namespace_member_declarationContext": 64,
        "Namespace_declarationContext": 21,
        "Qualified_identifierContext": 21,
        "Type_declarationContext": 43,
        "Class_definitionContext": 19,
        "Class_bodyContext": 19,
        "Class_member_declarationsContext": 19,
        "Class_member_declarationContext": 104,
        "All_member_modifiersContext": 127,
        "All_member_modifierContext": 143,
        "Common_member_declarationContext": 104,
        "Typed_member_declarationContext": 70,
        "Type_Context": 197,
        "Base_typeContext": 216,
        "Class_typeContext": 168,
        "Rank_specifierContext": 2,
        "Field_declarationContext": 11,
        "Variable_declaratorsContext": 11,
        "Variable_declaratorContext": 11,
        "Variable_initializerContext": 27,
        "Array_initializerContext": 1,
        "Method_declarationContext": 19,
        "Method_member_nameContext": 19,
        "Formal_parameter_listContext": 29,
        "Fixed_parametersContext": 29,
        "Fixed_parameterContext": 51,
        "Arg_declarationContext": 51,
        "Method_bodyContext": 18,
        "BlockContext": 103,
        "Statement_listContext": 118,
        "StatementContext": 245,
        "Embedded_statementContext": 218,
        "ForeachStatementContext": 2,
        "Local_variable_typeContext": 13,
        "ExpressionStatementContext": 108,
        "Member_accessContext": 125,
        "TryStatementContext": 1,
        "IfStatementContext": 54,
        "MemberAccessExpressionContext": 1,
        "Predefined_typeContext": 1,
        "Method_invocationContext": 34,
        "Argument_listContext": 33,
        "ArgumentContext": 48,
        "If_bodyContext": 95,
        "ReturnStatementContext": 76,
        "DeclarationStatementContext": 11,
        "Local_variable_declarationContext": 11,
        "Local_variable_declaratorContext": 11,
        "Local_variable_initializerContext": 11,
        "ObjectCreationExpressionContext": 10,
        "Object_creation_expressionContext": 9,
        "IsTypeContext": 19,
        "ContinueStatementContext": 1,
        "Class_baseContext": 10,
        "Constructor_declarationContext": 22,
        "BodyContext": 18,
        "Property_declarationContext": 38,
        "Member_nameContext": 38,
        "Accessor_declarationsContext": 31,
        "Accessor_bodyContext": 32,
        "Enum_definitionContext": 1,
        "Enum_bodyContext": 1,
        "Enum_member_declarationContext": 38,
        "Type_argument_listContext": 12,
        "Lambda_expressionContext": 5,
        "Anonymous_function_signatureContext": 5,
        "Right_arrowContext": 12,
        "Anonymous_function_bodyContext": 5,
        "Implicit_anonymous_function_parameter_listContext": 2,
        "Throwable_expressionContext": 13,
        "Cast_expressionContext": 2,
        "Simple_typeContext": 48,
        "Numeric_typeContext": 34,
        "Floating_point_typeContext": 26,
        "AttributesContext": 4,
        "Attribute_sectionContext": 4,
        "Tuple_typeContext": 5,
        "Tuple_elementContext": 7,
        "Integral_typeContext": 8,
        "Namespace_bodyContext": 3,
        "Constructor_initializerContext": 3,
        "TypeofExpressionContext": 38,
        "ThrowStatementContext": 5,
        "Set_accessor_declarationContext": 1,
        "Accessor_modifierContext": 1,
        "SwitchStatementContext": 3,
        "Switch_sectionContext": 17,
        "Switch_labelContext": 28,
        "ThisReferenceExpressionContext": 3,
        "Bracket_expressionContext": 4,
        "Indexer_argumentContext": 4,
        "Boolean_literalContext": 2,
        "Object_or_collection_initializerContext": 1,
        "Object_initializerContext": 1,
        "Member_initializer_listContext": 1,
        "Member_initializerContext": 1,
        "Initializer_valueContext": 1,
        "Throw_expressionContext": 1
    },
    "project_name": "LoLProM_Hulk",
    "label": "original",
    "project_type": "hulk"
}