{
    "total_nodes": 35186,
    "max_depth": 1634,
    "number_of_variables": 39,
    "number_of_constants": 0,
    "out_variables": 1,
    "ref_params": 0,
    "number_of_methods": 21,
    "number_of_classes": 49,
    "number_of_interfaces": 0,
    "number_of_abstract_classes": 0,
    "number_of_sealed_classes": 0,
    "import_statements": 25,
    "number_of_try_blocks": 1,
    "number_of_lists": 5,
    "number_of_dictionaries": 0,
    "number_of_enums": 6,
    "number_of_delegates": 0,
    "function_calls": 54,
    "enums_names": [
        "SemanticType",
        "TipoHulk",
        "Semantic_BinaryOperadorType",
        "Semantic_UnaryOperadorType",
        "TokenType",
        "TipoError"
    ],
    "control_structures_if": 27,
    "control_structures_switch": 8,
    "control_structures_for": 0,
    "control_structures_while": 3,
    "control_structures_dowhile": 0,
    "access_modifiers_public": 244,
    "access_modifiers_private": 46,
    "access_modifiers_protected": 0,
    "access_modifiers_internal": 28,
    "access_modifiers_static": 12,
    "access_modifiers_protected_internal": 0,
    "access_modifiers_private_protected": 0,
    "modifier_readonly": 6,
    "modifier_volatile": 0,
    "modifier_virtual": 0,
    "modifier_override": 58,
    "modifier_new": 18,
    "modifier_partial": 0,
    "modifier_extern": 0,
    "modifier_unsafe": 0,
    "modifier_async": 0,
    "linq_querie_select": 0,
    "linq_queries_where": 0,
    "linq_queries_orderBy": 0,
    "linq_queries_groupBy": 0,
    "linq_queries_join": 0,
    "linq_queries_sum": 1,
    "linq_queries_count": 0,
    "library_call_console": 15,
    "library_call_math": 0,
    "number_of_lambdas": 0,
    "number_of_getters": 98,
    "number_of_setters": 1,
    "number_of_tuples": 0,
    "number_of_namespaces": 32,
    "method_parameters": [
        [
            "Main",
            [
                [
                    "string[]",
                    "args"
                ]
            ]
        ],
        [
            "ImprimeError",
            [
                [
                    "SyntaxTree",
                    "expresion"
                ]
            ]
        ],
        [
            "ImprimeError",
            [
                [
                    "Retorno",
                    "expresion"
                ]
            ]
        ],
        [
            "ConectaAmbitoGlobal",
            [
                [
                    "Semantic_GlobalAmbito",
                    "previous"
                ],
                [
                    "SyntaxTree",
                    "arbol"
                ]
            ]
        ],
        [
            "CreaAmbitoPadre",
            [
                [
                    "Semantic_GlobalAmbito",
                    "previous"
                ]
            ]
        ],
        [
            "ConectaExpresion",
            [
                [
                    "Expresion",
                    "expresion"
                ]
            ]
        ],
        [
            "ConectaIfDeclaracion",
            [
                [
                    "IFDeclaracionExpresion",
                    "declaracion"
                ]
            ]
        ],
        [
            "ConectaExpresionCondicion",
            [
                [
                    "Expresion",
                    "expresion"
                ],
                [
                    "TipoHulk",
                    "type"
                ]
            ]
        ],
        [
            "ConectaVariableDeclaracion",
            [
                [
                    "VariableDeclaracionExpresion",
                    "declaracion"
                ]
            ]
        ],
        [
            "Try_AsignarVariable",
            [
                [
                    "string",
                    "name"
                ],
                [
                    "VariableSymbol",
                    "variable"
                ]
            ]
        ],
        [
            "Try_DeclararVariable",
            [
                [
                    "VariableSymbol",
                    "variable"
                ]
            ]
        ],
        [
            "Semantic_Parse_BO",
            [
                [
                    "TokenType",
                    "tokenType"
                ],
                [
                    "TipoHulk",
                    "leftType"
                ],
                [
                    "TipoHulk",
                    "rigthType"
                ]
            ]
        ],
        [
            "Semantic_Parse_UO",
            [
                [
                    "TokenType",
                    "tokenType"
                ],
                [
                    "TipoHulk",
                    "operandoTipo"
                ]
            ]
        ],
        [
            "EvaluaDeclaracion",
            [
                [
                    "Semantic_Expresion",
                    "declaracion"
                ]
            ]
        ],
        [
            "Sirve",
            [
                [
                    "Dictionary<VariableSymbol,object>",
                    "variables"
                ]
            ]
        ],
        [
            "Parse",
            [
                [
                    "string",
                    "text"
                ]
            ]
        ],
        [
            "Take",
            [
                [
                    "int",
                    "count"
                ]
            ]
        ]
    ],
    "variable_names": [
        [
            "var",
            "line"
        ],
        [
            "ConsoleColor",
            "amarillo"
        ],
        [
            "List",
            "alfa"
        ],
        [
            "ConsoleColor",
            "magenta"
        ],
        [
            "var",
            "variables"
        ],
        [
            "var",
            "semantic_expresion"
        ],
        [
            "ConsoleColor",
            "rojoFuerte"
        ],
        [
            "ConsoleColor",
            "rojo"
        ],
        [
            "var",
            "expresion"
        ],
        [
            "Servidor",
            "previous"
        ],
        [
            "var",
            "syntaxTree"
        ],
        [
            "Semantic_Ambito",
            "parent"
        ],
        [
            "List",
            "variables"
        ],
        [
            "Semantic_Parser",
            "semantic_object"
        ],
        [
            "var",
            "condicion"
        ],
        [
            "List",
            "lista"
        ],
        [
            "var",
            "cuerpoIf"
        ],
        [
            "var",
            "ambito"
        ],
        [
            "var",
            "variable"
        ],
        [
            "var",
            "expresion"
        ],
        [
            "var",
            "parentAmbito"
        ],
        [
            "List",
            "errores"
        ],
        [
            "var",
            "result"
        ],
        [
            "string",
            "name"
        ],
        [
            "var",
            "cuerpoElse"
        ],
        [
            "var",
            "stack"
        ],
        [
            "IEnumerable",
            "errores"
        ],
        [
            "var",
            "ambitoGlobal"
        ],
        [
            "Evaluator",
            "resultado"
        ],
        [
            "object",
            "valorResultado"
        ],
        [
            "var",
            "semantic_Funcion"
        ],
        [
            "var",
            "parser"
        ],
        [
            "int",
            "index"
        ]
    ],
    "method_names": [
        "Main",
        "ImprimeError",
        "ConectaExpresion",
        "ConectaExpresionCondicion",
        "CreaAmbitoPadre",
        "ConectaVariableDeclaracion",
        "ConectaIfDeclaracion",
        "ConectaAmbitoGlobal",
        "Try_DeclararVariable",
        "GetDeclaredVariables",
        "Try_AsignarVariable",
        "Semantic_Parse_BO",
        "Semantic_Parse_UO",
        "GetTipoHulk",
        "EvaluaDeclaracion",
        "Evalua",
        "Sirve",
        "Parse",
        "Take",
        "NextToken"
    ],
    "method_return_types": [
        [
            "ImprimeError",
            "void"
        ],
        [
            "Main",
            "void"
        ],
        [
            "ConectaExpresionCondicion",
            "Semantic_Expresion"
        ],
        [
            "CreaAmbitoPadre",
            "Semantic_Ambito"
        ],
        [
            "ConectaIfDeclaracion",
            "Semantic_Expresion"
        ],
        [
            "ConectaExpresion",
            "Semantic_Expresion"
        ],
        [
            "ConectaAmbitoGlobal",
            "Semantic_GlobalAmbito"
        ],
        [
            "ConectaVariableDeclaracion",
            "Semantic_Expresion"
        ],
        [
            "Try_AsignarVariable",
            "bool"
        ],
        [
            "GetDeclaredVariables",
            "List"
        ],
        [
            "Try_DeclararVariable",
            "bool"
        ],
        [
            "Semantic_Parse_BO",
            "Semantic_BinaryOperador"
        ],
        [
            "Semantic_Parse_UO",
            "Semantic_UnaryOperador"
        ],
        [
            "GetTipoHulk",
            "TipoHulk"
        ],
        [
            "Evalua",
            "object"
        ],
        [
            "EvaluaDeclaracion",
            "void"
        ],
        [
            "Sirve",
            "Retorno"
        ],
        [
            "Parse",
            "SyntaxTree"
        ],
        [
            "Take",
            "char"
        ],
        [
            "NextToken",
            "Token"
        ]
    ],
    "class_names": [
        "Program",
        "Semantic_Parser",
        "Semantic_Ambito",
        "Semantic_VariableDeclaracion",
        "Semantic_PrintExpresion",
        "Semantic_DeclaracionExpresion",
        "Semantic_FuncionDeclaracion",
        "Semantic_IF_Declaracion",
        "Semantic_Declaracion",
        "Semantic_SenExpresion",
        "Semantic_SqrtExpresion",
        "Semantic_CosExpresion",
        "Semantic_LogExpresion",
        "Semantic_BinaryOperador",
        "Semantic_BinaryExpresion",
        "Semantic_Expresion",
        "Semantic_Nodo",
        "Semantic_UnaryExpresion",
        "Semantic_UnaryOperador",
        "Semantic_FuncionCall",
        "Semantic_GlobalAmbito",
        "Semantic_VariableExpresion",
        "Semantic_AsignacionVariable",
        "Semantic_LiteralExpresion",
        "VariableDeclaracionExpresion",
        "Nodo",
        "AsignacionVariableExpresion",
        "Token",
        "IDExpresion",
        "VariableSymbol",
        "FuncionSymbol",
        "ElseDeclaracion",
        "DeclaracionNodo",
        "IFDeclaracionExpresion",
        "DeclaracionExpresion",
        "BinaryExpresion",
        "Expresion",
        "PrintExpresion",
        "LiteralExpresion",
        "FuncionCallExpresion",
        "FuncionDeclaracion",
        "UnaryExpresion",
        "ParentesisExpresion",
        "Error",
        "Evaluator",
        "Servidor",
        "Retorno",
        "SyntaxTree",
        "Lexer"
    ],
    "interface_names": [],
    "delegate_names": [],
    "node_count": {
        "Compilation_unitContext": 34,
        "Using_directivesContext": 25,
        "UsingNamespaceDirectiveContext": 45,
        "TerminalNodeImpl": 6693,
        "Namespace_or_type_nameContext": 671,
        "IdentifierContext": 2425,
        "Namespace_member_declarationsContext": 66,
        "Namespace_member_declarationContext": 121,
        "Namespace_declarationContext": 32,
        "Qualified_identifierContext": 32,
        "Namespace_bodyContext": 32,
        "Type_declarationContext": 89,
        "All_member_modifiersContext": 327,
        "All_member_modifierContext": 442,
        "Class_definitionContext": 49,
        "Class_bodyContext": 49,
        "Class_member_declarationsContext": 48,
        "Class_member_declarationContext": 250,
        "Common_member_declarationContext": 250,
        "Typed_member_declarationContext": 198,
        "Type_Context": 482,
        "Base_typeContext": 482,
        "Class_typeContext": 500,
        "Type_argument_listContext": 50,
        "Field_declarationContext": 23,
        "Variable_declaratorsContext": 23,
        "Variable_declaratorContext": 23,
        "Variable_initializerContext": 40,
        "ExpressionContext": 886,
        "Non_assignment_expressionContext": 717,
        "Conditional_expressionContext": 717,
        "Null_coalescing_expressionContext": 717,
        "Conditional_or_expressionContext": 717,
        "Conditional_and_expressionContext": 717,
        "Inclusive_or_expressionContext": 721,
        "Exclusive_or_expressionContext": 721,
        "And_expressionContext": 721,
        "Equality_expressionContext": 721,
        "Relational_expressionContext": 743,
        "Shift_expressionContext": 745,
        "Additive_expressionContext": 745,
        "Multiplicative_expressionContext": 751,
        "Switch_expressionContext": 751,
        "Range_expressionContext": 751,
        "Unary_expressionContext": 918,
        "Primary_expressionContext": 901,
        "ObjectCreationExpressionContext": 54,
        "Object_creation_expressionContext": 54,
        "Method_declarationContext": 21,
        "Method_member_nameContext": 21,
        "Formal_parameter_listContext": 63,
        "Fixed_parametersContext": 63,
        "Fixed_parameterContext": 131,
        "Arg_declarationContext": 131,
        "Rank_specifierContext": 3,
        "Method_bodyContext": 21,
        "BlockContext": 93,
        "Statement_listContext": 147,
        "StatementContext": 400,
        "Embedded_statementContext": 343,
        "WhileStatementContext": 3,
        "LiteralExpressionContext": 69,
        "LiteralContext": 69,
        "Boolean_literalContext": 5,
        "DeclarationStatementContext": 47,
        "Local_variable_declarationContext": 39,
        "Local_variable_typeContext": 44,
        "Local_variable_declaratorContext": 39,
        "Local_variable_initializerContext": 39,
        "ExpressionStatementContext": 229,
        "AssignmentContext": 150,
        "SimpleNameExpressionContext": 773,
        "Member_accessContext": 370,
        "Assignment_operatorContext": 150,
        "Method_invocationContext": 85,
        "Argument_listContext": 108,
        "ArgumentContext": 226,
        "String_literalContext": 11,
        "IfStatementContext": 27,
        "MemberAccessExpressionContext": 4,
        "Predefined_typeContext": 4,
        "If_bodyContext": 38,
        "BreakStatementContext": 42,
        "ContinueStatementContext": 5,
        "TryStatementContext": 1,
        "ForeachStatementContext": 5,
        "Interpolated_regular_stringContext": 3,
        "Interpolated_regular_string_partContext": 3,
        "Catch_clausesContext": 1,
        "Specific_catch_clauseContext": 1,
        "SwitchStatementContext": 8,
        "Bracket_expressionContext": 6,
        "Indexer_argumentContext": 6,
        "Switch_sectionContext": 58,
        "Switch_labelContext": 59,
        "Constructor_declarationContext": 46,
        "BodyContext": 46,
        "Property_declarationContext": 158,
        "Member_nameContext": 158,
        "Right_arrowContext": 60,
        "Throwable_expressionContext": 62,
        "ReturnStatementContext": 37,
        "Cast_expressionContext": 16,
        "ParenthesisExpressionsContext": 1,
        "ErrorNodeImpl": 2734,
        "Accessor_declarationsContext": 98,
        "Accessor_bodyContext": 99,
        "Simple_typeContext": 16,
        "Parameter_modifierContext": 1,
        "Enum_definitionContext": 6,
        "Enum_bodyContext": 6,
        "Enum_member_declarationContext": 107,
        "Class_baseContext": 33,
        "Constructor_initializerContext": 4,
        "Array_initializerContext": 2,
        "Set_accessor_declarationContext": 1,
        "Accessor_modifierContext": 1,
        "Numeric_typeContext": 14,
        "Integral_typeContext": 14,
        "ThrowStatementContext": 1,
        "AttributesContext": 8,
        "Attribute_sectionContext": 8,
        "Attribute_listContext": 8,
        "AttributeContext": 8
    },
    "project_name": "Pol472_HULK",
    "label": "original"
}