{
    "total_nodes": 150667,
    "max_depth": 3860,
    "number_of_variables": 434,
    "number_of_constants": 0,
    "out_variables": 0,
    "ref_params": 0,
    "number_of_methods": 298,
    "number_of_classes": 117,
    "number_of_interfaces": 9,
    "number_of_abstract_classes": 0,
    "number_of_sealed_classes": 0,
    "import_statements": 42,
    "number_of_try_blocks": 5,
    "number_of_lists": 21,
    "number_of_dictionaries": 0,
    "number_of_enums": 2,
    "number_of_delegates": 3,
    "function_calls": 227,
    "enums_names": [
        "TokenType",
        "ErrorType"
    ],
    "control_structures_if": 179,
    "control_structures_switch": 10,
    "control_structures_for": 6,
    "control_structures_while": 17,
    "control_structures_dowhile": 0,
    "access_modifiers_public": 664,
    "access_modifiers_private": 155,
    "access_modifiers_protected": 8,
    "access_modifiers_internal": 8,
    "access_modifiers_static": 144,
    "access_modifiers_protected_internal": 0,
    "access_modifiers_private_protected": 0,
    "modifier_readonly": 24,
    "modifier_volatile": 0,
    "modifier_virtual": 1,
    "modifier_override": 46,
    "modifier_new": 194,
    "modifier_partial": 10,
    "modifier_extern": 0,
    "modifier_unsafe": 0,
    "modifier_async": 2,
    "linq_querie_select": 0,
    "linq_queries_where": 0,
    "linq_queries_orderBy": 0,
    "linq_queries_groupBy": 0,
    "linq_queries_join": 0,
    "linq_queries_sum": 37,
    "linq_queries_count": 0,
    "library_call_console": 21,
    "library_call_math": 31,
    "number_of_lambdas": 42,
    "number_of_getters": 109,
    "number_of_setters": 47,
    "number_of_tuples": 0,
    "number_of_namespaces": 67,
    "method_parameters": [
        [
            "Dispose",
            [
                [
                    "bool",
                    "disposing"
                ]
            ]
        ],
        [
            "DrawPoint",
            [
                [
                    "GSharpPoint",
                    "point"
                ]
            ]
        ],
        [
            "DrawString",
            [
                [
                    "GSharpString",
                    "gString"
                ]
            ]
        ],
        [
            "SolveCircularSystem",
            [
                [
                    "Equation",
                    "circular1"
                ],
                [
                    "Equation",
                    "circular2"
                ]
            ]
        ],
        [
            "SolveLinearSystem",
            [
                [
                    "Equation",
                    "linear1"
                ],
                [
                    "Equation",
                    "linear2"
                ]
            ]
        ],
        [
            "SolveCircularLinearSystem",
            [
                [
                    "Equation",
                    "circular"
                ],
                [
                    "Equation",
                    "linear"
                ]
            ]
        ],
        [
            "SubstituteVariable",
            [
                [
                    "Equation",
                    "parameter"
                ],
                [
                    "Equation",
                    "equation"
                ],
                [
                    "bool",
                    "isXValue"
                ]
            ]
        ],
        [
            "EvaluateEcuation",
            [
                [
                    "double",
                    "x"
                ],
                [
                    "double",
                    "y"
                ],
                [
                    "Equation",
                    "equation"
                ]
            ]
        ],
        [
            "FilterInRangeSolutions",
            [
                [
                    "IEnumerable<GSPoint>",
                    "posibleSolutions"
                ],
                [
                    "Equation",
                    "circular1"
                ],
                [
                    "Equation",
                    "circular2"
                ]
            ]
        ],
        [
            "IsInRange",
            [
                [
                    "double",
                    "parameter"
                ]
            ]
        ],
        [
            "AcceptAllConstrains",
            [
                [
                    "double",
                    "parameter"
                ],
                [
                    "ParameterConstrains?[]",
                    "constrains"
                ]
            ]
        ],
        [
            "Print",
            [
                [
                    "object?",
                    "obj"
                ],
                [
                    "string",
                    "caption"
                ]
            ]
        ],
        [
            "PrintError",
            [
                [
                    "GSharpException",
                    "obj"
                ]
            ]
        ],
        [
            "PrintErrors",
            [
                [
                    "List<GSharpException>",
                    "exceptions"
                ]
            ]
        ],
        [
            "SetColor",
            [
                [
                    "string",
                    "newColor"
                ]
            ]
        ],
        [
            "DrawPoint",
            [
                [
                    "GSPoint",
                    "point"
                ],
                [
                    "GString?",
                    "name"
                ]
            ]
        ],
        [
            "DrawLine",
            [
                [
                    "Line",
                    "line"
                ],
                [
                    "GString?",
                    "name"
                ]
            ]
        ],
        [
            "DrawSegment",
            [
                [
                    "Segment",
                    "segment"
                ],
                [
                    "GString?",
                    "name"
                ]
            ]
        ],
        [
            "DrawCircle",
            [
                [
                    "Circle",
                    "circle"
                ],
                [
                    "GString?",
                    "name"
                ]
            ]
        ],
        [
            "DrawArc",
            [
                [
                    "Arc",
                    "arc"
                ],
                [
                    "GString?",
                    "name"
                ]
            ]
        ],
        [
            "DrawRay",
            [
                [
                    "Ray",
                    "ray"
                ],
                [
                    "GString?",
                    "name"
                ]
            ]
        ],
        [
            "DrawString",
            [
                [
                    "GString",
                    "gString"
                ]
            ]
        ],
        [
            "DrawEnumerable",
            [
                [
                    "IEnumerable",
                    "values"
                ]
            ]
        ],
        [
            "Draw",
            [
                [
                    "IDrawer",
                    "drawer"
                ],
                [
                    "GString?",
                    "label"
                ]
            ]
        ],
        [
            "SetIsFigureProperty",
            [
                [
                    "GTypeNames",
                    "typeNames"
                ]
            ]
        ],
        [
            "ConvertToType",
            [
                [
                    "GTypeNames",
                    "gType"
                ]
            ]
        ],
        [
            "AccessVariable",
            [
                [
                    "string",
                    "variableName"
                ]
            ]
        ],
        [
            "DeclareVariable",
            [
                [
                    "string",
                    "variableName"
                ]
            ]
        ],
        [
            "DefineVariable",
            [
                [
                    "string",
                    "variableName"
                ]
            ]
        ],
        [
            "DeclareFunction",
            [
                [
                    "string",
                    "functionName"
                ]
            ]
        ],
        [
            "DefineFunction",
            [
                [
                    "string",
                    "functionName"
                ]
            ]
        ],
        [
            "BindValue",
            [
                [
                    "GSharpExpression",
                    "expr"
                ],
                [
                    "string",
                    "variableName"
                ]
            ]
        ],
        [
            "GetRandomInstance",
            [
                [
                    "int",
                    "limit"
                ]
            ]
        ],
        [
            "GetInstanceFromParameters",
            [
                [
                    "Queue<double>",
                    "parameters"
                ]
            ]
        ],
        [
            "ToValueOfTruth",
            [
                [
                    "GSObject?",
                    "gObject"
                ]
            ]
        ],
        [
            "GetRandomInstance",
            [
                [
                    "int",
                    "limit"
                ]
            ]
        ],
        [
            "GetInstanceFromParameters",
            [
                [
                    "Queue<double>",
                    "parameters"
                ]
            ]
        ],
        [
            "GetInstanceFromParameters",
            [
                [
                    "Queue<double>",
                    "parameters"
                ]
            ]
        ],
        [
            "GetRandomInstance",
            [
                [
                    "int",
                    "limit"
                ]
            ]
        ],
        [
            "AttachSequence",
            [
                [
                    "ISequenciable?",
                    "sequence"
                ]
            ]
        ],
        [
            "GetTail",
            [
                [
                    "int",
                    "tailStart"
                ]
            ]
        ],
        [
            "AttachSequence",
            [
                [
                    "ISequenciable?",
                    "sequenceToAppend"
                ]
            ]
        ],
        [
            "GetTail",
            [
                [
                    "int",
                    "tailStart"
                ]
            ]
        ],
        [
            "FiniteRange",
            [
                [
                    "GSNumber",
                    "start"
                ],
                [
                    "GSNumber",
                    "end"
                ]
            ]
        ],
        [
            "GetTail",
            [
                [
                    "int",
                    "tailBeggining"
                ]
            ]
        ],
        [
            "InfiniteRange",
            [
                [
                    "GSNumber",
                    "start"
                ]
            ]
        ],
        [
            "GetTail",
            [
                [
                    "int",
                    "tailBeggining"
                ]
            ]
        ],
        [
            "Draw",
            [
                [
                    "IDrawer",
                    "drawer"
                ],
                [
                    "GString?",
                    "label"
                ]
            ]
        ],
        [
            "GetRandomInstance",
            [
                [
                    "int",
                    "limit"
                ]
            ]
        ],
        [
            "GetInstanceFromParameters",
            [
                [
                    "Queue<double>",
                    "parameters"
                ]
            ]
        ],
        [
            "GetInstanceFromParameters",
            [
                [
                    "Queue<double>",
                    "parameters"
                ]
            ]
        ],
        [
            "GetRandomInstance",
            [
                [
                    "int",
                    "limit"
                ]
            ]
        ],
        [
            "Draw",
            [
                [
                    "IDrawer",
                    "drawer"
                ],
                [
                    "GString?",
                    "label"
                ]
            ]
        ],
        [
            "GetRandomInstance",
            [
                [
                    "int",
                    "limit"
                ]
            ]
        ],
        [
            "GetInstanceFromParameters",
            [
                [
                    "Queue<double>",
                    "parameters"
                ]
            ]
        ],
        [
            "Draw",
            [
                [
                    "IDrawer",
                    "drawer"
                ],
                [
                    "GString?",
                    "label"
                ]
            ]
        ],
        [
            "GetRandomInstance",
            [
                [
                    "int",
                    "limit"
                ]
            ]
        ],
        [
            "GetInstanceFromParameters",
            [
                [
                    "Queue<double>",
                    "parameters"
                ]
            ]
        ],
        [
            "Draw",
            [
                [
                    "IDrawer",
                    "drawer"
                ],
                [
                    "GString?",
                    "label"
                ]
            ]
        ],
        [
            "GetRandomInstance",
            [
                [
                    "int",
                    "limit"
                ]
            ]
        ],
        [
            "GetInstanceFromParameters",
            [
                [
                    "Queue<double>",
                    "parameters"
                ]
            ]
        ],
        [
            "Draw",
            [
                [
                    "IDrawer",
                    "drawer"
                ],
                [
                    "GString?",
                    "label"
                ]
            ]
        ],
        [
            "GetRandomInstance",
            [
                [
                    "int",
                    "limit"
                ]
            ]
        ],
        [
            "GetInstanceFromParameters",
            [
                [
                    "Queue<double>",
                    "parameters"
                ]
            ]
        ],
        [
            "Draw",
            [
                [
                    "IDrawer",
                    "drawer"
                ],
                [
                    "GString?",
                    "label"
                ]
            ]
        ],
        [
            "GetLineAngleRad",
            [
                [
                    "double",
                    "x1"
                ],
                [
                    "double",
                    "y1"
                ],
                [
                    "double",
                    "x2"
                ],
                [
                    "double",
                    "y2"
                ]
            ]
        ],
        [
            "IsAlpha",
            [
                [
                    "char",
                    "c"
                ]
            ]
        ],
        [
            "IsAlphaNumeric",
            [
                [
                    "char",
                    "c"
                ]
            ]
        ],
        [
            "Match",
            [
                [
                    "char",
                    "expected"
                ]
            ]
        ],
        [
            "IsDigit",
            [
                [
                    "char",
                    "c"
                ]
            ]
        ],
        [
            "Substring",
            [
                [
                    "string",
                    "s"
                ],
                [
                    "int",
                    "begIdx"
                ],
                [
                    "int",
                    "endIdx"
                ]
            ]
        ],
        [
            "AddToken",
            [
                [
                    "TokenType",
                    "type"
                ]
            ]
        ],
        [
            "AddToken",
            [
                [
                    "TokenType",
                    "type"
                ],
                [
                    "object",
                    "literal"
                ]
            ]
        ],
        [
            "Scan",
            [
                [
                    "string",
                    "source"
                ]
            ]
        ],
        [
            "RunFile",
            [
                [
                    "string",
                    "path"
                ],
                [
                    "IDrawer",
                    "drawer"
                ],
                [
                    "IWalleUI",
                    "userInterface"
                ]
            ]
        ],
        [
            "RunLibraryFile",
            [
                [
                    "string",
                    "path"
                ],
                [
                    "IDrawer",
                    "drawer"
                ],
                [
                    "IWalleUI",
                    "userInterface"
                ]
            ]
        ],
        [
            "RunLibrary",
            [
                [
                    "string",
                    "source"
                ],
                [
                    "IDrawer",
                    "drawer"
                ],
                [
                    "IWalleUI",
                    "userInterface"
                ]
            ]
        ],
        [
            "Run",
            [
                [
                    "string",
                    "source"
                ],
                [
                    "IDrawer",
                    "drawer"
                ],
                [
                    "IWalleUI",
                    "userInterface"
                ]
            ]
        ],
        [
            "InitializeGSharpStandard",
            [
                [
                    "Context<bool,bool>",
                    "scope"
                ]
            ]
        ],
        [
            "ParseReceiverStatement",
            [
                [
                    "TokenType",
                    "type"
                ]
            ]
        ],
        [
            "Match",
            [
                [
                    "TokenType",
                    "types"
                ]
            ]
        ],
        [
            "Consume",
            [
                [
                    "TokenType",
                    "type"
                ],
                [
                    "String",
                    "message"
                ]
            ]
        ],
        [
            "CheckAhead",
            [
                [
                    "TokenType",
                    "types"
                ]
            ]
        ],
        [
            "Check",
            [
                [
                    "TokenType",
                    "types"
                ]
            ]
        ],
        [
            "TryFind",
            [
                [
                    "TokenType",
                    "type"
                ]
            ]
        ],
        [
            "TryFindBefore",
            [
                [
                    "TokenType",
                    "target"
                ],
                [
                    "TokenType",
                    "breakpoint"
                ]
            ]
        ],
        [
            "InferType",
            [
                [
                    "TokenType",
                    "type"
                ]
            ]
        ],
        [
            "GetEnvironments",
            [
                [
                    "string",
                    "source"
                ],
                [
                    "IDrawer",
                    "drawer"
                ],
                [
                    "IWalleUI",
                    "userInterface"
                ]
            ]
        ],
        [
            "LoadLibrary",
            [
                [
                    "string",
                    "source"
                ],
                [
                    "IDrawer",
                    "drawer"
                ],
                [
                    "IWalleUI",
                    "userInterface"
                ]
            ]
        ],
        [
            "Accept",
            [
                [
                    "IStatementVisitor",
                    "visitor"
                ]
            ]
        ],
        [
            "Accept",
            [
                [
                    "IStatementVisitor",
                    "visitor"
                ]
            ]
        ],
        [
            "VisitStatements",
            [
                [
                    "List<Statement>",
                    "statements"
                ]
            ]
        ],
        [
            "VisitExpressionStatement",
            [
                [
                    "ExpressionStatement",
                    "expression"
                ]
            ]
        ],
        [
            "VisitFunctionDeclaration",
            [
                [
                    "FunctionDeclaration",
                    "declaration"
                ]
            ]
        ],
        [
            "VisitConstantDeclaration",
            [
                [
                    "ConstantsDeclaration",
                    "declaration"
                ]
            ]
        ],
        [
            "VisitDrawStatement",
            [
                [
                    "DrawStatement",
                    "drawStatement"
                ]
            ]
        ],
        [
            "VisitColorStatent",
            [
                [
                    "ColorStatement",
                    "color"
                ]
            ]
        ],
        [
            "VisitRestoreStatement",
            [
                [
                    "Restore",
                    "restore"
                ]
            ]
        ],
        [
            "VisitRecieverStatement",
            [
                [
                    "Reciever",
                    "reciever"
                ]
            ]
        ],
        [
            "VisitPrintStatement",
            [
                [
                    "PrintStatement",
                    "printStatement"
                ]
            ]
        ],
        [
            "VisitImportStatement",
            [
                [
                    "Import",
                    "import"
                ]
            ]
        ],
        [
            "Accept",
            [
                [
                    "IStatementVisitor",
                    "visitor"
                ]
            ]
        ],
        [
            "Evaluate",
            [
                [
                    "Evaluator",
                    "evaluator"
                ],
                [
                    "List<GSObject?>",
                    "arguments"
                ]
            ]
        ],
        [
            "GetType",
            [
                [
                    "TypeChecker",
                    "checker"
                ],
                [
                    "List<GSharpType>",
                    "argumentsTypes"
                ]
            ]
        ],
        [
            "Accept",
            [
                [
                    "IStatementVisitor",
                    "visitor"
                ]
            ]
        ],
        [
            "Accept",
            [
                [
                    "IStatementVisitor",
                    "visitor"
                ]
            ]
        ],
        [
            "Accept",
            [
                [
                    "IStatementVisitor",
                    "visitor"
                ]
            ]
        ],
        [
            "Accept",
            [
                [
                    "IStatementVisitor",
                    "visitor"
                ]
            ]
        ],
        [
            "Accept",
            [
                [
                    "IStatementVisitor",
                    "visitor"
                ]
            ]
        ],
        [
            "IsAnAcceptedOverload",
            [
                [
                    "GSharpType",
                    "left"
                ],
                [
                    "GSharpType",
                    "right"
                ],
                [
                    "BinaryOverloadInfo",
                    "overload"
                ]
            ]
        ],
        [
            "IsAnAcceptedOverload",
            [
                [
                    "GSObject?",
                    "left"
                ],
                [
                    "GSObject?",
                    "right"
                ],
                [
                    "BinaryOverloadInfo",
                    "overload"
                ]
            ]
        ],
        [
            "GetArithmetic",
            [
                [
                    "BinaryFunc",
                    "operation"
                ]
            ]
        ],
        [
            "GetLogic",
            [
                [
                    "BinaryFunc",
                    "operation"
                ]
            ]
        ],
        [
            "VisitLetIn",
            [
                [
                    "LetIn",
                    "letIn"
                ]
            ]
        ],
        [
            "VisitIfThenElse",
            [
                [
                    "IfThenElse",
                    "ifThen"
                ]
            ]
        ],
        [
            "VisitBinaryOperation",
            [
                [
                    "BinaryOperation",
                    "binary"
                ]
            ]
        ],
        [
            "VisitUnaryOperation",
            [
                [
                    "UnaryOperation",
                    "unary"
                ]
            ]
        ],
        [
            "VisitLiteralNumber",
            [
                [
                    "LiteralNumber",
                    "literal"
                ]
            ]
        ],
        [
            "VisitLiteralString",
            [
                [
                    "LiteralString",
                    "@string"
                ]
            ]
        ],
        [
            "VisitConstant",
            [
                [
                    "Constant",
                    "constant"
                ]
            ]
        ],
        [
            "VisitFunctionCall",
            [
                [
                    "FunctionCall",
                    "functionCall"
                ]
            ]
        ],
        [
            "VisitLiteralSequence",
            [
                [
                    "LiteralSequence",
                    "sequence"
                ]
            ]
        ],
        [
            "VisitLiteralUndefined",
            [
                [
                    "LiteralUndefined",
                    "undefined"
                ]
            ]
        ],
        [
            "GetTail",
            [
                [
                    "int",
                    "tailBeggining"
                ]
            ]
        ],
        [
            "GetSequenceValue",
            [
                [
                    "Evaluator",
                    "evaluator"
                ]
            ]
        ],
        [
            "GetTail",
            [
                [
                    "int",
                    "tailbeggining"
                ]
            ]
        ],
        [
            "ChoppSequence",
            [
                [
                    "int",
                    "a"
                ]
            ]
        ],
        [
            "FiniteRange",
            [
                [
                    "LiteralNumber",
                    "left"
                ],
                [
                    "LiteralNumber",
                    "right"
                ]
            ]
        ],
        [
            "GetTail",
            [
                [
                    "int",
                    "tailBeggining"
                ]
            ]
        ],
        [
            "InfiniteRange",
            [
                [
                    "LiteralNumber",
                    "start"
                ]
            ]
        ],
        [
            "GetTail",
            [
                [
                    "int",
                    "tailBeggining"
                ]
            ]
        ],
        [
            "IsAnAcceptedOverload",
            [
                [
                    "GSharpType",
                    "arg"
                ],
                [
                    "UnaryOverloadInfo",
                    "overload"
                ]
            ]
        ],
        [
            "IsAnAcceptedOverload",
            [
                [
                    "GSObject?",
                    "arg"
                ],
                [
                    "UnaryOverloadInfo",
                    "overload"
                ]
            ]
        ],
        [
            "GetArithmetic",
            [
                [
                    "UnaryFunc",
                    "operation"
                ]
            ]
        ],
        [
            "GetLogic",
            [
                [
                    "UnaryFunc",
                    "operation"
                ]
            ]
        ],
        [
            "Evaluate",
            [
                [
                    "Evaluator",
                    "evaluator"
                ],
                [
                    "List<GSObject?>",
                    "arguments"
                ]
            ]
        ],
        [
            "Evaluate",
            [
                [
                    "Evaluator",
                    "evaluator"
                ],
                [
                    "List<GSObject?>",
                    "arguments"
                ]
            ]
        ],
        [
            "Evaluate",
            [
                [
                    "Evaluator",
                    "evaluator"
                ],
                [
                    "List<GSObject?>",
                    "arguments"
                ]
            ]
        ],
        [
            "Evaluate",
            [
                [
                    "Evaluator",
                    "evaluator"
                ],
                [
                    "List<GSObject?>",
                    "arguments"
                ]
            ]
        ],
        [
            "Evaluate",
            [
                [
                    "Evaluator",
                    "evaluator"
                ],
                [
                    "List<GSObject?>",
                    "arguments"
                ]
            ]
        ],
        [
            "Evaluate",
            [
                [
                    "Evaluator",
                    "evaluator"
                ],
                [
                    "List<GSObject?>",
                    "arguments"
                ]
            ]
        ],
        [
            "Evaluate",
            [
                [
                    "Evaluator",
                    "evaluator"
                ],
                [
                    "List<GSObject?>",
                    "arguments"
                ]
            ]
        ],
        [
            "Evaluate",
            [
                [
                    "Evaluator",
                    "evaluator"
                ],
                [
                    "List<GSObject?>",
                    "arguments"
                ]
            ]
        ],
        [
            "Evaluate",
            [
                [
                    "Evaluator",
                    "evaluator"
                ],
                [
                    "List<GSObject?>",
                    "arguments"
                ]
            ]
        ],
        [
            "OnCounterClicked",
            [
                [
                    "object",
                    "sender"
                ],
                [
                    "EventArgs",
                    "e"
                ]
            ]
        ],
        [
            "Draw",
            [
                [
                    "ICanvas",
                    "canvas"
                ],
                [
                    "RectF",
                    "dirtyRect"
                ]
            ]
        ],
        [
            "DrawArc",
            [
                [
                    "Arc",
                    "arc"
                ],
                [
                    "GString",
                    "name"
                ]
            ]
        ],
        [
            "DrawCircle",
            [
                [
                    "Circle",
                    "circle"
                ],
                [
                    "GString",
                    "name"
                ]
            ]
        ],
        [
            "DrawEnumerable",
            [
                [
                    "IEnumerable",
                    "values"
                ]
            ]
        ],
        [
            "DrawLine",
            [
                [
                    "Line",
                    "line"
                ],
                [
                    "GString",
                    "name"
                ]
            ]
        ],
        [
            "DrawPoint",
            [
                [
                    "GSPoint",
                    "point"
                ],
                [
                    "GString",
                    "name"
                ]
            ]
        ],
        [
            "DrawRay",
            [
                [
                    "Ray",
                    "ray"
                ],
                [
                    "GString",
                    "name"
                ]
            ]
        ],
        [
            "DrawSegment",
            [
                [
                    "Segment",
                    "segment"
                ],
                [
                    "GString",
                    "name"
                ]
            ]
        ],
        [
            "DrawString",
            [
                [
                    "GString",
                    "gString"
                ]
            ]
        ],
        [
            "SetColor",
            [
                [
                    "string",
                    "newColor"
                ]
            ]
        ],
        [
            "Main",
            [
                [
                    "string[]",
                    "args"
                ]
            ]
        ],
        [
            "Main",
            [
                [
                    "string[]",
                    "args"
                ]
            ]
        ],
        [
            "Main",
            [
                [
                    "string[]",
                    "args"
                ]
            ]
        ],
        [
            "WriteMessage",
            [
                [
                    "GString?",
                    "message"
                ],
                [
                    "double",
                    "x"
                ],
                [
                    "double",
                    "y"
                ]
            ]
        ],
        [
            "GetLineAngleDeg",
            [
                [
                    "double",
                    "x1"
                ],
                [
                    "double",
                    "y1"
                ],
                [
                    "double",
                    "x2"
                ],
                [
                    "double",
                    "y2"
                ]
            ]
        ],
        [
            "DrawArc",
            [
                [
                    "Arc",
                    "arc"
                ],
                [
                    "GString?",
                    "name"
                ]
            ]
        ],
        [
            "DrawCircle",
            [
                [
                    "Circle",
                    "circle"
                ],
                [
                    "GString?",
                    "name"
                ]
            ]
        ],
        [
            "DrawLine",
            [
                [
                    "Line",
                    "line"
                ],
                [
                    "GString?",
                    "name"
                ]
            ]
        ],
        [
            "DrawPoint",
            [
                [
                    "GSPoint",
                    "point"
                ],
                [
                    "GString?",
                    "name"
                ]
            ]
        ],
        [
            "DrawRay",
            [
                [
                    "Ray",
                    "ray"
                ],
                [
                    "GString?",
                    "name"
                ]
            ]
        ],
        [
            "DrawSegment",
            [
                [
                    "Segment",
                    "segment"
                ],
                [
                    "GString?",
                    "name"
                ]
            ]
        ],
        [
            "DrawEnumerable",
            [
                [
                    "IEnumerable",
                    "values"
                ]
            ]
        ],
        [
            "DrawString",
            [
                [
                    "GString",
                    "gString"
                ]
            ]
        ],
        [
            "SetColor",
            [
                [
                    "string",
                    "newColor"
                ]
            ]
        ],
        [
            "Dispose",
            [
                [
                    "bool",
                    "disposing"
                ]
            ]
        ],
        [
            "exitToolStripMenuItem_Click",
            [
                [
                    "object",
                    "sender"
                ],
                [
                    "EventArgs",
                    "e"
                ]
            ]
        ],
        [
            "openToolStripMenuItem_Click",
            [
                [
                    "object",
                    "sender"
                ],
                [
                    "EventArgs",
                    "e"
                ]
            ]
        ],
        [
            "treeView1_NodeMouseDoubleClick",
            [
                [
                    "object",
                    "sender"
                ],
                [
                    "TreeNodeMouseClickEventArgs",
                    "e"
                ]
            ]
        ],
        [
            "Entry_TextChanged",
            [
                [
                    "object",
                    "sender"
                ],
                [
                    "EventArgs",
                    "e"
                ]
            ]
        ],
        [
            "Input_KeyDown",
            [
                [
                    "object",
                    "sender"
                ],
                [
                    "KeyEventArgs",
                    "e"
                ]
            ]
        ],
        [
            "Main",
            [
                [
                    "string[]",
                    "args"
                ]
            ]
        ],
        [
            "Print",
            [
                [
                    "object?",
                    "obj"
                ],
                [
                    "string",
                    "message"
                ]
            ]
        ],
        [
            "PrintError",
            [
                [
                    "GSharpException",
                    "obj"
                ]
            ]
        ],
        [
            "DrawArc",
            [
                [
                    "Arc",
                    "arc"
                ],
                [
                    "GString",
                    "name"
                ]
            ]
        ],
        [
            "DrawCircle",
            [
                [
                    "Circle",
                    "circle"
                ],
                [
                    "GString",
                    "name"
                ]
            ]
        ],
        [
            "DrawEnumerable",
            [
                [
                    "IEnumerable",
                    "values"
                ]
            ]
        ],
        [
            "DrawLine",
            [
                [
                    "Line",
                    "line"
                ],
                [
                    "GString",
                    "name"
                ]
            ]
        ],
        [
            "DrawPoint",
            [
                [
                    "GSPoint",
                    "point"
                ],
                [
                    "GString",
                    "name"
                ]
            ]
        ],
        [
            "DrawRay",
            [
                [
                    "Ray",
                    "ray"
                ],
                [
                    "GString",
                    "name"
                ]
            ]
        ],
        [
            "DrawSegment",
            [
                [
                    "Segment",
                    "segment"
                ],
                [
                    "GString",
                    "name"
                ]
            ]
        ],
        [
            "DrawString",
            [
                [
                    "GString",
                    "gString"
                ]
            ]
        ],
        [
            "SetColor",
            [
                [
                    "string",
                    "newColor"
                ]
            ]
        ]
    ],
    "variable_names": [
        [
            "double",
            "a2"
        ],
        [
            "double",
            "x2"
        ],
        [
            "double",
            "b1"
        ],
        [
            "double",
            "c1"
        ],
        [
            "double",
            "x"
        ],
        [
            "double",
            "b2"
        ],
        [
            "double",
            "theta"
        ],
        [
            "double",
            "b"
        ],
        [
            "List",
            "xi"
        ],
        [
            "ParameterConstrains",
            "constrainsY"
        ],
        [
            "double",
            "a"
        ],
        [
            "var",
            "aloneY"
        ],
        [
            "double",
            "c2"
        ],
        [
            "double",
            "yc"
        ],
        [
            "ParameterConstrains",
            "thetaConstrain"
        ],
        [
            "double",
            "x1"
        ],
        [
            "Equation",
            "equation"
        ],
        [
            "List",
            "yi"
        ],
        [
            "double",
            "xc"
        ],
        [
            "double",
            "determinant"
        ],
        [
            "List",
            "results"
        ],
        [
            "SimpleCuadraticEquation",
            "cuadratic"
        ],
        [
            "ParameterConstrains",
            "constrainsX"
        ],
        [
            "double",
            "y"
        ],
        [
            "var",
            "thetaConstrain"
        ],
        [
            "var",
            "aloneX"
        ],
        [
            "double",
            "c"
        ],
        [
            "List",
            "result"
        ],
        [
            "double",
            "a1"
        ],
        [
            "double",
            "discriminant"
        ],
        [
            "string",
            "line"
        ],
        [
            "bool",
            "isFigure"
        ],
        [
            "var",
            "currentScope"
        ],
        [
            "int",
            "i"
        ],
        [
            "double",
            "x2"
        ],
        [
            "GSPoint",
            "point2"
        ],
        [
            "double",
            "y2"
        ],
        [
            "double",
            "y1"
        ],
        [
            "GSNumber",
            "division"
        ],
        [
            "GSPoint",
            "point1"
        ],
        [
            "var",
            "value"
        ],
        [
            "double",
            "x1"
        ],
        [
            "IEnumerable",
            "newSequence"
        ],
        [
            "int",
            "newCount"
        ],
        [
            "int",
            "i"
        ],
        [
            "GSNumber",
            "start"
        ],
        [
            "IEnumerable",
            "rightValues"
        ],
        [
            "GSNumber",
            "end"
        ],
        [
            "var",
            "p1"
        ],
        [
            "double",
            "x2"
        ],
        [
            "var",
            "radius"
        ],
        [
            "var",
            "point2"
        ],
        [
            "double",
            "x"
        ],
        [
            "var",
            "x"
        ],
        [
            "double",
            "alpha"
        ],
        [
            "double",
            "theta"
        ],
        [
            "var",
            "startPoint"
        ],
        [
            "ParameterConstrains",
            "constrainsY"
        ],
        [
            "Random",
            "random"
        ],
        [
            "var",
            "point1"
        ],
        [
            "double",
            "startAngle"
        ],
        [
            "ParameterConstrains",
            "angleConstrain"
        ],
        [
            "var",
            "center"
        ],
        [
            "double",
            "yc"
        ],
        [
            "double",
            "sweepAngle"
        ],
        [
            "Vector",
            "movementVector"
        ],
        [
            "double",
            "x1"
        ],
        [
            "double",
            "xc"
        ],
        [
            "double",
            "limit"
        ],
        [
            "var",
            "p2"
        ],
        [
            "ParameterConstrains",
            "constrainsX"
        ],
        [
            "var",
            "y"
        ],
        [
            "double",
            "y"
        ],
        [
            "double",
            "limitX"
        ],
        [
            "double",
            "angle"
        ],
        [
            "double",
            "endAngle"
        ],
        [
            "var",
            "endPoint"
        ],
        [
            "double",
            "y1"
        ],
        [
            "double",
            "y2"
        ],
        [
            "double",
            "limitY"
        ],
        [
            "double",
            "y"
        ],
        [
            "double",
            "x"
        ],
        [
            "char",
            "c"
        ],
        [
            "TokenType",
            "type"
        ],
        [
            "object",
            "literal"
        ],
        [
            "string",
            "value"
        ],
        [
            "string",
            "text"
        ],
        [
            "string",
            "full"
        ],
        [
            "byte",
            "bytes"
        ],
        [
            "List",
            "statements"
        ],
        [
            "List",
            "tokens"
        ],
        [
            "Resolver",
            "resolver"
        ],
        [
            "TypeChecker",
            "typeChecker"
        ],
        [
            "Scanner",
            "scanner"
        ],
        [
            "Evaluator",
            "evaluator"
        ],
        [
            "Parser",
            "parser"
        ],
        [
            "string",
            "json"
        ],
        [
            "T",
            "obj"
        ],
        [
            "List",
            "expressions"
        ],
        [
            "GSharpExpression",
            "value"
        ],
        [
            "List",
            "variableNames"
        ],
        [
            "Container",
            "scopeContainer"
        ],
        [
            "string",
            "label"
        ],
        [
            "int",
            "i"
        ],
        [
            "GSharpExpression",
            "body"
        ],
        [
            "GSharpExpression",
            "elseBranch"
        ],
        [
            "GSharpExpression",
            "expressionToDraw"
        ],
        [
            "Container",
            "container"
        ],
        [
            "List",
            "sequenceValues"
        ],
        [
            "List",
            "statements"
        ],
        [
            "GSharpExpression",
            "expressionToPrint"
        ],
        [
            "Token",
            "previous"
        ],
        [
            "string",
            "name"
        ],
        [
            "GSharpExpression",
            "expr"
        ],
        [
            "bool",
            "ellipsisBetween"
        ],
        [
            "GSharpExpression",
            "expression"
        ],
        [
            "GSharpExpression",
            "rightBound"
        ],
        [
            "string",
            "colorName"
        ],
        [
            "GSharpExpression",
            "condition"
        ],
        [
            "string",
            "extension"
        ],
        [
            "List",
            "parameters"
        ],
        [
            "string",
            "libraryName"
        ],
        [
            "Token",
            "oper"
        ],
        [
            "GSharpExpression",
            "right"
        ],
        [
            "GSharpExpression",
            "thenBranch"
        ],
        [
            "GSharpExpression",
            "leftBound"
        ],
        [
            "List",
            "arguments"
        ],
        [
            "GSNumber",
            "left"
        ],
        [
            "BinaryOverloadInfo",
            "sequenceConcatInfo"
        ],
        [
            "BinaryOverloadInfo",
            "naturalGreaterMeasureInfo"
        ],
        [
            "BinaryOverloadInfo",
            "numberSumInfo"
        ],
        [
            "ISequenciable",
            "left"
        ],
        [
            "var",
            "result"
        ],
        [
            "BinaryOverloadInfo",
            "divideNumbersInfo"
        ],
        [
            "BinaryOverloadInfo",
            "measureUnequalNaturalInfo"
        ],
        [
            "BinaryOverloadInfo",
            "measureLowerNaturalInfo"
        ],
        [
            "BinaryOverloadInfo",
            "multiplyNumbersInfo"
        ],
        [
            "BinaryOverloadInfo",
            "compareMeasuresInfo"
        ],
        [
            "BinaryOverloadInfo",
            "measureSumInfo"
        ],
        [
            "BinaryOverloadInfo",
            "divideMeasuresInfo"
        ],
        [
            "BinaryOverloadInfo",
            "naturalUnequalMeasureInfo"
        ],
        [
            "BinaryOverloadInfo",
            "naturalTimesMeasureInfo"
        ],
        [
            "BinaryOverloadInfo",
            "measureTimesNaturalInfo"
        ],
        [
            "GSNumber",
            "right"
        ],
        [
            "BinaryOverloadInfo",
            "compareNumbersInfo"
        ],
        [
            "BinaryOverloadInfo",
            "naturalLowerMeasureInfo"
        ],
        [
            "BinaryOverloadInfo",
            "naturalLowerEqualMeasureInfo"
        ],
        [
            "BinaryOverloadInfo",
            "info"
        ],
        [
            "ISequenciable",
            "right"
        ],
        [
            "BinaryOverloadInfo",
            "measureLowerEqualNaturalInfo"
        ],
        [
            "ISequenciable",
            "result"
        ],
        [
            "BinaryOverloadInfo",
            "measureGreaterEqualNaturalInfo"
        ],
        [
            "BinaryOverloadInfo",
            "measureGreaterNaturalInfo"
        ],
        [
            "bool",
            "result"
        ],
        [
            "BinaryOverloadInfo",
            "measureEqualNaturalInfo"
        ],
        [
            "BinaryOverloadInfo",
            "naturalGreaterEqualMeasureInfo"
        ],
        [
            "BinaryOverloadInfo",
            "naturalEqualMeasureInfo"
        ],
        [
            "List",
            "list"
        ],
        [
            "List",
            "expressions"
        ],
        [
            "double",
            "end"
        ],
        [
            "int",
            "count"
        ],
        [
            "int",
            "i"
        ],
        [
            "double",
            "i"
        ],
        [
            "GSharpExpression",
            "leftBound"
        ],
        [
            "double",
            "bound"
        ],
        [
            "double",
            "start"
        ],
        [
            "UnaryOverloadInfo",
            "info"
        ],
        [
            "var",
            "builder"
        ],
        [
            "string",
            "path"
        ],
        [
            "var",
            "file"
        ],
        [
            "var",
            "result"
        ],
        [
            "var",
            "app"
        ],
        [
            "double",
            "x2"
        ],
        [
            "float",
            "y1"
        ],
        [
            "float",
            "y2"
        ],
        [
            "double",
            "verticalY"
        ],
        [
            "double",
            "finalX2"
        ],
        [
            "Font",
            "font"
        ],
        [
            "double",
            "x"
        ],
        [
            "double",
            "radius"
        ],
        [
            "double",
            "m"
        ],
        [
            "float",
            "x2"
        ],
        [
            "double",
            "finalX1"
        ],
        [
            "double",
            "finalY1"
        ],
        [
            "double",
            "finalY"
        ],
        [
            "float",
            "radius"
        ],
        [
            "double",
            "startAngle"
        ],
        [
            "float",
            "x"
        ],
        [
            "Brush",
            "brush"
        ],
        [
            "double",
            "yc"
        ],
        [
            "double",
            "sweepAngle"
        ],
        [
            "double",
            "n"
        ],
        [
            "double",
            "x1"
        ],
        [
            "double",
            "finalY2"
        ],
        [
            "double",
            "xc"
        ],
        [
            "double",
            "xMessage"
        ],
        [
            "float",
            "x1"
        ],
        [
            "double",
            "topLeftX"
        ],
        [
            "double",
            "finalX"
        ],
        [
            "double",
            "y"
        ],
        [
            "float",
            "verticalY2"
        ],
        [
            "float",
            "verticalY1"
        ],
        [
            "double",
            "angle"
        ],
        [
            "double",
            "endAngle"
        ],
        [
            "float",
            "finalX"
        ],
        [
            "string",
            "s"
        ],
        [
            "double",
            "y1"
        ],
        [
            "double",
            "y2"
        ],
        [
            "float",
            "y"
        ],
        [
            "double",
            "yMessage"
        ],
        [
            "double",
            "topLeftY"
        ],
        [
            "System",
            "resources"
        ],
        [
            "var",
            "match"
        ],
        [
            "MatchCollection",
            "functionsMatch"
        ],
        [
            "string",
            "keywords"
        ],
        [
            "PictureDrawer",
            "drawer"
        ],
        [
            "int",
            "originalIndex"
        ],
        [
            "List",
            "statements"
        ],
        [
            "Color",
            "originalColor"
        ],
        [
            "string",
            "tertiaryOperators"
        ],
        [
            "var",
            "directory"
        ],
        [
            "var",
            "node"
        ],
        [
            "string",
            "strings"
        ],
        [
            "MatchCollection",
            "variablesMatch"
        ],
        [
            "var",
            "countcall"
        ],
        [
            "Resolver",
            "resolver"
        ],
        [
            "MatchCollection",
            "tertiaryOperatorsMatch"
        ],
        [
            "string",
            "numbers"
        ],
        [
            "int",
            "originalLength"
        ],
        [
            "Evaluator",
            "evaluator"
        ],
        [
            "MatchCollection",
            "numbersMatch"
        ],
        [
            "DirectoryInfo",
            "info"
        ],
        [
            "FileInfo",
            "info"
        ],
        [
            "MatchCollection",
            "keywordsMatch"
        ],
        [
            "MatchCollection",
            "stringsMatch"
        ],
        [
            "TypeChecker",
            "typeChecker"
        ],
        [
            "var",
            "count"
        ],
        [
            "var",
            "file"
        ],
        [
            "string",
            "variables"
        ],
        [
            "MatchCollection",
            "commentsMatch"
        ],
        [
            "Bitmap",
            "image"
        ],
        [
            "string",
            "functions"
        ],
        [
            "string",
            "comments"
        ],
        [
            "global",
            "temp"
        ],
        [
            "string",
            "path"
        ]
    ],
    "method_names": [
        "InitializeComponent",
        "Dispose",
        "DrawCircle",
        "DrawString",
        "DrawSequence",
        "DrawArc",
        "DrawPoint",
        "DrawLine",
        "DrawRay",
        "DrawSegment",
        "Main",
        "IsInRange",
        "SolveCircularLinearSystem",
        "FilterInRangeSolutions",
        "SubstituteVariable",
        "EvaluateEcuation",
        "SolveCircularSystem",
        "SolveLinearSystem",
        "AcceptAllConstrains",
        "Solve",
        "PrintErrors",
        "Print",
        "PrintError",
        "DrawCircle",
        "GetRandomPoint",
        "DrawString",
        "DrawSequence",
        "SetColor",
        "DrawArc",
        "ResetColor",
        "DrawLine",
        "DrawPoint",
        "Reset",
        "Draw",
        "DrawEnumerable",
        "DrawRay",
        "DrawSegment",
        "ToString",
        "SetIsFigureProperty",
        "ConvertToType",
        "AccessVariable",
        "DeclareVariable",
        "DefineFunction",
        "DefineVariable",
        "BeginScope",
        "BindValue",
        "DeclareFunction",
        "EndScope",
        "ToValueOfTruth",
        "GetRandomInstance",
        "GetInstanceFromParameters",
        "ToString",
        "GetInstanceFromParameters",
        "GetRandomInstance",
        "InfiniteRange",
        "GetCount",
        "GetTail",
        "AttachSequence",
        "FiniteRange",
        "GetSequence",
        "GetRandomNumbers",
        "GetRandomPoint",
        "GetLineAngleRad",
        "ToString",
        "Draw",
        "GetRandomInstance",
        "GetInstanceFromParameters",
        "GetNormalized",
        "IsDigit",
        "_String",
        "Identifier",
        "Number",
        "ScanTokens",
        "Match",
        "IsAtEnd",
        "Advance",
        "Substring",
        "SkipLine",
        "IsAlpha",
        "PeekNext",
        "IsAlphaNumeric",
        "Peek",
        "AddToken",
        "ScanToken",
        "RunLibrary",
        "Scan",
        "Run",
        "RunFile",
        "RunLibraryFile",
        "InitializeGSharpStandard",
        "ToString",
        "LexicalError",
        "SemanticError",
        "SyntaxError",
        "Report",
        "SerializeObject",
        "DeserializeObject",
        "ParseConstantDeclaration",
        "Parse",
        "ParseLetStatement",
        "ParseColorStatement",
        "ParseEquality",
        "Peek",
        "Check",
        "ParseImportStatement",
        "TryFind",
        "ParseUnary",
        "ParsePrintStatement",
        "ParseTerm",
        "ParseComparison",
        "Advance",
        "Synchronize",
        "CheckAhead",
        "ParseStatement",
        "ParseExpressionStatement",
        "ParseLogicalOr",
        "ParseExpression",
        "ParseDrawStatement",
        "Previous",
        "InferType",
        "Match",
        "ParseLogicalAnd",
        "ParsePrimary",
        "TryFindBefore",
        "ParseIfStatement",
        "ParseDeclaration",
        "Consume",
        "ParseReceiverStatement",
        "IsAtEnd",
        "ParseFactor",
        "ParseFunctionDeclaration",
        "LoadLibrary",
        "GetEnvironments",
        "Accept",
        "Accept",
        "VisitImportStatement",
        "VisitColorStatent",
        "VisitPrintStatement",
        "VisitFunctionDeclaration",
        "VisitConstantDeclaration",
        "VisitStatements",
        "VisitDrawStatement",
        "VisitExpressionStatement",
        "VisitRecieverStatement",
        "VisitRestoreStatement",
        "Accept",
        "GetType",
        "GetArgumentsAmount",
        "Evaluate",
        "Accept",
        "Accept",
        "Accept",
        "Accept",
        "Accept",
        "Accept",
        "GetLogic",
        "GetArithmetic",
        "IsAnAcceptedOverload",
        "VisitUnaryOperation",
        "VisitBinaryOperation",
        "VisitLetIn",
        "VisitLiteralNumber",
        "VisitLiteralSequence",
        "VisitLiteralUndefined",
        "VisitFunctionCall",
        "VisitIfThenElse",
        "VisitLiteralString",
        "VisitConstant",
        "GetSequenceValue",
        "ToGSharpObjectList",
        "Accept",
        "InfiniteRange",
        "GetTail",
        "ChoppSequence",
        "FiniteRange",
        "ToGSharpObjectSequence",
        "Accept",
        "GetLogic",
        "GetArithmetic",
        "IsAnAcceptedOverload",
        "Accept",
        "Evaluate",
        "Evaluate",
        "Evaluate",
        "CreateMauiApp",
        "OnCounterClicked",
        "DrawCircle",
        "DrawString",
        "PickFile",
        "DrawSequence",
        "SetColor",
        "DrawArc",
        "ResetColor",
        "DrawLine",
        "DrawPoint",
        "Draw",
        "Reset",
        "DrawEnumerable",
        "DrawRay",
        "DrawSegment",
        "OpenFolder",
        "CreateMauiApp",
        "Main",
        "CreateMauiApp",
        "CreateMauiApp",
        "Main",
        "CreateMauiApp",
        "CreateMauiApp",
        "Main",
        "DrawCircle",
        "GetLineAngleDeg",
        "DrawString",
        "WriteMessage",
        "DrawSequence",
        "SetColor",
        "DrawArc",
        "ResetColor",
        "DrawLine",
        "DrawPoint",
        "Reset",
        "DrawEnumerable",
        "DrawRay",
        "DrawSegment",
        "InitializeComponent",
        "Dispose",
        "openToolStripMenuItem_Click",
        "Entry_TextChanged",
        "Input_KeyDown",
        "Test",
        "exitToolStripMenuItem_Click",
        "treeView1_NodeMouseDoubleClick",
        "Main",
        "DrawCircle",
        "DrawString",
        "DrawSequence",
        "PrintError",
        "SetColor",
        "DrawArc",
        "ResetColor",
        "DrawLine",
        "DrawPoint",
        "Reset",
        "Print",
        "DrawEnumerable",
        "DrawRay",
        "DrawSegment",
        "Main"
    ],
    "method_return_types": [
        [
            "InitializeComponent",
            "void"
        ],
        [
            "Dispose",
            "void"
        ],
        [
            "DrawRay",
            "void"
        ],
        [
            "DrawSegment",
            "void"
        ],
        [
            "DrawCircle",
            "void"
        ],
        [
            "DrawLine",
            "void"
        ],
        [
            "DrawPoint",
            "void"
        ],
        [
            "DrawSequence",
            "void"
        ],
        [
            "DrawArc",
            "void"
        ],
        [
            "DrawString",
            "void"
        ],
        [
            "Main",
            "void"
        ],
        [
            "Solve",
            "List"
        ],
        [
            "IsInRange",
            "bool"
        ],
        [
            "SubstituteVariable",
            "SimpleCuadraticEquation"
        ],
        [
            "AcceptAllConstrains",
            "bool"
        ],
        [
            "SolveCircularSystem",
            "IEnumerable"
        ],
        [
            "FilterInRangeSolutions",
            "IEnumerable"
        ],
        [
            "EvaluateEcuation",
            "double"
        ],
        [
            "SolveLinearSystem",
            "List"
        ],
        [
            "SolveCircularLinearSystem",
            "List"
        ],
        [
            "PrintErrors",
            "void"
        ],
        [
            "Print",
            "void"
        ],
        [
            "PrintError",
            "void"
        ],
        [
            "Reset",
            "void"
        ],
        [
            "DrawRay",
            "void"
        ],
        [
            "DrawSegment",
            "void"
        ],
        [
            "DrawEnumerable",
            "void"
        ],
        [
            "GetRandomPoint",
            "GSPoint"
        ],
        [
            "SetColor",
            "void"
        ],
        [
            "DrawCircle",
            "void"
        ],
        [
            "DrawLine",
            "void"
        ],
        [
            "DrawPoint",
            "void"
        ],
        [
            "Draw",
            "void"
        ],
        [
            "DrawSequence",
            "void"
        ],
        [
            "DrawArc",
            "void"
        ],
        [
            "ResetColor",
            "void"
        ],
        [
            "DrawString",
            "void"
        ],
        [
            "ToString",
            "string"
        ],
        [
            "SetIsFigureProperty",
            "void"
        ],
        [
            "ConvertToType",
            "Type"
        ],
        [
            "AccessVariable",
            "Var"
        ],
        [
            "EndScope",
            "void"
        ],
        [
            "DeclareVariable",
            "void"
        ],
        [
            "DeclareFunction",
            "void"
        ],
        [
            "BeginScope",
            "void"
        ],
        [
            "DefineFunction",
            "void"
        ],
        [
            "BindValue",
            "void"
        ],
        [
            "DefineVariable",
            "void"
        ],
        [
            "ToValueOfTruth",
            "GSNumber"
        ],
        [
            "ToString",
            "string"
        ],
        [
            "GetInstanceFromParameters",
            "GSObject"
        ],
        [
            "GetInstanceFromParameters",
            "Measure"
        ],
        [
            "GetRandomInstance",
            "GSObject"
        ],
        [
            "GetRandomInstance",
            "Measure"
        ],
        [
            "GetInstanceFromParameters",
            "T"
        ],
        [
            "GetRandomInstance",
            "T"
        ],
        [
            "AttachSequence",
            "ISequenciable"
        ],
        [
            "InfiniteRange",
            "IEnumerable"
        ],
        [
            "GetCount",
            "int"
        ],
        [
            "GetTail",
            "GSharpSequence"
        ],
        [
            "GetSequence",
            "IEnumerable"
        ],
        [
            "GetRandomNumbers",
            "GSharpSequence"
        ],
        [
            "GetTail",
            "ISequenciable"
        ],
        [
            "FiniteRange",
            "IEnumerable"
        ],
        [
            "GetInstanceFromParameters",
            "Circle"
        ],
        [
            "GetRandomPoint",
            "GSPoint"
        ],
        [
            "ToString",
            "string"
        ],
        [
            "GetRandomInstance",
            "Line"
        ],
        [
            "GetRandomInstance",
            "Circle"
        ],
        [
            "GetInstanceFromParameters",
            "Arc"
        ],
        [
            "GetInstanceFromParameters",
            "Segment"
        ],
        [
            "Draw",
            "void"
        ],
        [
            "GetRandomInstance",
            "Arc"
        ],
        [
            "GetLineAngleRad",
            "double"
        ],
        [
            "GetInstanceFromParameters",
            "Line"
        ],
        [
            "GetRandomInstance",
            "Segment"
        ],
        [
            "GetInstanceFromParameters",
            "Ray"
        ],
        [
            "GetInstanceFromParameters",
            "GSPoint"
        ],
        [
            "GetRandomInstance",
            "Ray"
        ],
        [
            "GetRandomInstance",
            "GSPoint"
        ],
        [
            "GetNormalized",
            "Vector"
        ],
        [
            "IsAlphaNumeric",
            "bool"
        ],
        [
            "IsAlpha",
            "bool"
        ],
        [
            "PeekNext",
            "char"
        ],
        [
            "IsAtEnd",
            "bool"
        ],
        [
            "Substring",
            "string"
        ],
        [
            "ScanTokens",
            "List"
        ],
        [
            "_String",
            "void"
        ],
        [
            "Peek",
            "char"
        ],
        [
            "AddToken",
            "void"
        ],
        [
            "Number",
            "void"
        ],
        [
            "IsDigit",
            "bool"
        ],
        [
            "Identifier",
            "void"
        ],
        [
            "ScanToken",
            "void"
        ],
        [
            "SkipLine",
            "void"
        ],
        [
            "Advance",
            "char"
        ],
        [
            "Match",
            "bool"
        ],
        [
            "RunLibrary",
            "Container"
        ],
        [
            "Scan",
            "List"
        ],
        [
            "RunLibraryFile",
            "Container"
        ],
        [
            "InitializeGSharpStandard",
            "void"
        ],
        [
            "Run",
            "void"
        ],
        [
            "RunFile",
            "void"
        ],
        [
            "ToString",
            "string"
        ],
        [
            "SemanticError",
            "void"
        ],
        [
            "LexicalError",
            "void"
        ],
        [
            "Report",
            "void"
        ],
        [
            "SyntaxError",
            "void"
        ],
        [
            "DeserializeObject",
            "T"
        ],
        [
            "SerializeObject",
            "void"
        ],
        [
            "Synchronize",
            "void"
        ],
        [
            "InferType",
            "GTypeNames"
        ],
        [
            "IsAtEnd",
            "bool"
        ],
        [
            "Check",
            "bool"
        ],
        [
            "ParsePrimary",
            "GSharpExpression"
        ],
        [
            "ParseFactor",
            "GSharpExpression"
        ],
        [
            "Peek",
            "Token"
        ],
        [
            "Parse",
            "List"
        ],
        [
            "Advance",
            "Token"
        ],
        [
            "ParseImportStatement",
            "Statement"
        ],
        [
            "ParseExpressionStatement",
            "Statement"
        ],
        [
            "ParseLogicalOr",
            "GSharpExpression"
        ],
        [
            "ParseColorStatement",
            "Statement"
        ],
        [
            "ParseTerm",
            "GSharpExpression"
        ],
        [
            "ParseLetStatement",
            "GSharpExpression"
        ],
        [
            "CheckAhead",
            "bool"
        ],
        [
            "ParseEquality",
            "GSharpExpression"
        ],
        [
            "ParseDeclaration",
            "Statement"
        ],
        [
            "ParsePrintStatement",
            "Statement"
        ],
        [
            "ParseUnary",
            "GSharpExpression"
        ],
        [
            "ParseFunctionDeclaration",
            "Statement"
        ],
        [
            "ParseStatement",
            "Statement"
        ],
        [
            "Consume",
            "Token"
        ],
        [
            "ParseConstantDeclaration",
            "Statement"
        ],
        [
            "TryFindBefore",
            "bool"
        ],
        [
            "ParseDrawStatement",
            "Statement"
        ],
        [
            "ParseLogicalAnd",
            "GSharpExpression"
        ],
        [
            "Previous",
            "Token"
        ],
        [
            "ParseReceiverStatement",
            "Statement"
        ],
        [
            "TryFind",
            "bool"
        ],
        [
            "ParseComparison",
            "GSharpExpression"
        ],
        [
            "ParseIfStatement",
            "GSharpExpression"
        ],
        [
            "ParseExpression",
            "GSharpExpression"
        ],
        [
            "Match",
            "bool"
        ],
        [
            "GetEnvironments",
            "Container"
        ],
        [
            "LoadLibrary",
            "Container"
        ],
        [
            "Accept",
            "void"
        ],
        [
            "Accept",
            "void"
        ],
        [
            "VisitStatements",
            "void"
        ],
        [
            "VisitDrawStatement",
            "void"
        ],
        [
            "VisitRecieverStatement",
            "void"
        ],
        [
            "VisitImportStatement",
            "void"
        ],
        [
            "VisitPrintStatement",
            "void"
        ],
        [
            "VisitColorStatent",
            "void"
        ],
        [
            "VisitRestoreStatement",
            "void"
        ],
        [
            "VisitConstantDeclaration",
            "void"
        ],
        [
            "VisitExpressionStatement",
            "void"
        ],
        [
            "VisitFunctionDeclaration",
            "void"
        ],
        [
            "GetArgumentsAmount",
            "int"
        ],
        [
            "GetType",
            "GSharpType"
        ],
        [
            "Evaluate",
            "GSObject"
        ],
        [
            "Accept",
            "void"
        ],
        [
            "Accept",
            "void"
        ],
        [
            "Accept",
            "void"
        ],
        [
            "Accept",
            "T"
        ],
        [
            "Accept",
            "T"
        ],
        [
            "Accept",
            "T"
        ],
        [
            "GetLogic",
            "BinaryOverloadInfo"
        ],
        [
            "Accept",
            "T"
        ],
        [
            "IsAnAcceptedOverload",
            "bool"
        ],
        [
            "GetArithmetic",
            "BinaryOverloadInfo"
        ],
        [
            "VisitLiteralNumber",
            "T"
        ],
        [
            "VisitBinaryOperation",
            "T"
        ],
        [
            "VisitLetIn",
            "T"
        ],
        [
            "VisitLiteralString",
            "T"
        ],
        [
            "VisitUnaryOperation",
            "T"
        ],
        [
            "VisitLiteralSequence",
            "T"
        ],
        [
            "VisitConstant",
            "T"
        ],
        [
            "VisitLiteralUndefined",
            "T"
        ],
        [
            "VisitIfThenElse",
            "T"
        ],
        [
            "VisitFunctionCall",
            "T"
        ],
        [
            "InfiniteRange",
            "IEnumerable"
        ],
        [
            "ToGSharpObjectList",
            "List"
        ],
        [
            "ToGSharpObjectSequence",
            "IEnumerable"
        ],
        [
            "GetTail",
            "LiteralSequence"
        ],
        [
            "Accept",
            "T"
        ],
        [
            "GetSequenceValue",
            "GSequence"
        ],
        [
            "ChoppSequence",
            "IEnumerable"
        ],
        [
            "FiniteRange",
            "IEnumerable"
        ],
        [
            "GetLogic",
            "UnaryOverloadInfo"
        ],
        [
            "Accept",
            "T"
        ],
        [
            "IsAnAcceptedOverload",
            "bool"
        ],
        [
            "GetArithmetic",
            "UnaryOverloadInfo"
        ],
        [
            "Accept",
            "T"
        ],
        [
            "Evaluate",
            "GSObject"
        ],
        [
            "Evaluate",
            "GSObject"
        ],
        [
            "Evaluate",
            "GSObject"
        ],
        [
            "CreateMauiApp",
            "MauiApp"
        ],
        [
            "OnCounterClicked",
            "void"
        ],
        [
            "Reset",
            "void"
        ],
        [
            "DrawRay",
            "void"
        ],
        [
            "DrawSegment",
            "void"
        ],
        [
            "DrawEnumerable",
            "void"
        ],
        [
            "SetColor",
            "void"
        ],
        [
            "DrawCircle",
            "void"
        ],
        [
            "DrawLine",
            "void"
        ],
        [
            "DrawPoint",
            "void"
        ],
        [
            "Draw",
            "void"
        ],
        [
            "PickFile",
            "Task"
        ],
        [
            "DrawSequence",
            "void"
        ],
        [
            "DrawArc",
            "void"
        ],
        [
            "ResetColor",
            "void"
        ],
        [
            "DrawString",
            "void"
        ],
        [
            "OpenFolder",
            "void"
        ],
        [
            "CreateMauiApp",
            "MauiApp"
        ],
        [
            "Main",
            "void"
        ],
        [
            "CreateMauiApp",
            "MauiApp"
        ],
        [
            "Main",
            "void"
        ],
        [
            "CreateMauiApp",
            "MauiApp"
        ],
        [
            "CreateMauiApp",
            "MauiApp"
        ],
        [
            "CreateMauiApp",
            "MauiApp"
        ],
        [
            "Main",
            "void"
        ],
        [
            "Reset",
            "void"
        ],
        [
            "DrawRay",
            "void"
        ],
        [
            "DrawSegment",
            "void"
        ],
        [
            "DrawEnumerable",
            "void"
        ],
        [
            "SetColor",
            "void"
        ],
        [
            "DrawCircle",
            "void"
        ],
        [
            "DrawLine",
            "void"
        ],
        [
            "DrawPoint",
            "void"
        ],
        [
            "GetLineAngleDeg",
            "double"
        ],
        [
            "DrawSequence",
            "void"
        ],
        [
            "DrawArc",
            "void"
        ],
        [
            "WriteMessage",
            "void"
        ],
        [
            "ResetColor",
            "void"
        ],
        [
            "DrawString",
            "void"
        ],
        [
            "InitializeComponent",
            "void"
        ],
        [
            "Dispose",
            "void"
        ],
        [
            "exitToolStripMenuItem_Click",
            "void"
        ],
        [
            "Test",
            "void"
        ],
        [
            "Entry_TextChanged",
            "void"
        ],
        [
            "treeView1_NodeMouseDoubleClick",
            "void"
        ],
        [
            "openToolStripMenuItem_Click",
            "void"
        ],
        [
            "Input_KeyDown",
            "void"
        ],
        [
            "Main",
            "void"
        ],
        [
            "Reset",
            "void"
        ],
        [
            "DrawRay",
            "void"
        ],
        [
            "DrawSegment",
            "void"
        ],
        [
            "DrawEnumerable",
            "void"
        ],
        [
            "PrintError",
            "void"
        ],
        [
            "DrawCircle",
            "void"
        ],
        [
            "SetColor",
            "void"
        ],
        [
            "DrawLine",
            "void"
        ],
        [
            "DrawPoint",
            "void"
        ],
        [
            "DrawSequence",
            "void"
        ],
        [
            "DrawArc",
            "void"
        ],
        [
            "Print",
            "void"
        ],
        [
            "ResetColor",
            "void"
        ],
        [
            "DrawString",
            "void"
        ],
        [
            "Main",
            "void"
        ]
    ],
    "class_names": [
        "Form1",
        "Form1",
        "Drawer",
        "Program",
        "ParameterConstrains",
        "Equation",
        "EquationSolver",
        "SimpleCuadraticEquation",
        "GSharpException",
        "GSharpType",
        "Context",
        "Evaluator",
        "Resolver",
        "GSNumber",
        "Measure",
        "GString",
        "GSObject",
        "ArraySequence",
        "GSequence",
        "GSharpSequence",
        "FiniteIntegerSequence",
        "InfiniteIntegerSequence",
        "Line",
        "Ray",
        "Circle",
        "Arc",
        "GSPoint",
        "Segment",
        "Vector",
        "Scanner",
        "GSharp",
        "Token",
        "ErrorHandler",
        "Error",
        "JsonHelper",
        "Parser",
        "ImportHandler",
        "Container",
        "Reciever",
        "Import",
        "DeclaredFunction",
        "ConstantsDeclaration",
        "FunctionDeclaration",
        "Statement",
        "PrintStatement",
        "ColorStatement",
        "DrawStatement",
        "Restore",
        "ExpressionStatement",
        "FunctionCall",
        "LiteralUndefined",
        "LiteralString",
        "IfThenElse",
        "LetIn",
        "Conjunction",
        "BinaryOverloadInfo",
        "Subtraction",
        "Addition",
        "Power",
        "GreaterEqualThan",
        "Division",
        "LowerThan",
        "Module",
        "Equal",
        "BinaryOperation",
        "Multiplication",
        "Disjunction",
        "UnEqual",
        "LowerEqualThan",
        "GreaterThan",
        "GSharpExpression",
        "LiteralSequence",
        "LiteralArrayExpression",
        "InfiniteRangeExpression",
        "FiniteRangeExpression",
        "LiteralNumber",
        "UnaryOperation",
        "Positive",
        "Negation",
        "Negative",
        "UnaryOverloadInfo",
        "Constant",
        "Grouping",
        "CountFunction",
        "RandomsFunction",
        "MeasureFunction",
        "ArcGetter",
        "RayGetter",
        "PointGetter",
        "SegmentGetter",
        "CircleGetter",
        "LineGetter",
        "MauiProgram",
        "MainPage",
        "AppShell",
        "App",
        "Folder",
        "Figure",
        "CanvasDrawer",
        "DesktopMainViewModel",
        "DesktopMainView",
        "AppDelegate",
        "Program",
        "App",
        "Program",
        "MainApplication",
        "MainActivity",
        "AppDelegate",
        "Program",
        "PictureDrawer",
        "Aplication",
        "Aplication",
        "Program",
        "Resources",
        "DrawerDummie",
        "ConsoleUI",
        "Program"
    ],
    "interface_names": [
        "IWalleUI",
        "IDrawable",
        "IDrawer",
        "IUserParameter",
        "IRandomable",
        "ISequenciable",
        "IStatementVisitor",
        "ICallable",
        "IExpressionVisitor"
    ],
    "delegate_names": [
        [
            "BinaryFunc",
            "GSObject"
        ],
        [
            "TypeGetter",
            "GSharpType"
        ],
        [
            "UnaryFunc",
            "GSObject"
        ]
    ],
    "node_count": {
        "Compilation_unitContext": 74,
        "Namespace_member_declarationsContext": 69,
        "Namespace_member_declarationContext": 428,
        "Namespace_declarationContext": 67,
        "TerminalNodeImpl": 26048,
        "Qualified_identifierContext": 67,
        "IdentifierContext": 8535,
        "Namespace_bodyContext": 67,
        "Type_declarationContext": 361,
        "All_member_modifiersContext": 940,
        "All_member_modifierContext": 1185,
        "Class_definitionContext": 117,
        "Class_bodyContext": 126,
        "Class_member_declarationsContext": 124,
        "Class_member_declarationContext": 693,
        "Common_member_declarationContext": 693,
        "Typed_member_declarationContext": 419,
        "Type_Context": 2081,
        "Base_typeContext": 2123,
        "Class_typeContext": 1774,
        "Namespace_or_type_nameContext": 1925,
        "Field_declarationContext": 96,
        "Variable_declaratorsContext": 96,
        "Variable_declaratorContext": 96,
        "Variable_initializerContext": 41,
        "ExpressionContext": 4453,
        "Non_assignment_expressionContext": 3528,
        "Conditional_expressionContext": 3486,
        "Null_coalescing_expressionContext": 3487,
        "Conditional_or_expressionContext": 3487,
        "Conditional_and_expressionContext": 3502,
        "Inclusive_or_expressionContext": 3526,
        "Exclusive_or_expressionContext": 3542,
        "And_expressionContext": 3542,
        "Equality_expressionContext": 3542,
        "Relational_expressionContext": 3635,
        "Shift_expressionContext": 3696,
        "Additive_expressionContext": 3696,
        "Multiplicative_expressionContext": 3807,
        "Switch_expressionContext": 3894,
        "Range_expressionContext": 3894,
        "Unary_expressionContext": 4639,
        "Primary_expressionContext": 4371,
        "LiteralExpressionContext": 827,
        "LiteralContext": 827,
        "Method_declarationContext": 298,
        "Method_member_nameContext": 298,
        "Formal_parameter_listContext": 329,
        "Fixed_parametersContext": 326,
        "Fixed_parameterContext": 551,
        "Arg_declarationContext": 601,
        "Simple_typeContext": 405,
        "Method_bodyContext": 219,
        "BlockContext": 434,
        "Statement_listContext": 479,
        "StatementContext": 2381,
        "Embedded_statementContext": 1748,
        "IfStatementContext": 179,
        "SimpleNameExpressionContext": 3073,
        "ParenthesisExpressionsContext": 132,
        "If_bodyContext": 209,
        "ExpressionStatementContext": 1255,
        "Member_accessContext": 1394,
        "Method_invocationContext": 680,
        "BaseAccessExpressionContext": 2,
        "Argument_listContext": 648,
        "ArgumentContext": 1176,
        "AssignmentContext": 476,
        "Assignment_operatorContext": 476,
        "ObjectCreationExpressionContext": 227,
        "Object_creation_expressionContext": 222,
        "String_literalContext": 284,
        "Boolean_literalContext": 86,
        "Using_directivesContext": 42,
        "UsingNamespaceDirectiveContext": 82,
        "Class_baseContext": 89,
        "Constructor_declarationContext": 89,
        "BodyContext": 87,
        "ErrorNodeImpl": 8094,
        "Right_arrowContext": 178,
        "Throwable_expressionContext": 236,
        "Throw_expressionContext": 18,
        "Cast_expressionContext": 208,
        "Numeric_typeContext": 339,
        "Floating_point_typeContext": 236,
        "AttributesContext": 25,
        "Attribute_sectionContext": 27,
        "Attribute_listContext": 42,
        "AttributeContext": 42,
        "ThisReferenceExpressionContext": 49,
        "IsTypeContext": 39,
        "TupleExpressionContext": 30,
        "Property_declarationContext": 120,
        "Member_nameContext": 120,
        "Accessor_declarationsContext": 109,
        "Accessor_bodyContext": 156,
        "Set_accessor_declarationContext": 47,
        "Tuple_typeContext": 9,
        "Tuple_elementContext": 16,
        "Type_argument_listContext": 163,
        "DeclarationStatementContext": 491,
        "Local_variable_declarationContext": 434,
        "Local_variable_typeContext": 460,
        "Local_variable_declaratorContext": 434,
        "Local_variable_initializerContext": 423,
        "Lambda_expressionContext": 42,
        "Anonymous_function_signatureContext": 42,
        "Anonymous_function_bodyContext": 42,
        "ReturnStatementContext": 241,
        "ForeachStatementContext": 26,
        "TheEmptyStatementContext": 29,
        "Rank_specifierContext": 16,
        "Array_initializerContext": 2,
        "ContinueStatementContext": 4,
        "Interface_definitionContext": 9,
        "Integral_typeContext": 103,
        "Type_parameter_listContext": 20,
        "Type_parameterContext": 21,
        "Type_parameter_constraints_clausesContext": 7,
        "Type_parameter_constraints_clauseContext": 7,
        "Type_parameter_constraintsContext": 7,
        "Primary_constraintContext": 7,
        "Secondary_constraintsContext": 4,
        "Accessor_modifierContext": 36,
        "Switch_expression_armsContext": 1,
        "Switch_expression_armContext": 12,
        "TypeofExpressionContext": 17,
        "Unbound_type_nameContext": 17,
        "Bracket_expressionContext": 34,
        "Indexer_argumentContext": 34,
        "ForStatementContext": 6,
        "For_initializerContext": 6,
        "For_iteratorContext": 6,
        "Operator_declarationContext": 25,
        "Overloadable_operatorContext": 25,
        "Variant_type_parameter_listContext": 3,
        "Variant_type_parameterContext": 3,
        "Constructor_initializerContext": 4,
        "MemberAccessExpressionContext": 13,
        "Predefined_typeContext": 11,
        "ThrowStatementContext": 21,
        "YieldStatementContext": 7,
        "WhileStatementContext": 17,
        "Interpolated_regular_stringContext": 1,
        "Interpolated_regular_string_partContext": 1,
        "Global_attribute_sectionContext": 16,
        "Global_attribute_targetContext": 16,
        "Qualified_alias_memberContext": 18,
        "Attribute_argumentContext": 29,
        "Object_or_collection_initializerContext": 7,
        "Collection_initializerContext": 5,
        "Element_initializerContext": 33,
        "Expression_listContext": 23,
        "SwitchStatementContext": 10,
        "Switch_sectionContext": 52,
        "Switch_labelContext": 54,
        "BreakStatementContext": 40,
        "Enum_definitionContext": 2,
        "Enum_bodyContext": 2,
        "Enum_member_declarationContext": 66,
        "TryStatementContext": 5,
        "Catch_clausesContext": 5,
        "Specific_catch_clauseContext": 4,
        "Object_initializerContext": 2,
        "Member_initializer_listContext": 2,
        "Member_initializerContext": 2,
        "Initializer_valueContext": 2,
        "DoStatementContext": 5,
        "Parameter_arrayContext": 3,
        "Array_typeContext": 3,
        "Local_function_declarationContext": 44,
        "Local_function_headerContext": 44,
        "Return_typeContext": 47,
        "Local_function_bodyContext": 44,
        "Delegate_definitionContext": 3,
        "DefaultValueExpressionContext": 1,
        "General_catch_clauseContext": 1
    },
    "project_name": "Sekai02_GeoWall-E",
    "label": "original",
    "project_type": "wallE"
}