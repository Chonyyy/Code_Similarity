{
    "total_nodes": 50787,
    "max_depth": 1196,
    "number_of_variables": 85,
    "number_of_constants": 4,
    "out_variables": 0,
    "ref_params": 0,
    "number_of_methods": 47,
    "number_of_classes": 18,
    "number_of_interfaces": 0,
    "number_of_abstract_classes": 2,
    "number_of_sealed_classes": 0,
    "import_statements": 18,
    "number_of_try_blocks": 3,
    "number_of_lists": 5,
    "number_of_dictionaries": 1,
    "number_of_enums": 0,
    "number_of_delegates": 0,
    "function_calls": 143,
    "enums_names": [],
    "control_structures_if": 177,
    "control_structures_switch": 0,
    "control_structures_for": 1,
    "control_structures_while": 13,
    "control_structures_dowhile": 0,
    "access_modifiers_public": 88,
    "access_modifiers_private": 5,
    "access_modifiers_protected": 0,
    "access_modifiers_internal": 0,
    "access_modifiers_static": 25,
    "access_modifiers_protected_internal": 0,
    "access_modifiers_private_protected": 0,
    "modifier_readonly": 0,
    "modifier_volatile": 0,
    "modifier_virtual": 0,
    "modifier_override": 20,
    "modifier_new": 46,
    "modifier_partial": 0,
    "modifier_extern": 0,
    "modifier_unsafe": 0,
    "modifier_async": 0,
    "linq_querie_select": 0,
    "linq_queries_where": 0,
    "linq_queries_orderBy": 0,
    "linq_queries_groupBy": 0,
    "linq_queries_join": 0,
    "linq_queries_sum": 64,
    "linq_queries_count": 0,
    "library_call_console": 7,
    "library_call_math": 5,
    "number_of_lambdas": 1,
    "number_of_getters": 0,
    "number_of_setters": 0,
    "number_of_tuples": 0,
    "number_of_namespaces": 12,
    "method_parameters": [
        [
            "Operation",
            [
                [
                    "object",
                    "left"
                ],
                [
                    "string",
                    "operatorToken"
                ],
                [
                    "object",
                    "right"
                ]
            ]
        ],
        [
            "Operation",
            [
                [
                    "object",
                    "left"
                ],
                [
                    "string",
                    "operatorToken"
                ],
                [
                    "object",
                    "right"
                ]
            ]
        ],
        [
            "CheckfunctionCall",
            [
                [
                    "string",
                    "functionName"
                ]
            ]
        ],
        [
            "Operation",
            [
                [
                    "object",
                    "left"
                ],
                [
                    "string",
                    "operatorToken"
                ],
                [
                    "object",
                    "right"
                ]
            ]
        ],
        [
            "CatchArgumentTypeError",
            [
                [
                    "string",
                    "idLeft"
                ],
                [
                    "string",
                    "leftType"
                ],
                [
                    "string",
                    "iDRight"
                ],
                [
                    "string",
                    "rightType"
                ],
                [
                    "string",
                    "expectedType"
                ]
            ]
        ],
        [
            "TokenizeInput",
            [
                [
                    "string",
                    "input"
                ]
            ]
        ],
        [
            "IsNumber",
            [
                [
                    "string",
                    "Token"
                ]
            ]
        ],
        [
            "IsString",
            [
                [
                    "string",
                    "Token"
                ]
            ]
        ],
        [
            "IsBoolean",
            [
                [
                    "string",
                    "Token"
                ]
            ]
        ],
        [
            "IsID",
            [
                [
                    "string",
                    "Token"
                ]
            ]
        ],
        [
            "TokenType",
            [
                [
                    "object",
                    "Token"
                ]
            ]
        ],
        [
            "GetIncorrectToken",
            [
                [
                    "string",
                    "a"
                ],
                [
                    "string",
                    "b"
                ],
                [
                    "string",
                    "expectedToken"
                ]
            ]
        ],
        [
            "Operation",
            [
                [
                    "object",
                    "left"
                ],
                [
                    "string",
                    "operatorToken"
                ],
                [
                    "object",
                    "right"
                ]
            ]
        ],
        [
            "RemoveVariables",
            [
                [
                    "List<string>",
                    "vars"
                ]
            ]
        ],
        [
            "Main",
            [
                [
                    "string[]",
                    "args"
                ]
            ]
        ]
    ],
    "variable_names": [
        [
            "string",
            "operatorToken"
        ],
        [
            "Expression",
            "falseExp"
        ],
        [
            "Expression",
            "booleanExpression"
        ],
        [
            "Expression",
            "trueExp"
        ],
        [
            "string",
            "functionId"
        ],
        [
            "Function",
            "f"
        ],
        [
            "int",
            "i"
        ],
        [
            "Expression",
            "FE"
        ],
        [
            "Dictionary",
            "Original_values"
        ],
        [
            "int",
            "argumentsValueCount"
        ],
        [
            "Expression",
            "printExp"
        ],
        [
            "Expression",
            "functionbody"
        ],
        [
            "Expression",
            "parameter"
        ],
        [
            "int",
            "originalIndex"
        ],
        [
            "int",
            "countOfArguments"
        ],
        [
            "List",
            "functionExpression"
        ],
        [
            "List",
            "originalsTokens"
        ],
        [
            "var",
            "x"
        ],
        [
            "int",
            "i"
        ],
        [
            "Expression",
            "l"
        ],
        [
            "Expression",
            "boolean"
        ],
        [
            "string",
            "functionName"
        ],
        [
            "Expression",
            "p"
        ],
        [
            "Expression",
            "num"
        ],
        [
            "bool",
            "isIdfunction"
        ],
        [
            "string",
            "tokenType"
        ],
        [
            "Expression",
            "result"
        ],
        [
            "Expression",
            "M"
        ],
        [
            "string",
            "resultType"
        ],
        [
            "Expression",
            "c"
        ],
        [
            "double",
            "result"
        ],
        [
            "int",
            "countOfArguments"
        ],
        [
            "Random",
            "r"
        ],
        [
            "Expression",
            "e"
        ],
        [
            "double",
            "logBase"
        ],
        [
            "double",
            "n"
        ],
        [
            "int",
            "i"
        ],
        [
            "Expression",
            "printExp"
        ],
        [
            "FunctionDeclaration",
            "f"
        ],
        [
            "Expression",
            "exp"
        ],
        [
            "Expression",
            "ifelse"
        ],
        [
            "Expression",
            "letIn"
        ],
        [
            "Regex",
            "GoodTokens"
        ],
        [
            "List",
            "t"
        ],
        [
            "Regex",
            "AllTokens"
        ],
        [
            "string",
            "operatorToken"
        ],
        [
            "string",
            "id"
        ],
        [
            "string",
            "idType"
        ],
        [
            "Expression",
            "Value"
        ],
        [
            "List",
            "LocalVariables"
        ],
        [
            "string",
            "input"
        ],
        [
            "Expression",
            "result"
        ]
    ],
    "method_names": [
        "Operation",
        "PrintError",
        "Analize",
        "Operation",
        "Evaluate",
        "Analize",
        "CheckfunctionCall",
        "Evaluate",
        "Analize",
        "Evaluate",
        "Analize",
        "sqrt",
        "sin",
        "cos",
        "exp",
        "rand",
        "Analize",
        "log",
        "Evaluate",
        "Next",
        "GetExpType",
        "CatchArgumentTypeError",
        "Analize",
        "GetValue",
        "Evaluate",
        "ActualToken",
        "Operation",
        "TokenizeInput",
        "IsID",
        "Restart",
        "GetIncorrectToken",
        "IsNumber",
        "TokenType",
        "IsBoolean",
        "IsString",
        "Analize",
        "Operation",
        "RemoveVariables",
        "Analize",
        "Main"
    ],
    "method_return_types": [
        [
            "Operation",
            "object"
        ],
        [
            "PrintError",
            "void"
        ],
        [
            "Analize",
            "void"
        ],
        [
            "Operation",
            "object"
        ],
        [
            "Analize",
            "void"
        ],
        [
            "Evaluate",
            "void"
        ],
        [
            "Analize",
            "void"
        ],
        [
            "Evaluate",
            "void"
        ],
        [
            "CheckfunctionCall",
            "void"
        ],
        [
            "Analize",
            "void"
        ],
        [
            "Evaluate",
            "void"
        ],
        [
            "sqrt",
            "void"
        ],
        [
            "exp",
            "void"
        ],
        [
            "Evaluate",
            "void"
        ],
        [
            "Analize",
            "void"
        ],
        [
            "rand",
            "void"
        ],
        [
            "cos",
            "void"
        ],
        [
            "sin",
            "void"
        ],
        [
            "log",
            "void"
        ],
        [
            "Next",
            "void"
        ],
        [
            "GetExpType",
            "string"
        ],
        [
            "ActualToken",
            "string"
        ],
        [
            "Evaluate",
            "void"
        ],
        [
            "Analize",
            "void"
        ],
        [
            "GetValue",
            "object"
        ],
        [
            "CatchArgumentTypeError",
            "void"
        ],
        [
            "Operation",
            "object"
        ],
        [
            "TokenizeInput",
            "void"
        ],
        [
            "Restart",
            "void"
        ],
        [
            "TokenType",
            "string"
        ],
        [
            "IsID",
            "bool"
        ],
        [
            "IsBoolean",
            "bool"
        ],
        [
            "IsNumber",
            "bool"
        ],
        [
            "IsString",
            "bool"
        ],
        [
            "GetIncorrectToken",
            "string"
        ],
        [
            "Analize",
            "void"
        ],
        [
            "Operation",
            "object"
        ],
        [
            "Analize",
            "void"
        ],
        [
            "RemoveVariables",
            "void"
        ],
        [
            "Main",
            "void"
        ]
    ],
    "class_names": [
        "Union",
        "LexicalError",
        "HulkErrors",
        "SyntaxError",
        "SumExpression",
        "Conditional",
        "Print",
        "Function",
        "FunctionDeclaration",
        "Atom",
        "MathExpressions",
        "Binary_Exrpessions",
        "Expression",
        "HulkExpression",
        "Lexer",
        "BooleanOperator",
        "Let_in",
        "Program"
    ],
    "interface_names": [],
    "delegate_names": [],
    "node_count": {
        "Compilation_unitContext": 18,
        "Using_directivesContext": 18,
        "UsingNamespaceDirectiveContext": 42,
        "TerminalNodeImpl": 8569,
        "Namespace_or_type_nameContext": 309,
        "IdentifierContext": 2326,
        "Namespace_member_declarationsContext": 24,
        "Namespace_member_declarationContext": 30,
        "Namespace_declarationContext": 12,
        "Qualified_identifierContext": 12,
        "Namespace_bodyContext": 12,
        "Type_declarationContext": 18,
        "Class_definitionContext": 18,
        "Class_baseContext": 14,
        "Class_typeContext": 380,
        "Class_bodyContext": 18,
        "Class_member_declarationsContext": 18,
        "Class_member_declarationContext": 105,
        "All_member_modifiersContext": 96,
        "All_member_modifierContext": 146,
        "Common_member_declarationContext": 105,
        "Typed_member_declarationContext": 59,
        "Type_Context": 411,
        "Base_typeContext": 411,
        "Field_declarationContext": 40,
        "Variable_declaratorsContext": 40,
        "Variable_declaratorContext": 40,
        "Variable_initializerContext": 27,
        "ExpressionContext": 1319,
        "Non_assignment_expressionContext": 1223,
        "Conditional_expressionContext": 1222,
        "Null_coalescing_expressionContext": 1222,
        "Conditional_or_expressionContext": 1222,
        "Conditional_and_expressionContext": 1233,
        "Inclusive_or_expressionContext": 1278,
        "Exclusive_or_expressionContext": 1278,
        "And_expressionContext": 1278,
        "Equality_expressionContext": 1278,
        "Relational_expressionContext": 1430,
        "Shift_expressionContext": 1474,
        "Additive_expressionContext": 1474,
        "Multiplicative_expressionContext": 1505,
        "Switch_expressionContext": 1506,
        "Range_expressionContext": 1506,
        "Unary_expressionContext": 1649,
        "Primary_expressionContext": 1618,
        "ObjectCreationExpressionContext": 143,
        "Object_creation_expressionContext": 143,
        "Type_argument_listContext": 45,
        "Object_or_collection_initializerContext": 6,
        "Collection_initializerContext": 5,
        "Element_initializerContext": 50,
        "LiteralExpressionContext": 423,
        "LiteralContext": 423,
        "String_literalContext": 311,
        "Method_declarationContext": 47,
        "Method_member_nameContext": 47,
        "Formal_parameter_listContext": 20,
        "Fixed_parametersContext": 20,
        "Fixed_parameterContext": 40,
        "Arg_declarationContext": 40,
        "Method_bodyContext": 47,
        "BlockContext": 281,
        "Statement_listContext": 281,
        "StatementContext": 651,
        "Embedded_statementContext": 576,
        "ReturnStatementContext": 26,
        "ErrorNodeImpl": 4470,
        "ExpressionStatementContext": 329,
        "Constructor_declarationContext": 6,
        "BodyContext": 5,
        "AssignmentContext": 112,
        "ThisReferenceExpressionContext": 11,
        "Member_accessContext": 605,
        "Assignment_operatorContext": 112,
        "SimpleNameExpressionContext": 1032,
        "Property_declarationContext": 1,
        "Member_nameContext": 1,
        "Right_arrowContext": 2,
        "Throwable_expressionContext": 11,
        "IfStatementContext": 177,
        "If_bodyContext": 294,
        "Cast_expressionContext": 21,
        "Simple_typeContext": 49,
        "Numeric_typeContext": 33,
        "Floating_point_typeContext": 19,
        "Method_invocationContext": 440,
        "WhileStatementContext": 13,
        "DeclarationStatementContext": 84,
        "Local_variable_declarationContext": 85,
        "Local_variable_typeContext": 90,
        "Local_variable_declaratorContext": 85,
        "Local_variable_initializerContext": 83,
        "ParenthesisExpressionsContext": 7,
        "Argument_listContext": 187,
        "ArgumentContext": 348,
        "ThrowStatementContext": 81,
        "Bracket_expressionContext": 82,
        "Indexer_argumentContext": 82,
        "Integral_typeContext": 14,
        "BreakStatementContext": 7,
        "TryStatementContext": 3,
        "Catch_clausesContext": 3,
        "Specific_catch_clauseContext": 4,
        "Object_initializerContext": 1,
        "Member_initializer_listContext": 1,
        "Member_initializerContext": 1,
        "Initializer_valueContext": 1,
        "ForStatementContext": 1,
        "For_initializerContext": 1,
        "For_iteratorContext": 1,
        "ForeachStatementContext": 5,
        "Boolean_literalContext": 21,
        "Constant_declarationContext": 4,
        "Constant_declaratorsContext": 4,
        "Constant_declaratorContext": 4,
        "MemberAccessExpressionContext": 2,
        "Predefined_typeContext": 2,
        "Lambda_expressionContext": 1,
        "Anonymous_function_signatureContext": 1,
        "Anonymous_function_bodyContext": 1,
        "Rank_specifierContext": 1,
        "ContinueStatementContext": 2,
        "Global_attribute_sectionContext": 16,
        "Global_attribute_targetContext": 16,
        "Attribute_listContext": 16,
        "AttributeContext": 16,
        "Qualified_alias_memberContext": 4,
        "Attribute_argumentContext": 18
    },
    "project_name": "Proyecto-II-H.U.L.K-main",
    "label": "original"
}