{
    "total_nodes": 39045,
    "max_depth": 910,
    "number_of_variables": 72,
    "number_of_constants": 0,
    "out_variables": 0,
    "ref_params": 0,
    "number_of_methods": 63,
    "number_of_classes": 20,
    "number_of_interfaces": 0,
    "number_of_abstract_classes": 0,
    "number_of_sealed_classes": 0,
    "import_statements": 10,
    "number_of_try_blocks": 2,
    "number_of_lists": 7,
    "number_of_dictionaries": 1,
    "number_of_enums": 3,
    "number_of_delegates": 0,
    "function_calls": 73,
    "enums_names": [
        "TokenType",
        "ErrorType",
        "DataType"
    ],
    "control_structures_if": 84,
    "control_structures_switch": 7,
    "control_structures_for": 0,
    "control_structures_while": 16,
    "control_structures_dowhile": 0,
    "access_modifiers_public": 83,
    "access_modifiers_private": 57,
    "access_modifiers_protected": 0,
    "access_modifiers_internal": 0,
    "access_modifiers_static": 23,
    "access_modifiers_protected_internal": 0,
    "access_modifiers_private_protected": 0,
    "modifier_readonly": 34,
    "modifier_volatile": 0,
    "modifier_virtual": 0,
    "modifier_override": 1,
    "modifier_new": 15,
    "modifier_partial": 0,
    "modifier_extern": 0,
    "modifier_unsafe": 0,
    "modifier_async": 0,
    "linq_querie_select": 0,
    "linq_queries_where": 0,
    "linq_queries_orderBy": 0,
    "linq_queries_groupBy": 0,
    "linq_queries_join": 0,
    "linq_queries_sum": 17,
    "linq_queries_count": 0,
    "library_call_console": 12,
    "library_call_math": 6,
    "number_of_lambdas": 0,
    "number_of_getters": 0,
    "number_of_setters": 0,
    "number_of_tuples": 0,
    "number_of_namespaces": 11,
    "method_parameters": [
        [
            "RunFile",
            [
                [
                    "string",
                    "path"
                ]
            ]
        ],
        [
            "Run",
            [
                [
                    "string",
                    "source"
                ]
            ]
        ],
        [
            "RunMultiLine",
            [
                [
                    "string",
                    "source"
                ]
            ]
        ],
        [
            "IsAlpha",
            [
                [
                    "char",
                    "c"
                ]
            ]
        ],
        [
            "IsAlphaNumeric",
            [
                [
                    "char",
                    "c"
                ]
            ]
        ],
        [
            "Match",
            [
                [
                    "char",
                    "expected"
                ]
            ]
        ],
        [
            "IsDigit",
            [
                [
                    "char",
                    "c"
                ]
            ]
        ],
        [
            "Substring",
            [
                [
                    "string",
                    "s"
                ],
                [
                    "int",
                    "begIdx"
                ],
                [
                    "int",
                    "endIdx"
                ]
            ]
        ],
        [
            "AddToken",
            [
                [
                    "TokenType",
                    "type"
                ]
            ]
        ],
        [
            "AddToken",
            [
                [
                    "TokenType",
                    "type"
                ],
                [
                    "object",
                    "literal"
                ]
            ]
        ],
        [
            "Eval",
            [
                [
                    "object",
                    "value"
                ]
            ]
        ],
        [
            "Eval",
            [
                [
                    "object",
                    "left"
                ],
                [
                    "object",
                    "right"
                ]
            ]
        ],
        [
            "Eval",
            [
                [
                    "Dictionary<string,object>",
                    "context"
                ]
            ]
        ],
        [
            "Eval",
            [
                [
                    "Dictionary<string,object>",
                    "context"
                ]
            ]
        ],
        [
            "Eval",
            [
                [
                    "Dictionary<string,object>",
                    "context"
                ]
            ]
        ],
        [
            "GetValue",
            [
                [
                    "Expression",
                    "expr"
                ],
                [
                    "Dictionary<string,object>",
                    "value"
                ]
            ]
        ],
        [
            "Contains",
            [
                [
                    "string",
                    "name"
                ]
            ]
        ],
        [
            "Get",
            [
                [
                    "string",
                    "name"
                ]
            ]
        ],
        [
            "Add",
            [
                [
                    "string",
                    "name"
                ],
                [
                    "Expression.Function",
                    "function"
                ]
            ]
        ],
        [
            "Erase",
            [
                [
                    "string",
                    "name"
                ]
            ]
        ],
        [
            "OperandIsNumber",
            [
                [
                    "object",
                    "value"
                ]
            ]
        ],
        [
            "OperandIsBool",
            [
                [
                    "object",
                    "value"
                ]
            ]
        ],
        [
            "OperandsAreNumbers",
            [
                [
                    "object",
                    "left"
                ],
                [
                    "object",
                    "right"
                ]
            ]
        ],
        [
            "OperandsAreBool",
            [
                [
                    "object",
                    "left"
                ],
                [
                    "object",
                    "right"
                ]
            ]
        ],
        [
            "IsEqual",
            [
                [
                    "object",
                    "left"
                ],
                [
                    "object",
                    "right"
                ]
            ]
        ],
        [
            "Match",
            [
                [
                    "TokenType",
                    "tokentypes"
                ]
            ]
        ],
        [
            "Consume",
            [
                [
                    "TokenType",
                    "type"
                ],
                [
                    "string",
                    "lexeme"
                ]
            ]
        ],
        [
            "Main",
            [
                [
                    "string[]",
                    "args"
                ]
            ]
        ]
    ],
    "variable_names": [
        [
            "byte",
            "bytes"
        ],
        [
            "List",
            "lines"
        ],
        [
            "object",
            "output"
        ],
        [
            "string",
            "line"
        ],
        [
            "Parser",
            "parser"
        ],
        [
            "Evaluate",
            "evaluate"
        ],
        [
            "List",
            "tokens"
        ],
        [
            "Scanner",
            "scanner"
        ],
        [
            "Expression",
            "Ast"
        ],
        [
            "string",
            "text"
        ],
        [
            "Error",
            "err"
        ],
        [
            "string",
            "value"
        ],
        [
            "object",
            "literal"
        ],
        [
            "char",
            "c"
        ],
        [
            "TokenType",
            "type"
        ],
        [
            "string",
            "leftS"
        ],
        [
            "Random",
            "rnd"
        ],
        [
            "Dictionary",
            "variable"
        ],
        [
            "Function",
            "newFunction"
        ],
        [
            "int",
            "cnt"
        ],
        [
            "List",
            "args"
        ],
        [
            "string",
            "rightS"
        ],
        [
            "Expression",
            "ifstmt"
        ],
        [
            "Expression",
            "unary"
        ],
        [
            "Expression",
            "binary"
        ],
        [
            "Expression",
            "call"
        ],
        [
            "Expression",
            "let"
        ],
        [
            "Expression",
            "variable"
        ],
        [
            "Expression",
            "condition"
        ],
        [
            "Token",
            "token"
        ],
        [
            "string",
            "identifier"
        ],
        [
            "Expression",
            "expr"
        ],
        [
            "Expression",
            "argument"
        ],
        [
            "List",
            "arguments"
        ],
        [
            "List",
            "assingBody"
        ],
        [
            "Expression",
            "elseBody"
        ],
        [
            "List",
            "assigns"
        ],
        [
            "Expression",
            "body"
        ],
        [
            "string",
            "delete"
        ],
        [
            "Expression",
            "ifBody"
        ],
        [
            "Expression",
            "right"
        ]
    ],
    "method_names": [
        "RunFile",
        "RunMultiLine",
        "Run",
        "RunPrompt",
        "Number",
        "Advance",
        "String",
        "Substring",
        "IsAlphaNumeric",
        "IsAlpha",
        "IsDigit",
        "PeekNext",
        "ScanTokens",
        "ScanToken",
        "IsAtEnd",
        "Match",
        "AddToken",
        "Peek",
        "Identifier",
        "Eval",
        "copy",
        "ToString",
        "GetValue",
        "Run",
        "Contains",
        "Init",
        "Get",
        "Erase",
        "Add",
        "LexicalError",
        "Report",
        "SemanticError",
        "SyntaxError",
        "IsEqual",
        "OperandIsBool",
        "OperandIsNumber",
        "OperandsAreBool",
        "OperandsAreNumbers",
        "Advance",
        "GetLexeme",
        "GetToken",
        "Assign",
        "Logical",
        "ParseExpression",
        "Comparison",
        "Term",
        "Consume",
        "Equality",
        "GetType",
        "Factor",
        "Statement",
        "Primary",
        "Match",
        "Power",
        "Unary",
        "Parse",
        "Concatenation",
        "Main"
    ],
    "method_return_types": [
        [
            "Run",
            "void"
        ],
        [
            "RunPrompt",
            "void"
        ],
        [
            "RunFile",
            "void"
        ],
        [
            "RunMultiLine",
            "void"
        ],
        [
            "String",
            "void"
        ],
        [
            "IsAlphaNumeric",
            "bool"
        ],
        [
            "Match",
            "bool"
        ],
        [
            "Substring",
            "string"
        ],
        [
            "IsAlpha",
            "bool"
        ],
        [
            "Number",
            "void"
        ],
        [
            "ScanTokens",
            "List"
        ],
        [
            "Peek",
            "char"
        ],
        [
            "PeekNext",
            "char"
        ],
        [
            "IsAtEnd",
            "bool"
        ],
        [
            "IsDigit",
            "bool"
        ],
        [
            "Advance",
            "char"
        ],
        [
            "ScanToken",
            "void"
        ],
        [
            "AddToken",
            "void"
        ],
        [
            "Identifier",
            "void"
        ],
        [
            "copy",
            "Function"
        ],
        [
            "Eval",
            "object"
        ],
        [
            "ToString",
            "string"
        ],
        [
            "GetValue",
            "object"
        ],
        [
            "Run",
            "object"
        ],
        [
            "Add",
            "void"
        ],
        [
            "Init",
            "void"
        ],
        [
            "Get",
            "Expression"
        ],
        [
            "Contains",
            "bool"
        ],
        [
            "Erase",
            "void"
        ],
        [
            "LexicalError",
            "void"
        ],
        [
            "SemanticError",
            "void"
        ],
        [
            "Report",
            "void"
        ],
        [
            "SyntaxError",
            "void"
        ],
        [
            "OperandIsNumber",
            "bool"
        ],
        [
            "IsEqual",
            "bool"
        ],
        [
            "OperandsAreBool",
            "bool"
        ],
        [
            "OperandIsBool",
            "bool"
        ],
        [
            "OperandsAreNumbers",
            "bool"
        ],
        [
            "Unary",
            "Expression"
        ],
        [
            "Match",
            "bool"
        ],
        [
            "Factor",
            "Expression"
        ],
        [
            "Advance",
            "int"
        ],
        [
            "Power",
            "Expression"
        ],
        [
            "Comparison",
            "Expression"
        ],
        [
            "Term",
            "Expression"
        ],
        [
            "Consume",
            "int"
        ],
        [
            "GetToken",
            "Token"
        ],
        [
            "Parse",
            "Expression"
        ],
        [
            "GetLexeme",
            "string"
        ],
        [
            "Concatenation",
            "Expression"
        ],
        [
            "Statement",
            "Expression"
        ],
        [
            "Primary",
            "Expression"
        ],
        [
            "Assign",
            "List"
        ],
        [
            "Equality",
            "Expression"
        ],
        [
            "Logical",
            "Expression"
        ],
        [
            "GetType",
            "TokenType"
        ],
        [
            "ParseExpression",
            "Expression"
        ],
        [
            "Main",
            "void"
        ]
    ],
    "class_names": [
        "HULK",
        "Scanner",
        "Assign",
        "Unary",
        "LetStatement",
        "Function",
        "Variable",
        "IfStatement",
        "Literal",
        "Binary",
        "Grouping",
        "Expression",
        "Call",
        "Token",
        "Evaluate",
        "Functions",
        "Error",
        "Utils",
        "Parser",
        "Program"
    ],
    "interface_names": [],
    "delegate_names": [],
    "node_count": {
        "Compilation_unitContext": 18,
        "Using_directivesContext": 10,
        "UsingNamespaceDirectiveContext": 24,
        "TerminalNodeImpl": 6822,
        "Namespace_or_type_nameContext": 293,
        "IdentifierContext": 2085,
        "Namespace_member_declarationsContext": 13,
        "Namespace_member_declarationContext": 24,
        "Namespace_declarationContext": 11,
        "Qualified_identifierContext": 11,
        "Namespace_bodyContext": 11,
        "Type_declarationContext": 13,
        "All_member_modifiersContext": 145,
        "All_member_modifierContext": 200,
        "Class_definitionContext": 20,
        "Class_bodyContext": 20,
        "Class_member_declarationsContext": 20,
        "Class_member_declarationContext": 134,
        "Common_member_declarationContext": 134,
        "Typed_member_declarationContext": 89,
        "Type_Context": 407,
        "Base_typeContext": 418,
        "Simple_typeContext": 81,
        "Numeric_typeContext": 58,
        "Integral_typeContext": 25,
        "Field_declarationContext": 44,
        "Variable_declaratorsContext": 44,
        "Variable_declaratorContext": 44,
        "Variable_initializerContext": 11,
        "ExpressionContext": 1177,
        "Non_assignment_expressionContext": 1105,
        "Conditional_expressionContext": 1105,
        "Null_coalescing_expressionContext": 1105,
        "Conditional_or_expressionContext": 1105,
        "Conditional_and_expressionContext": 1109,
        "Inclusive_or_expressionContext": 1118,
        "Exclusive_or_expressionContext": 1118,
        "And_expressionContext": 1118,
        "Equality_expressionContext": 1118,
        "Relational_expressionContext": 1154,
        "Shift_expressionContext": 1170,
        "Additive_expressionContext": 1170,
        "Multiplicative_expressionContext": 1216,
        "Switch_expressionContext": 1219,
        "Range_expressionContext": 1219,
        "Unary_expressionContext": 1340,
        "Primary_expressionContext": 1291,
        "LiteralExpressionContext": 258,
        "LiteralContext": 258,
        "Method_declarationContext": 63,
        "Method_member_nameContext": 63,
        "Formal_parameter_listContext": 45,
        "Fixed_parametersContext": 44,
        "Fixed_parameterContext": 74,
        "Arg_declarationContext": 74,
        "Class_typeContext": 351,
        "Method_bodyContext": 63,
        "BlockContext": 132,
        "Statement_listContext": 195,
        "StatementContext": 466,
        "Embedded_statementContext": 417,
        "ExpressionStatementContext": 186,
        "AssignmentContext": 72,
        "SimpleNameExpressionContext": 916,
        "Member_accessContext": 395,
        "Assignment_operatorContext": 72,
        "DeclarationStatementContext": 72,
        "Local_variable_declarationContext": 72,
        "Local_variable_typeContext": 79,
        "Rank_specifierContext": 3,
        "Local_variable_declaratorContext": 72,
        "Local_variable_initializerContext": 70,
        "Method_invocationContext": 295,
        "Argument_listContext": 231,
        "ArgumentContext": 433,
        "IfStatementContext": 84,
        "If_bodyContext": 99,
        "WhileStatementContext": 16,
        "Boolean_literalContext": 16,
        "String_literalContext": 130,
        "BreakStatementContext": 30,
        "ObjectCreationExpressionContext": 73,
        "Object_creation_expressionContext": 73,
        "Type_argument_listContext": 37,
        "ReturnStatementContext": 99,
        "IsTypeContext": 10,
        "Throwable_expressionContext": 12,
        "ForeachStatementContext": 7,
        "Object_or_collection_initializerContext": 1,
        "Collection_initializerContext": 1,
        "Element_initializerContext": 10,
        "Expression_listContext": 10,
        "Constructor_declarationContext": 17,
        "BodyContext": 17,
        "ThisReferenceExpressionContext": 39,
        "SwitchStatementContext": 7,
        "Switch_sectionContext": 63,
        "Switch_labelContext": 65,
        "Bracket_expressionContext": 39,
        "Indexer_argumentContext": 39,
        "ParenthesisExpressionsContext": 5,
        "Enum_definitionContext": 3,
        "Enum_bodyContext": 3,
        "Enum_member_declarationContext": 54,
        "Class_baseContext": 11,
        "Cast_expressionContext": 42,
        "Floating_point_typeContext": 33,
        "ThrowStatementContext": 38,
        "TryStatementContext": 2,
        "Catch_clausesContext": 2,
        "Specific_catch_clauseContext": 3,
        "Parameter_arrayContext": 1,
        "Array_typeContext": 1,
        "Global_attribute_sectionContext": 16,
        "Global_attribute_targetContext": 16,
        "Attribute_listContext": 16,
        "AttributeContext": 16,
        "Qualified_alias_memberContext": 4,
        "Attribute_argumentContext": 18,
        "ErrorNodeImpl": 110
    },
    "project_name": "Sekai02_HulkCompiler",
    "label": "original",
    "project_type": "hulk"
}