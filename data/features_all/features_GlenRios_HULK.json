{
    "total_nodes": 53916,
    "max_depth": 703,
    "number_of_variables": 90,
    "number_of_constants": 0,
    "out_variables": 0,
    "ref_params": 0,
    "number_of_methods": 58,
    "number_of_classes": 17,
    "number_of_interfaces": 0,
    "number_of_abstract_classes": 0,
    "number_of_sealed_classes": 0,
    "import_statements": 4,
    "number_of_try_blocks": 1,
    "number_of_lists": 5,
    "number_of_dictionaries": 4,
    "number_of_enums": 2,
    "number_of_delegates": 0,
    "function_calls": 116,
    "enums_names": [
        "TokenType",
        "ErrorType"
    ],
    "control_structures_if": 151,
    "control_structures_switch": 1,
    "control_structures_for": 6,
    "control_structures_while": 14,
    "control_structures_dowhile": 0,
    "access_modifiers_public": 99,
    "access_modifiers_private": 23,
    "access_modifiers_protected": 0,
    "access_modifiers_internal": 0,
    "access_modifiers_static": 11,
    "access_modifiers_protected_internal": 0,
    "access_modifiers_private_protected": 0,
    "modifier_readonly": 0,
    "modifier_volatile": 0,
    "modifier_virtual": 0,
    "modifier_override": 0,
    "modifier_new": 18,
    "modifier_partial": 0,
    "modifier_extern": 0,
    "modifier_unsafe": 0,
    "modifier_async": 0,
    "linq_querie_select": 0,
    "linq_queries_where": 0,
    "linq_queries_orderBy": 0,
    "linq_queries_groupBy": 0,
    "linq_queries_join": 0,
    "linq_queries_sum": 12,
    "linq_queries_count": 0,
    "library_call_console": 6,
    "library_call_math": 5,
    "number_of_lambdas": 2,
    "number_of_getters": 0,
    "number_of_setters": 0,
    "number_of_tuples": 0,
    "number_of_namespaces": 9,
    "method_parameters": [
        [
            "ContainsFuncion",
            [
                [
                    "object",
                    "name"
                ]
            ]
        ],
        [
            "GetFuncion",
            [
                [
                    "string",
                    "name"
                ]
            ]
        ],
        [
            "AddFuncion",
            [
                [
                    "string",
                    "name"
                ],
                [
                    "Expresion.Funcion",
                    "funcion"
                ]
            ]
        ],
        [
            "MakeTokens",
            [
                [
                    "string",
                    "x"
                ]
            ]
        ],
        [
            "Run",
            [
                [
                    "Expresion",
                    "expr"
                ],
                [
                    "Dictionary<object,object>",
                    "asign"
                ]
            ]
        ],
        [
            "GetValue",
            [
                [
                    "Expresion",
                    "expr"
                ],
                [
                    "Dictionary<object,object>",
                    "asig"
                ]
            ]
        ],
        [
            "DictLetIn",
            [
                [
                    "List<Expresion.ExprAsignar>",
                    "asignar"
                ],
                [
                    "Dictionary<object,object>",
                    "asig"
                ]
            ]
        ],
        [
            "VisitExprUnaria",
            [
                [
                    "object",
                    "derecha"
                ]
            ]
        ],
        [
            "VisitExprBinaria",
            [
                [
                    "object",
                    "izquierda"
                ],
                [
                    "object",
                    "derecha"
                ]
            ]
        ],
        [
            "IgualIgual",
            [
                [
                    "object",
                    "izquierda"
                ],
                [
                    "object",
                    "derecha"
                ]
            ]
        ],
        [
            "NoIgual",
            [
                [
                    "object",
                    "izquierda"
                ],
                [
                    "object",
                    "derecha"
                ]
            ]
        ],
        [
            "MenorIgual",
            [
                [
                    "object",
                    "izquierda"
                ],
                [
                    "object",
                    "derecha"
                ]
            ]
        ],
        [
            "MayorIgual",
            [
                [
                    "object",
                    "izquierda"
                ],
                [
                    "object",
                    "derecha"
                ]
            ]
        ],
        [
            "Menor",
            [
                [
                    "object",
                    "izquierda"
                ],
                [
                    "object",
                    "derecha"
                ]
            ]
        ],
        [
            "Mayor",
            [
                [
                    "object",
                    "izquierda"
                ],
                [
                    "object",
                    "derecha"
                ]
            ]
        ],
        [
            "And",
            [
                [
                    "object",
                    "izquierda"
                ],
                [
                    "object",
                    "derecha"
                ]
            ]
        ],
        [
            "Or",
            [
                [
                    "object",
                    "izquierda"
                ],
                [
                    "object",
                    "derecha"
                ]
            ]
        ],
        [
            "Suma",
            [
                [
                    "object",
                    "izquierda"
                ],
                [
                    "object",
                    "derecha"
                ]
            ]
        ],
        [
            "Resta",
            [
                [
                    "object",
                    "izquierda"
                ],
                [
                    "object",
                    "derecha"
                ]
            ]
        ],
        [
            "Multiplicacion",
            [
                [
                    "object",
                    "izquierda"
                ],
                [
                    "object",
                    "derecha"
                ]
            ]
        ],
        [
            "Division",
            [
                [
                    "object",
                    "izquierda"
                ],
                [
                    "object",
                    "derecha"
                ]
            ]
        ],
        [
            "Pow",
            [
                [
                    "object",
                    "izquierda"
                ],
                [
                    "object",
                    "derecha"
                ]
            ]
        ],
        [
            "Modulo",
            [
                [
                    "object",
                    "izquierda"
                ],
                [
                    "object",
                    "derecha"
                ]
            ]
        ],
        [
            "Concatenar",
            [
                [
                    "object",
                    "izquierda"
                ],
                [
                    "object",
                    "derecha"
                ]
            ]
        ],
        [
            "VisitExprLiteral",
            [
                [
                    "ExprLiteral",
                    "expr"
                ]
            ]
        ],
        [
            "VisitExprVariable",
            [
                [
                    "Dictionary<object,object>",
                    "asign"
                ],
                [
                    "Token",
                    "variable"
                ]
            ]
        ],
        [
            "VisitExprLlamada",
            [
                [
                    "ExprLLamadaFuncion",
                    "call"
                ],
                [
                    "Dictionary<object,object>",
                    "valor"
                ]
            ]
        ],
        [
            "Sin",
            [
                [
                    "List<object>",
                    "argument"
                ]
            ]
        ],
        [
            "Cos",
            [
                [
                    "List<object>",
                    "argument"
                ]
            ]
        ],
        [
            "Sqrt",
            [
                [
                    "List<object>",
                    "argument"
                ]
            ]
        ],
        [
            "Log",
            [
                [
                    "List<object>",
                    "argument"
                ]
            ]
        ],
        [
            "Print",
            [
                [
                    "List<object>",
                    "argument"
                ]
            ]
        ],
        [
            "VisitFuncion",
            [
                [
                    "List<object>",
                    "valores"
                ],
                [
                    "Funcion",
                    "funcion"
                ]
            ]
        ],
        [
            "match",
            [
                [
                    "TokenType[]",
                    "types"
                ]
            ]
        ],
        [
            "match",
            [
                [
                    "TokenType",
                    "type"
                ]
            ]
        ],
        [
            "check",
            [
                [
                    "TokenType",
                    "type"
                ]
            ]
        ],
        [
            "consume",
            [
                [
                    "TokenType",
                    "type"
                ],
                [
                    "string",
                    "mensaje"
                ]
            ]
        ],
        [
            "Main",
            [
                [
                    "string[]",
                    "args"
                ]
            ]
        ],
        [
            "Run",
            [
                [
                    "string",
                    "input"
                ]
            ]
        ]
    ],
    "variable_names": [
        [
            "ERROR",
            "error"
        ],
        [
            "int",
            "i"
        ],
        [
            "string",
            "a"
        ],
        [
            "int",
            "ContadorDePuntos"
        ],
        [
            "string",
            "numero"
        ],
        [
            "bool",
            "valido"
        ],
        [
            "int",
            "j"
        ],
        [
            "Expresion",
            "If"
        ],
        [
            "Expresion",
            "variable"
        ],
        [
            "Expresion",
            "literal"
        ],
        [
            "Dictionary",
            "answ"
        ],
        [
            "Expresion",
            "binaria"
        ],
        [
            "Expresion",
            "unaria"
        ],
        [
            "object",
            "x"
        ],
        [
            "Expresion",
            "call"
        ],
        [
            "Dictionary",
            "resp"
        ],
        [
            "Expresion",
            "let"
        ],
        [
            "int",
            "i"
        ],
        [
            "Dictionary",
            "value"
        ],
        [
            "string",
            "resultado"
        ],
        [
            "List",
            "valores"
        ],
        [
            "Funcion",
            "funcion"
        ],
        [
            "int",
            "i"
        ],
        [
            "Expresion",
            "expr"
        ],
        [
            "Expresion",
            "expres"
        ],
        [
            "Expresion",
            "inCuerpo"
        ],
        [
            "Token",
            "operador"
        ],
        [
            "List",
            "letCuerpo"
        ],
        [
            "string",
            "name"
        ],
        [
            "Token",
            "nombre"
        ],
        [
            "Expresion",
            "condicion"
        ],
        [
            "Token",
            "name"
        ],
        [
            "Expresion",
            "elsecuerpo"
        ],
        [
            "Expresion",
            "expresion"
        ],
        [
            "Expresion",
            "ifcuerpo"
        ],
        [
            "List",
            "answer"
        ],
        [
            "TokenType",
            "a"
        ],
        [
            "List",
            "argument"
        ],
        [
            "Expresion",
            "rigth"
        ],
        [
            "Expresion",
            "funcionCuerpo"
        ],
        [
            "object",
            "respuesta"
        ],
        [
            "Dictionary",
            "value"
        ],
        [
            "Evaluador",
            "evaluador"
        ],
        [
            "Parser",
            "parser"
        ],
        [
            "Expresion",
            "expresion"
        ],
        [
            "Tokenizador",
            "tokens"
        ],
        [
            "var",
            "input"
        ]
    ],
    "method_names": [
        "GetFuncion",
        "AddFuncion",
        "ContainsFuncion",
        "FuncionesEspeciales",
        "MakeTokens",
        "DictLetIn",
        "Run",
        "GetValue",
        "Sin",
        "Suma",
        "Menor",
        "Cos",
        "Print",
        "VisitExprVariable",
        "And",
        "VisitExprBinaria",
        "Modulo",
        "VisitExprLiteral",
        "Log",
        "NoIgual",
        "Concatenar",
        "Or",
        "VisitExprUnaria",
        "VisitFuncion",
        "IgualIgual",
        "Sqrt",
        "MayorIgual",
        "MenorIgual",
        "Division",
        "Multiplicacion",
        "Resta",
        "VisitExprLlamada",
        "Mayor",
        "Pow",
        "previous",
        "Term",
        "IAE",
        "expression",
        "comparison",
        "mod",
        "Parse",
        "equality",
        "unary",
        "advance",
        "peek",
        "concat",
        "primary",
        "factor",
        "pow",
        "Stm",
        "check",
        "Asign",
        "match",
        "logical",
        "consume",
        "Run",
        "Main"
    ],
    "method_return_types": [
        [
            "ContainsFuncion",
            "bool"
        ],
        [
            "FuncionesEspeciales",
            "void"
        ],
        [
            "GetFuncion",
            "Expresion"
        ],
        [
            "AddFuncion",
            "void"
        ],
        [
            "MakeTokens",
            "void"
        ],
        [
            "DictLetIn",
            "Dictionary"
        ],
        [
            "GetValue",
            "object"
        ],
        [
            "Run",
            "object"
        ],
        [
            "Resta",
            "object"
        ],
        [
            "Division",
            "object"
        ],
        [
            "Suma",
            "object"
        ],
        [
            "Sin",
            "object"
        ],
        [
            "Cos",
            "object"
        ],
        [
            "VisitExprVariable",
            "object"
        ],
        [
            "NoIgual",
            "object"
        ],
        [
            "Print",
            "object"
        ],
        [
            "Multiplicacion",
            "object"
        ],
        [
            "VisitFuncion",
            "object"
        ],
        [
            "Mayor",
            "object"
        ],
        [
            "IgualIgual",
            "object"
        ],
        [
            "Sqrt",
            "object"
        ],
        [
            "Or",
            "object"
        ],
        [
            "Menor",
            "object"
        ],
        [
            "Pow",
            "object"
        ],
        [
            "MenorIgual",
            "object"
        ],
        [
            "Log",
            "object"
        ],
        [
            "VisitExprUnaria",
            "object"
        ],
        [
            "Concatenar",
            "object"
        ],
        [
            "VisitExprLiteral",
            "object"
        ],
        [
            "MayorIgual",
            "object"
        ],
        [
            "Modulo",
            "object"
        ],
        [
            "VisitExprBinaria",
            "object"
        ],
        [
            "And",
            "object"
        ],
        [
            "VisitExprLlamada",
            "object"
        ],
        [
            "comparison",
            "Expresion"
        ],
        [
            "advance",
            "Token"
        ],
        [
            "unary",
            "Expresion"
        ],
        [
            "expression",
            "Expresion"
        ],
        [
            "Stm",
            "Expresion"
        ],
        [
            "consume",
            "Token"
        ],
        [
            "logical",
            "Expresion"
        ],
        [
            "equality",
            "Expresion"
        ],
        [
            "check",
            "bool"
        ],
        [
            "peek",
            "Token"
        ],
        [
            "factor",
            "Expresion"
        ],
        [
            "IAE",
            "bool"
        ],
        [
            "previous",
            "Token"
        ],
        [
            "Asign",
            "List"
        ],
        [
            "pow",
            "Expresion"
        ],
        [
            "primary",
            "Expresion"
        ],
        [
            "concat",
            "Expresion"
        ],
        [
            "Parse",
            "Expresion"
        ],
        [
            "Term",
            "Expresion"
        ],
        [
            "mod",
            "Expresion"
        ],
        [
            "match",
            "bool"
        ],
        [
            "Run",
            "void"
        ],
        [
            "Main",
            "void"
        ]
    ],
    "class_names": [
        "Funciones",
        "Tokenizador",
        "Evaluador",
        "ERROR",
        "ExprLiteral",
        "ExprUnaria",
        "ExprLLamadaFuncion",
        "LetIn",
        "Expresion",
        "If",
        "ExprVariable",
        "ExprBinaria",
        "ExprAsignar",
        "Funcion",
        "Token",
        "Parser",
        "Program"
    ],
    "interface_names": [],
    "delegate_names": [],
    "node_count": {
        "Compilation_unitContext": 12,
        "Namespace_member_declarationsContext": 9,
        "Namespace_member_declarationContext": 18,
        "Namespace_declarationContext": 9,
        "TerminalNodeImpl": 9060,
        "Qualified_identifierContext": 9,
        "IdentifierContext": 2723,
        "Type_declarationContext": 9,
        "All_member_modifiersContext": 123,
        "All_member_modifierContext": 134,
        "Enum_definitionContext": 2,
        "Enum_bodyContext": 2,
        "Enum_member_declarationContext": 38,
        "Class_definitionContext": 17,
        "Class_bodyContext": 17,
        "Class_member_declarationsContext": 17,
        "Class_member_declarationContext": 115,
        "Common_member_declarationContext": 115,
        "Typed_member_declarationContext": 85,
        "Type_Context": 504,
        "Base_typeContext": 563,
        "Class_typeContext": 470,
        "Namespace_or_type_nameContext": 342,
        "Type_argument_listContext": 46,
        "Field_declarationContext": 32,
        "Variable_declaratorsContext": 32,
        "Variable_declaratorContext": 32,
        "Variable_initializerContext": 22,
        "ExpressionContext": 1443,
        "Non_assignment_expressionContext": 1363,
        "Conditional_expressionContext": 1361,
        "Null_coalescing_expressionContext": 1361,
        "Conditional_or_expressionContext": 1361,
        "Conditional_and_expressionContext": 1544,
        "Inclusive_or_expressionContext": 1567,
        "Exclusive_or_expressionContext": 1567,
        "And_expressionContext": 1567,
        "Equality_expressionContext": 1567,
        "Relational_expressionContext": 1834,
        "Shift_expressionContext": 1846,
        "Additive_expressionContext": 1846,
        "Multiplicative_expressionContext": 1989,
        "Switch_expressionContext": 1993,
        "Range_expressionContext": 1993,
        "Unary_expressionContext": 2137,
        "Primary_expressionContext": 2069,
        "ObjectCreationExpressionContext": 116,
        "Object_creation_expressionContext": 116,
        "Constructor_declarationContext": 15,
        "Formal_parameter_listContext": 54,
        "Fixed_parametersContext": 54,
        "Fixed_parameterContext": 92,
        "Arg_declarationContext": 92,
        "BodyContext": 15,
        "BlockContext": 245,
        "Statement_listContext": 251,
        "StatementContext": 621,
        "Embedded_statementContext": 565,
        "ExpressionStatementContext": 204,
        "SimpleNameExpressionContext": 1463,
        "Member_accessContext": 471,
        "Method_invocationContext": 264,
        "Argument_listContext": 301,
        "ArgumentContext": 461,
        "Simple_typeContext": 103,
        "Method_declarationContext": 58,
        "Method_member_nameContext": 58,
        "Method_bodyContext": 58,
        "ForeachStatementContext": 8,
        "Local_variable_typeContext": 98,
        "IfStatementContext": 151,
        "Cast_expressionContext": 58,
        "If_bodyContext": 184,
        "ReturnStatementContext": 131,
        "LiteralExpressionContext": 485,
        "LiteralContext": 485,
        "Boolean_literalContext": 28,
        "Bracket_expressionContext": 250,
        "Indexer_argumentContext": 250,
        "ThrowStatementContext": 14,
        "String_literalContext": 169,
        "AssignmentContext": 76,
        "Assignment_operatorContext": 76,
        "ForStatementContext": 6,
        "For_initializerContext": 6,
        "Local_variable_declarationContext": 90,
        "Numeric_typeContext": 72,
        "Integral_typeContext": 8,
        "Local_variable_declaratorContext": 90,
        "Local_variable_initializerContext": 90,
        "For_iteratorContext": 6,
        "ContinueStatementContext": 45,
        "ParenthesisExpressionsContext": 2,
        "DeclarationStatementContext": 84,
        "BreakStatementContext": 4,
        "MemberAccessExpressionContext": 1,
        "Predefined_typeContext": 1,
        "IsTypeContext": 59,
        "Class_baseContext": 10,
        "Floating_point_typeContext": 64,
        "ThisReferenceExpressionContext": 2,
        "ErrorNodeImpl": 62,
        "SwitchStatementContext": 1,
        "Switch_sectionContext": 6,
        "Switch_labelContext": 6,
        "Using_directivesContext": 4,
        "UsingNamespaceDirectiveContext": 6,
        "Rank_specifierContext": 10,
        "WhileStatementContext": 14,
        "Array_initializerContext": 8,
        "Lambda_expressionContext": 2,
        "Anonymous_function_signatureContext": 2,
        "Right_arrowContext": 2,
        "Anonymous_function_bodyContext": 2,
        "TryStatementContext": 1,
        "Catch_clausesContext": 1,
        "Specific_catch_clauseContext": 1,
        "Global_attribute_sectionContext": 8,
        "Global_attribute_targetContext": 8,
        "Attribute_listContext": 8,
        "AttributeContext": 8,
        "Qualified_alias_memberContext": 2,
        "Attribute_argumentContext": 9
    },
    "project_name": "GlenRios_HULK",
    "label": "original",
    "project_type": "hulk"
}