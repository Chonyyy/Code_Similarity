{
    "total_nodes": 121818,
    "max_depth": 2054,
    "number_of_variables": 153,
    "number_of_constants": 0,
    "out_variables": 0,
    "ref_params": 0,
    "number_of_methods": 173,
    "number_of_classes": 50,
    "number_of_interfaces": 6,
    "number_of_abstract_classes": 4,
    "number_of_sealed_classes": 0,
    "import_statements": 13,
    "number_of_try_blocks": 24,
    "number_of_lists": 42,
    "number_of_dictionaries": 0,
    "number_of_enums": 3,
    "number_of_delegates": 0,
    "function_calls": 285,
    "enums_names": [
        "Color",
        "TokenType",
        "ElementType"
    ],
    "control_structures_if": 191,
    "control_structures_switch": 6,
    "control_structures_for": 1,
    "control_structures_while": 8,
    "control_structures_dowhile": 0,
    "access_modifiers_public": 383,
    "access_modifiers_private": 48,
    "access_modifiers_protected": 3,
    "access_modifiers_internal": 2,
    "access_modifiers_static": 50,
    "access_modifiers_protected_internal": 0,
    "access_modifiers_private_protected": 0,
    "modifier_readonly": 1,
    "modifier_volatile": 0,
    "modifier_virtual": 4,
    "modifier_override": 46,
    "modifier_new": 119,
    "modifier_partial": 11,
    "modifier_extern": 0,
    "modifier_unsafe": 0,
    "modifier_async": 0,
    "linq_querie_select": 0,
    "linq_queries_where": 0,
    "linq_queries_orderBy": 0,
    "linq_queries_groupBy": 0,
    "linq_queries_join": 0,
    "linq_queries_sum": 37,
    "linq_queries_count": 0,
    "library_call_console": 0,
    "library_call_math": 17,
    "number_of_lambdas": 24,
    "number_of_getters": 50,
    "number_of_setters": 31,
    "number_of_tuples": 0,
    "number_of_namespaces": 23,
    "method_parameters": [
        [
            "PrintTokens",
            [
                [
                    "List<Token>",
                    "tokens"
                ],
                [
                    "TextWriter",
                    "outputStream"
                ],
                [
                    "string",
                    "file"
                ]
            ]
        ],
        [
            "Intercept",
            [
                [
                    "Element",
                    "element1"
                ],
                [
                    "Element",
                    "element2"
                ]
            ]
        ],
        [
            "InterceptPointPoint",
            [
                [
                    "Element.Point",
                    "element1"
                ],
                [
                    "Element.Point",
                    "element2"
                ]
            ]
        ],
        [
            "InterceptPointLine",
            [
                [
                    "Element.Point",
                    "element1"
                ],
                [
                    "Element.Lines",
                    "element2"
                ]
            ]
        ],
        [
            "InterceptPointRay",
            [
                [
                    "Element.Point",
                    "element1"
                ],
                [
                    "Element.Ray",
                    "element2"
                ]
            ]
        ],
        [
            "InterceptPointSegment",
            [
                [
                    "Element.Point",
                    "element1"
                ],
                [
                    "Element.Segment",
                    "element2"
                ]
            ]
        ],
        [
            "InterceptPointCircle",
            [
                [
                    "Element.Point",
                    "element1"
                ],
                [
                    "Element.Circle",
                    "element2"
                ]
            ]
        ],
        [
            "InterceptPointArc",
            [
                [
                    "Element.Point",
                    "element1"
                ],
                [
                    "Element.Arc",
                    "element2"
                ],
                [
                    "List<Element>",
                    "resultado"
                ]
            ]
        ],
        [
            "InterceptLineSegment",
            [
                [
                    "Element.Lines",
                    "element1"
                ],
                [
                    "Element.Segment",
                    "element2"
                ]
            ]
        ],
        [
            "InterceptLineLine",
            [
                [
                    "Element.Lines",
                    "element1"
                ],
                [
                    "Element.Lines",
                    "element2"
                ]
            ]
        ],
        [
            "InterceptLineRay",
            [
                [
                    "Element.Lines",
                    "element1"
                ],
                [
                    "Element.Ray",
                    "element2"
                ]
            ]
        ],
        [
            "InterceptLineCircle",
            [
                [
                    "Element.Lines",
                    "element1"
                ],
                [
                    "Element.Circle",
                    "element2"
                ]
            ]
        ],
        [
            "InterceptSegmentSegment",
            [
                [
                    "Element.Segment",
                    "element1"
                ],
                [
                    "Element.Segment",
                    "element2"
                ]
            ]
        ],
        [
            "InterceptSegmentRay",
            [
                [
                    "Element.Segment",
                    "element1"
                ],
                [
                    "Element.Ray",
                    "element2"
                ]
            ]
        ],
        [
            "InterceptSegmentCircle",
            [
                [
                    "Element.Segment",
                    "element1"
                ],
                [
                    "Element.Circle",
                    "element2"
                ]
            ]
        ],
        [
            "InterceptRayRay",
            [
                [
                    "Element.Ray",
                    "element1"
                ],
                [
                    "Element.Ray",
                    "element2"
                ]
            ]
        ],
        [
            "InterceptRayCircle",
            [
                [
                    "Element.Ray",
                    "element1"
                ],
                [
                    "Element.Circle",
                    "element2"
                ]
            ]
        ],
        [
            "InterceptCircleCircle",
            [
                [
                    "Element.Circle",
                    "element1"
                ],
                [
                    "Element.Circle",
                    "element2"
                ]
            ]
        ],
        [
            "CalcularPendiente",
            [
                [
                    "Element.Point",
                    "p1"
                ],
                [
                    "Element.Point",
                    "p2"
                ]
            ]
        ],
        [
            "DistanciaPuntoPunto",
            [
                [
                    "Element.Point",
                    "p1"
                ],
                [
                    "Element.Point",
                    "p2"
                ]
            ]
        ],
        [
            "Print",
            [
                [
                    "Stmt",
                    "stmt"
                ]
            ]
        ],
        [
            "VisitStmtList",
            [
                [
                    "Stmt.StmtList",
                    "stmtList"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitEmptyStmt",
            [
                [
                    "Stmt.Empty",
                    "stmt"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitPointStmt",
            [
                [
                    "Stmt.Point",
                    "stmt"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitEmptyExpr",
            [
                [
                    "Expr.Empty",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitNumberExpr",
            [
                [
                    "Expr.Number",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitStringExpr",
            [
                [
                    "Expr.String",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitVariableExpr",
            [
                [
                    "Expr.Variable",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitUnaryNotExpr",
            [
                [
                    "Expr.Unary.Not",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitUnaryMinusExpr",
            [
                [
                    "Expr.Unary.Minus",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitBinaryPowerExpr",
            [
                [
                    "Expr.Binary.Power",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitBinaryProductExpr",
            [
                [
                    "Expr.Binary.Product",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitBinaryDivisionExpr",
            [
                [
                    "Expr.Binary.Division",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitBinaryModulusExpr",
            [
                [
                    "Expr.Binary.Modulus",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitBinarySumExpr",
            [
                [
                    "Expr.Binary.Sum",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitBinaryDifferenceExpr",
            [
                [
                    "Expr.Binary.Difference",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitBinaryLessExpr",
            [
                [
                    "Expr.Binary.Less",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitBinaryLessEqualExpr",
            [
                [
                    "Expr.Binary.LessEqual",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitBinaryGreaterExpr",
            [
                [
                    "Expr.Binary.Greater",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitBinaryGreaterEqualExpr",
            [
                [
                    "Expr.Binary.GreaterEqual",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitBinaryEqualEqualExpr",
            [
                [
                    "Expr.Binary.EqualEqual",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitBinaryNotEqualExpr",
            [
                [
                    "Expr.Binary.NotEqual",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitBinaryAndExpr",
            [
                [
                    "Expr.Binary.And",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitBinaryOrExpr",
            [
                [
                    "Expr.Binary.Or",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitConditionalExpr",
            [
                [
                    "Expr.Conditional",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitLetInExpr",
            [
                [
                    "Expr.LetIn",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitCallExpr",
            [
                [
                    "Expr.Call",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitMeasureExpr",
            [
                [
                    "Expr.Measure",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitPointExpr",
            [
                [
                    "Expr.Point",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitLinesExpr",
            [
                [
                    "Expr.Lines",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitSegmentExpr",
            [
                [
                    "Expr.Segment",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitRayExpr",
            [
                [
                    "Expr.Ray",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitCircleExpr",
            [
                [
                    "Expr.Circle",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitArcExpr",
            [
                [
                    "Expr.Arc",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitSequenceExpr",
            [
                [
                    "Expr.Sequence",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitIntersectExpr",
            [
                [
                    "Expr.Intersect",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitCountExpr",
            [
                [
                    "Expr.Count",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitRandomsExpr",
            [
                [
                    "Expr.Randoms",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitSamplesExpr",
            [
                [
                    "Expr.Samples",
                    "expr"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "Operate",
            [
                [
                    "Element",
                    "parameters"
                ],
                [
                    "string",
                    "operation"
                ]
            ]
        ],
        [
            "Register",
            [
                [
                    "string",
                    "operation"
                ],
                [
                    "Delegate",
                    "behaviour"
                ]
            ]
        ],
        [
            "EqualTo",
            [
                [
                    "Element",
                    "other"
                ]
            ]
        ],
        [
            "NotEqualTo",
            [
                [
                    "Element",
                    "other"
                ]
            ]
        ],
        [
            "EqualTo",
            [
                [
                    "Element",
                    "other"
                ]
            ]
        ],
        [
            "EqualTo",
            [
                [
                    "Element",
                    "other"
                ]
            ]
        ],
        [
            "EqualTo",
            [
                [
                    "Element",
                    "other"
                ]
            ]
        ],
        [
            "EqualTo",
            [
                [
                    "Element",
                    "other"
                ]
            ]
        ],
        [
            "EqualTo",
            [
                [
                    "Element",
                    "other"
                ]
            ]
        ],
        [
            "ContainsArity",
            [
                [
                    "int",
                    "arity"
                ]
            ]
        ],
        [
            "GetFunction",
            [
                [
                    "int",
                    "arity"
                ]
            ]
        ],
        [
            "EqualTo",
            [
                [
                    "Element",
                    "other"
                ]
            ]
        ],
        [
            "AddToken",
            [
                [
                    "TokenType",
                    "type"
                ]
            ]
        ],
        [
            "AddToken",
            [
                [
                    "TokenType",
                    "type"
                ],
                [
                    "object?",
                    "literal"
                ]
            ]
        ],
        [
            "Interpret",
            [
                [
                    "Program",
                    "program"
                ]
            ]
        ],
        [
            "Interpret",
            [
                [
                    "Stmt",
                    "stmt"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitStmtList",
            [
                [
                    "Stmt.StmtList",
                    "stmtList"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitEmptyStmt",
            [
                [
                    "Stmt.Empty",
                    "emptyStmt"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitPointStmt",
            [
                [
                    "Stmt.Point",
                    "point"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitLinesStmt",
            [
                [
                    "Stmt.Lines",
                    "lines"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitSegmentStmt",
            [
                [
                    "Stmt.Segment",
                    "segment"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitRayStmt",
            [
                [
                    "Stmt.Ray",
                    "ray"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitCircleStmt",
            [
                [
                    "Stmt.Circle",
                    "circle"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitArcStmt",
            [
                [
                    "Stmt.Arc",
                    "arc"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitConstantDeclarationStmt",
            [
                [
                    "Stmt.Declaration.Constant",
                    "declaration"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitFunctionDeclarationStmt",
            [
                [
                    "Stmt.Declaration.Function",
                    "functionStmt"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitMatchStmt",
            [
                [
                    "Stmt.Declaration.Match",
                    "stmt"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitPrintStmt",
            [
                [
                    "Stmt.Print",
                    "stmt"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitColorStmt",
            [
                [
                    "Stmt.Color",
                    "stmt"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitDrawStmt",
            [
                [
                    "Stmt.Draw",
                    "stmt"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "OnErrorFound",
            [
                [
                    "IErrorLocalizator",
                    "error"
                ],
                [
                    "string",
                    "message"
                ],
                [
                    "bool",
                    "enforceAbort"
                ]
            ]
        ],
        [
            "Check",
            [
                [
                    "Program",
                    "program"
                ]
            ]
        ],
        [
            "Check",
            [
                [
                    "Stmt",
                    "stmt"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitStmtList",
            [
                [
                    "Stmt.StmtList",
                    "stmtList"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitEmptyStmt",
            [
                [
                    "Stmt.Empty",
                    "emptyStmt"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitPointStmt",
            [
                [
                    "Stmt.Point",
                    "pointStmt"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitLinesStmt",
            [
                [
                    "Stmt.Lines",
                    "linesStmt"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitSegmentStmt",
            [
                [
                    "Stmt.Segment",
                    "segmentStmt"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitRayStmt",
            [
                [
                    "Stmt.Ray",
                    "rayStmt"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitCircleStmt",
            [
                [
                    "Stmt.Circle",
                    "circleStmt"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitArcStmt",
            [
                [
                    "Stmt.Arc",
                    "arcStmt"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitConstantDeclarationStmt",
            [
                [
                    "Stmt.Declaration.Constant",
                    "declStmt"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitFunctionDeclarationStmt",
            [
                [
                    "Stmt.Declaration.Function",
                    "functionStmt"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitPrintStmt",
            [
                [
                    "Stmt.Print",
                    "printStmt"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitColorStmt",
            [
                [
                    "Stmt.Color",
                    "colorStmt"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitDrawStmt",
            [
                [
                    "Stmt.Draw",
                    "drawStmt"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitEvalStmt",
            [
                [
                    "Stmt.Eval",
                    "evalStmt"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "VisitMatchStmt",
            [
                [
                    "Stmt.Declaration.Match",
                    "stmt"
                ],
                [
                    "Scope",
                    "scope"
                ]
            ]
        ],
        [
            "HandleError",
            [
                [
                    "IAbortable",
                    "caller"
                ],
                [
                    "bool",
                    "enforceAbort"
                ],
                [
                    "int",
                    "MaxErrorCount"
                ],
                [
                    "ICollection<GSharpCompiler.Error>",
                    "errors"
                ],
                [
                    "string",
                    "message"
                ],
                [
                    "int",
                    "line"
                ],
                [
                    "int",
                    "offset"
                ],
                [
                    "string",
                    "file"
                ]
            ]
        ],
        [
            "OnErrorFound",
            [
                [
                    "IErrorLocalizator",
                    "error"
                ],
                [
                    "string",
                    "message"
                ],
                [
                    "bool",
                    "enforceAbort"
                ]
            ]
        ],
        [
            "OnErrorFound",
            [
                [
                    "int",
                    "line"
                ],
                [
                    "int",
                    "offset"
                ],
                [
                    "string",
                    "file"
                ],
                [
                    "string",
                    "message"
                ],
                [
                    "bool",
                    "enforceAbort"
                ]
            ]
        ],
        [
            "OnErrorFound",
            [
                [
                    "int",
                    "line"
                ],
                [
                    "int",
                    "offset"
                ],
                [
                    "string",
                    "file"
                ],
                [
                    "string",
                    "message"
                ],
                [
                    "bool",
                    "enforceAbort"
                ]
            ]
        ],
        [
            "OnErrorFound",
            [
                [
                    "IErrorLocalizator",
                    "error"
                ],
                [
                    "string",
                    "message"
                ],
                [
                    "bool",
                    "enforceAbort"
                ]
            ]
        ],
        [
            "ParseStmtList",
            [
                [
                    "TokenType",
                    "stopAtThisType"
                ]
            ]
        ],
        [
            "CompileFromFile",
            [
                [
                    "string",
                    "path"
                ],
                [
                    "Flags?",
                    "flags"
                ]
            ]
        ],
        [
            "CompileFromSource",
            [
                [
                    "string",
                    "source"
                ],
                [
                    "string",
                    "sourceFileName"
                ],
                [
                    "Flags?",
                    "flags"
                ]
            ]
        ],
        [
            "HandleError",
            [
                [
                    "IAbortable",
                    "caller"
                ],
                [
                    "bool",
                    "enforceAbort"
                ],
                [
                    "int",
                    "MaxErrorCount"
                ],
                [
                    "ICollection<GSharpCompiler.Error>",
                    "errors"
                ],
                [
                    "string",
                    "message"
                ],
                [
                    "int",
                    "line"
                ],
                [
                    "int",
                    "offset"
                ],
                [
                    "string",
                    "file"
                ]
            ]
        ],
        [
            "OnErrorFound",
            [
                [
                    "IErrorLocalizator",
                    "error"
                ],
                [
                    "string",
                    "message"
                ],
                [
                    "bool",
                    "enforceAbort"
                ]
            ]
        ],
        [
            "OnErrorFound",
            [
                [
                    "int",
                    "line"
                ],
                [
                    "int",
                    "offset"
                ],
                [
                    "string",
                    "file"
                ],
                [
                    "string",
                    "message"
                ],
                [
                    "bool",
                    "enforceAbort"
                ]
            ]
        ],
        [
            "_Process",
            [
                [
                    "double",
                    "delta"
                ]
            ]
        ],
        [
            "_Process",
            [
                [
                    "double",
                    "delta"
                ]
            ]
        ],
        [
            "WriteLine",
            [
                [
                    "object?",
                    "value"
                ]
            ]
        ],
        [
            "_Process",
            [
                [
                    "double",
                    "delta"
                ]
            ]
        ],
        [
            "_Process",
            [
                [
                    "double",
                    "delta"
                ]
            ]
        ],
        [
            "_Process",
            [
                [
                    "double",
                    "delta"
                ]
            ]
        ],
        [
            "_Process",
            [
                [
                    "double",
                    "delta"
                ]
            ]
        ],
        [
            "_Process",
            [
                [
                    "double",
                    "delta"
                ]
            ]
        ],
        [
            "_Process",
            [
                [
                    "double",
                    "delta"
                ]
            ]
        ],
        [
            "_Process",
            [
                [
                    "double",
                    "delta"
                ]
            ]
        ],
        [
            "_Process",
            [
                [
                    "double",
                    "delta"
                ]
            ]
        ],
        [
            "_Process",
            [
                [
                    "double",
                    "delta"
                ]
            ]
        ]
    ],
    "variable_names": [
        [
            "float",
            "y1"
        ],
        [
            "float",
            "y2"
        ],
        [
            "List",
            "resultadocopia"
        ],
        [
            "float",
            "C"
        ],
        [
            "float",
            "discriminanteVertical"
        ],
        [
            "float",
            "n1"
        ],
        [
            "List",
            "inCircle"
        ],
        [
            "float",
            "x2"
        ],
        [
            "float",
            "pendiente1"
        ],
        [
            "float",
            "n2"
        ],
        [
            "float",
            "r1"
        ],
        [
            "float",
            "distancia"
        ],
        [
            "float",
            "x"
        ],
        [
            "float",
            "pendiente2"
        ],
        [
            "List",
            "resultadoaux1"
        ],
        [
            "Element",
            "line"
        ],
        [
            "float",
            "q"
        ],
        [
            "float",
            "h"
        ],
        [
            "float",
            "k"
        ],
        [
            "float",
            "discriminante"
        ],
        [
            "float",
            "n"
        ],
        [
            "List",
            "resultado"
        ],
        [
            "List",
            "resultadoaux"
        ],
        [
            "float",
            "newx"
        ],
        [
            "float",
            "A"
        ],
        [
            "List",
            "resultadoaux2"
        ],
        [
            "float",
            "p"
        ],
        [
            "float",
            "x1"
        ],
        [
            "float",
            "pendiente"
        ],
        [
            "var",
            "ramon"
        ],
        [
            "List",
            "inElement1"
        ],
        [
            "List",
            "inElement2"
        ],
        [
            "float",
            "B"
        ],
        [
            "float",
            "newy"
        ],
        [
            "float",
            "r2"
        ],
        [
            "Element",
            "templine"
        ],
        [
            "float",
            "y"
        ],
        [
            "string",
            "result"
        ],
        [
            "char",
            "c"
        ],
        [
            "TokenType",
            "type"
        ],
        [
            "string",
            "lexeme"
        ],
        [
            "int",
            "openingQuoteOffset"
        ],
        [
            "int",
            "openingQuoteLine"
        ],
        [
            "string",
            "value"
        ],
        [
            "IDrawable",
            "temp"
        ],
        [
            "Element",
            "sequenceElement"
        ],
        [
            "Element",
            "enumerator"
        ],
        [
            "int",
            "i"
        ],
        [
            "Element",
            "sequence"
        ],
        [
            "Element",
            "evaluated"
        ],
        [
            "Element",
            "sequence"
        ],
        [
            "Element",
            "rValue"
        ],
        [
            "Stmt",
            "tmp"
        ],
        [
            "Stmt",
            "stmts"
        ],
        [
            "List",
            "elements"
        ],
        [
            "List",
            "tokens"
        ],
        [
            "string",
            "sourceCode"
        ],
        [
            "Program",
            "program"
        ],
        [
            "List",
            "errors"
        ],
        [
            "List",
            "drawables"
        ],
        [
            "var",
            "nodocontrol"
        ],
        [
            "var",
            "flags"
        ],
        [
            "var",
            "respuesta"
        ],
        [
            "int",
            "n"
        ],
        [
            "var",
            "lienzocontrol"
        ],
        [
            "var",
            "nodolector"
        ],
        [
            "string",
            "texto"
        ],
        [
            "var",
            "consola"
        ],
        [
            "StreamWriter",
            "sw"
        ],
        [
            "string",
            "direction"
        ],
        [
            "var",
            "lienzo"
        ],
        [
            "var",
            "menu"
        ],
        [
            "var",
            "menu"
        ],
        [
            "var",
            "NameMenu"
        ],
        [
            "var",
            "nodocontrol"
        ],
        [
            "var",
            "nodocontrol"
        ],
        [
            "string",
            "texto"
        ],
        [
            "var",
            "NameMenu"
        ],
        [
            "var",
            "save"
        ],
        [
            "var",
            "padre"
        ],
        [
            "var",
            "default_font"
        ],
        [
            "var",
            "default_font_size"
        ],
        [
            "var",
            "menu"
        ],
        [
            "float",
            "GrosorDePuntos"
        ],
        [
            "float",
            "delta"
        ],
        [
            "Vector2",
            "punto"
        ],
        [
            "CodeHighlighter",
            "highlighter"
        ]
    ],
    "method_names": [
        "PrintTokens",
        "InterceptLineCircle",
        "InterceptLineRay",
        "DistanciaPuntoPunto",
        "InterceptSegmentRay",
        "InterceptPointArc",
        "InterceptRayRay",
        "InterceptRayCircle",
        "InterceptLineLine",
        "InterceptPointLine",
        "InterceptPointPoint",
        "InterceptCircleCircle",
        "InterceptPointCircle",
        "InterceptLineSegment",
        "CalcularPendiente",
        "InterceptSegmentCircle",
        "InterceptSegmentSegment",
        "InterceptPointSegment",
        "Intercept",
        "InterceptPointRay",
        "VisitPointStmt",
        "VisitStmtList",
        "Print",
        "VisitEmptyStmt",
        "VisitArcExpr",
        "VisitBinarySumExpr",
        "VisitUnaryMinusExpr",
        "Accept",
        "VisitCallExpr",
        "VisitLetInExpr",
        "VisitLinesExpr",
        "VisitBinaryDifferenceExpr",
        "VisitBinaryGreaterEqualExpr",
        "VisitBinaryModulusExpr",
        "VisitBinaryProductExpr",
        "VisitNumberExpr",
        "VisitVariableExpr",
        "VisitBinaryDivisionExpr",
        "VisitEmptyExpr",
        "VisitSamplesExpr",
        "VisitRayExpr",
        "VisitBinaryEqualEqualExpr",
        "VisitBinaryLessExpr",
        "VisitCircleExpr",
        "VisitIntersectExpr",
        "VisitSegmentExpr",
        "VisitStringExpr",
        "VisitSequenceExpr",
        "VisitRandomsExpr",
        "VisitUnaryNotExpr",
        "VisitBinaryAndExpr",
        "VisitBinaryOrExpr",
        "VisitBinaryGreaterExpr",
        "VisitBinaryNotEqualExpr",
        "VisitCountExpr",
        "VisitConditionalExpr",
        "VisitBinaryLessEqualExpr",
        "VisitBinaryPowerExpr",
        "VisitMeasureExpr",
        "VisitPointExpr",
        "Register",
        "Operate",
        "NotEqualTo",
        "ToString",
        "EqualTo",
        "GetFunction",
        "ContainsArity",
        "ScanIdentifier",
        "Scan",
        "Abort",
        "ScanString",
        "TryParseThreeDots",
        "ScanNumber",
        "AddToken",
        "ScanToken",
        "ScanComment",
        "VisitConstantDeclarationStmt",
        "Interpret",
        "VisitPointStmt",
        "VisitDrawStmt",
        "VisitEmptyStmt",
        "VisitPrintStmt",
        "VisitStmtList",
        "VisitMatchStmt",
        "VisitFunctionDeclarationStmt",
        "VisitSegmentStmt",
        "VisitColorStmt",
        "VisitCircleStmt",
        "VisitLinesStmt",
        "VisitRayStmt",
        "VisitArcStmt",
        "VisitConstantDeclarationStmt",
        "VisitPointStmt",
        "VisitDrawStmt",
        "VisitEmptyStmt",
        "Abort",
        "VisitPrintStmt",
        "VisitStmtList",
        "VisitMatchStmt",
        "VisitCircleStmt",
        "OnErrorFound",
        "VisitFunctionDeclarationStmt",
        "VisitEvalStmt",
        "VisitSegmentStmt",
        "VisitColorStmt",
        "Check",
        "VisitLinesStmt",
        "VisitRayStmt",
        "VisitArcStmt",
        "OnErrorFound",
        "Abort",
        "HandleError",
        "ParseStmtList",
        "Abort",
        "Parse",
        "OnErrorFound",
        "ParseProgram",
        "CompileFromSource",
        "CompileFromFile",
        "Abort",
        "HandleError",
        "OnErrorFound",
        "_Ready",
        "_pressed",
        "_Process",
        "ToDraw",
        "_Ready",
        "WriteLine",
        "_Process",
        "_Ready",
        "_pressed",
        "_Process",
        "_Ready",
        "_pressed",
        "_Process",
        "_Process",
        "_Ready",
        "callexport",
        "_pressed",
        "_Ready",
        "_pressed",
        "_Process",
        "cancel",
        "_Ready",
        "accept",
        "_Process",
        "_Ready",
        "_pressed",
        "_Process",
        "_Ready",
        "_Draw",
        "_Process",
        "_Ready",
        "_Process",
        "_Ready",
        "_Process"
    ],
    "method_return_types": [
        [
            "PrintTokens",
            "void"
        ],
        [
            "InterceptPointLine",
            "List"
        ],
        [
            "InterceptLineRay",
            "List"
        ],
        [
            "InterceptRayRay",
            "List"
        ],
        [
            "InterceptRayCircle",
            "List"
        ],
        [
            "InterceptLineLine",
            "List"
        ],
        [
            "InterceptLineSegment",
            "List"
        ],
        [
            "DistanciaPuntoPunto",
            "float"
        ],
        [
            "InterceptSegmentSegment",
            "List"
        ],
        [
            "Intercept",
            "Element"
        ],
        [
            "InterceptPointPoint",
            "List"
        ],
        [
            "InterceptSegmentCircle",
            "List"
        ],
        [
            "InterceptPointArc",
            "List"
        ],
        [
            "InterceptSegmentRay",
            "List"
        ],
        [
            "CalcularPendiente",
            "float"
        ],
        [
            "InterceptPointCircle",
            "List"
        ],
        [
            "InterceptCircleCircle",
            "List"
        ],
        [
            "InterceptLineCircle",
            "List"
        ],
        [
            "InterceptPointSegment",
            "List"
        ],
        [
            "InterceptPointRay",
            "List"
        ],
        [
            "VisitStmtList",
            "string"
        ],
        [
            "VisitPointStmt",
            "string"
        ],
        [
            "Print",
            "string"
        ],
        [
            "VisitEmptyStmt",
            "string"
        ],
        [
            "VisitBinaryLessExpr",
            "T"
        ],
        [
            "VisitSegmentExpr",
            "T"
        ],
        [
            "VisitCountExpr",
            "T"
        ],
        [
            "VisitBinaryLessEqualExpr",
            "T"
        ],
        [
            "VisitRayExpr",
            "T"
        ],
        [
            "VisitBinaryGreaterExpr",
            "T"
        ],
        [
            "VisitCallExpr",
            "T"
        ],
        [
            "VisitUnaryNotExpr",
            "T"
        ],
        [
            "VisitConditionalExpr",
            "T"
        ],
        [
            "VisitMeasureExpr",
            "T"
        ],
        [
            "VisitVariableExpr",
            "T"
        ],
        [
            "VisitNumberExpr",
            "T"
        ],
        [
            "VisitStringExpr",
            "T"
        ],
        [
            "VisitBinaryGreaterEqualExpr",
            "T"
        ],
        [
            "VisitBinarySumExpr",
            "T"
        ],
        [
            "VisitSequenceExpr",
            "T"
        ],
        [
            "VisitEmptyExpr",
            "T"
        ],
        [
            "VisitCircleExpr",
            "T"
        ],
        [
            "VisitLetInExpr",
            "T"
        ],
        [
            "VisitLinesExpr",
            "T"
        ],
        [
            "VisitBinaryPowerExpr",
            "T"
        ],
        [
            "VisitBinaryNotEqualExpr",
            "T"
        ],
        [
            "VisitBinaryDivisionExpr",
            "T"
        ],
        [
            "Accept",
            "T"
        ],
        [
            "VisitUnaryMinusExpr",
            "T"
        ],
        [
            "VisitBinaryAndExpr",
            "T"
        ],
        [
            "VisitBinaryModulusExpr",
            "T"
        ],
        [
            "VisitBinaryProductExpr",
            "T"
        ],
        [
            "VisitBinaryDifferenceExpr",
            "T"
        ],
        [
            "VisitRandomsExpr",
            "T"
        ],
        [
            "VisitBinaryOrExpr",
            "T"
        ],
        [
            "VisitPointExpr",
            "T"
        ],
        [
            "VisitBinaryEqualEqualExpr",
            "T"
        ],
        [
            "VisitSamplesExpr",
            "T"
        ],
        [
            "VisitIntersectExpr",
            "T"
        ],
        [
            "VisitArcExpr",
            "T"
        ],
        [
            "Operate",
            "Element"
        ],
        [
            "Register",
            "void"
        ],
        [
            "ToString",
            "string"
        ],
        [
            "EqualTo",
            "Number"
        ],
        [
            "GetFunction",
            "Function"
        ],
        [
            "EqualTo",
            "Element"
        ],
        [
            "ContainsArity",
            "bool"
        ],
        [
            "NotEqualTo",
            "Element"
        ],
        [
            "TryParseThreeDots",
            "bool"
        ],
        [
            "Scan",
            "List"
        ],
        [
            "Abort",
            "void"
        ],
        [
            "ScanComment",
            "void"
        ],
        [
            "AddToken",
            "void"
        ],
        [
            "ScanNumber",
            "void"
        ],
        [
            "ScanIdentifier",
            "void"
        ],
        [
            "ScanToken",
            "void"
        ],
        [
            "ScanString",
            "void"
        ],
        [
            "VisitCircleStmt",
            "object"
        ],
        [
            "VisitFunctionDeclarationStmt",
            "object"
        ],
        [
            "VisitColorStmt",
            "object"
        ],
        [
            "VisitSegmentStmt",
            "object"
        ],
        [
            "Interpret",
            "object"
        ],
        [
            "VisitMatchStmt",
            "object"
        ],
        [
            "VisitRayStmt",
            "object"
        ],
        [
            "VisitPrintStmt",
            "object"
        ],
        [
            "VisitConstantDeclarationStmt",
            "object"
        ],
        [
            "VisitDrawStmt",
            "object"
        ],
        [
            "VisitArcStmt",
            "object"
        ],
        [
            "VisitStmtList",
            "object"
        ],
        [
            "VisitEmptyStmt",
            "object"
        ],
        [
            "VisitPointStmt",
            "object"
        ],
        [
            "Interpret",
            "List"
        ],
        [
            "VisitLinesStmt",
            "object"
        ],
        [
            "VisitCircleStmt",
            "object"
        ],
        [
            "VisitPointStmt",
            "object"
        ],
        [
            "VisitFunctionDeclarationStmt",
            "object"
        ],
        [
            "VisitSegmentStmt",
            "object"
        ],
        [
            "VisitMatchStmt",
            "object"
        ],
        [
            "Abort",
            "void"
        ],
        [
            "Check",
            "void"
        ],
        [
            "OnErrorFound",
            "void"
        ],
        [
            "VisitRayStmt",
            "object"
        ],
        [
            "VisitPrintStmt",
            "object"
        ],
        [
            "VisitConstantDeclarationStmt",
            "object"
        ],
        [
            "VisitDrawStmt",
            "object"
        ],
        [
            "VisitEvalStmt",
            "object"
        ],
        [
            "VisitArcStmt",
            "object"
        ],
        [
            "VisitEmptyStmt",
            "object"
        ],
        [
            "VisitStmtList",
            "object"
        ],
        [
            "VisitColorStmt",
            "object"
        ],
        [
            "VisitLinesStmt",
            "object"
        ],
        [
            "HandleError",
            "void"
        ],
        [
            "Abort",
            "void"
        ],
        [
            "OnErrorFound",
            "void"
        ],
        [
            "ParseProgram",
            "Program"
        ],
        [
            "Abort",
            "void"
        ],
        [
            "OnErrorFound",
            "void"
        ],
        [
            "Parse",
            "Program"
        ],
        [
            "ParseStmtList",
            "Stmt"
        ],
        [
            "CompileFromSource",
            "Response"
        ],
        [
            "CompileFromFile",
            "Response"
        ],
        [
            "HandleError",
            "void"
        ],
        [
            "Abort",
            "void"
        ],
        [
            "OnErrorFound",
            "void"
        ],
        [
            "_pressed",
            "void"
        ],
        [
            "_Ready",
            "void"
        ],
        [
            "_Process",
            "void"
        ],
        [
            "ToDraw",
            "void"
        ],
        [
            "_Ready",
            "void"
        ],
        [
            "_Process",
            "void"
        ],
        [
            "WriteLine",
            "void"
        ],
        [
            "_pressed",
            "void"
        ],
        [
            "_Ready",
            "void"
        ],
        [
            "_Process",
            "void"
        ],
        [
            "_pressed",
            "void"
        ],
        [
            "_Ready",
            "void"
        ],
        [
            "_Process",
            "void"
        ],
        [
            "_pressed",
            "void"
        ],
        [
            "_Ready",
            "void"
        ],
        [
            "_Process",
            "void"
        ],
        [
            "callexport",
            "void"
        ],
        [
            "_pressed",
            "void"
        ],
        [
            "_Ready",
            "void"
        ],
        [
            "_Process",
            "void"
        ],
        [
            "_Ready",
            "void"
        ],
        [
            "cancel",
            "void"
        ],
        [
            "_Process",
            "void"
        ],
        [
            "accept",
            "void"
        ],
        [
            "_pressed",
            "void"
        ],
        [
            "_Ready",
            "void"
        ],
        [
            "_Process",
            "void"
        ],
        [
            "_Draw",
            "void"
        ],
        [
            "_Ready",
            "void"
        ],
        [
            "_Process",
            "void"
        ],
        [
            "_Ready",
            "void"
        ],
        [
            "_Process",
            "void"
        ],
        [
            "_Ready",
            "void"
        ],
        [
            "_Process",
            "void"
        ]
    ],
    "class_names": [
        "Utils",
        "Interceptions",
        "AstPrinter",
        "ColorStack",
        "Empty",
        "Expr",
        "OperationTable",
        "Token",
        "Scope",
        "Function",
        "RuntimeDefined",
        "String",
        "Element",
        "Number",
        "Point",
        "Measure",
        "Undefined",
        "FunctionList",
        "Program",
        "Scanner",
        "Interpreter",
        "TypeChecker",
        "GSharpCompilerComponent",
        "Parser",
        "Response",
        "Compiler",
        "Flags",
        "Error",
        "RuntimeException",
        "ScopeException",
        "GSharpException",
        "DependencyResolverException",
        "CircularDependenciesException",
        "ScannerException",
        "ParserException",
        "RecoveryModeException",
        "TypeCheckerException",
        "CompileTimeException",
        "ClearConsole",
        "NodoPadre",
        "Imprimidor",
        "Cancel",
        "Accept",
        "Save",
        "Clear",
        "Menu_de_Nombre",
        "Draw_Button",
        "Lienzo",
        "Lienzocontrol",
        "Lector_de_Codigo"
    ],
    "interface_names": [
        "IVisitorExpr",
        "IVisitableExpr",
        "IDrawable",
        "IErrorLocalizator",
        "IAbortable",
        "ICompileTimeErrorHandler"
    ],
    "delegate_names": [],
    "node_count": {
        "Compilation_unitContext": 35,
        "Namespace_member_declarationsContext": 34,
        "Namespace_member_declarationContext": 298,
        "Namespace_declarationContext": 23,
        "TerminalNodeImpl": 18571,
        "Qualified_identifierContext": 23,
        "IdentifierContext": 6523,
        "Namespace_bodyContext": 23,
        "ErrorNodeImpl": 27646,
        "Type_declarationContext": 275,
        "All_member_modifiersContext": 534,
        "All_member_modifierContext": 640,
        "Class_definitionContext": 50,
        "Class_bodyContext": 56,
        "Class_member_declarationsContext": 51,
        "Class_member_declarationContext": 352,
        "Common_member_declarationContext": 352,
        "Method_declarationContext": 173,
        "Method_member_nameContext": 173,
        "Formal_parameter_listContext": 155,
        "Fixed_parametersContext": 155,
        "Fixed_parameterContext": 307,
        "Arg_declarationContext": 309,
        "Type_Context": 1288,
        "Base_typeContext": 1293,
        "Class_typeContext": 1196,
        "Namespace_or_type_nameContext": 1181,
        "Type_argument_listContext": 155,
        "ExpressionContext": 2492,
        "Non_assignment_expressionContext": 2324,
        "Conditional_expressionContext": 2300,
        "Null_coalescing_expressionContext": 2300,
        "Conditional_or_expressionContext": 2300,
        "Conditional_and_expressionContext": 2305,
        "Inclusive_or_expressionContext": 2364,
        "Exclusive_or_expressionContext": 2364,
        "And_expressionContext": 2364,
        "Equality_expressionContext": 2364,
        "Relational_expressionContext": 2469,
        "Shift_expressionContext": 2586,
        "Additive_expressionContext": 2586,
        "Multiplicative_expressionContext": 2681,
        "Switch_expressionContext": 2754,
        "Range_expressionContext": 2754,
        "Unary_expressionContext": 3009,
        "Primary_expressionContext": 2893,
        "LiteralExpressionContext": 365,
        "LiteralContext": 365,
        "String_literalContext": 183,
        "Method_bodyContext": 173,
        "BlockContext": 419,
        "Statement_listContext": 426,
        "StatementContext": 980,
        "Embedded_statementContext": 811,
        "ExpressionStatementContext": 439,
        "SimpleNameExpressionContext": 2104,
        "Member_accessContext": 1751,
        "Typed_member_declarationContext": 229,
        "DeclarationStatementContext": 153,
        "Local_variable_declarationContext": 153,
        "Local_variable_typeContext": 170,
        "Local_variable_declaratorContext": 153,
        "Local_variable_initializerContext": 144,
        "ObjectCreationExpressionContext": 285,
        "Object_creation_expressionContext": 284,
        "IfStatementContext": 191,
        "If_bodyContext": 272,
        "SwitchStatementContext": 6,
        "Switch_sectionContext": 48,
        "Switch_labelContext": 49,
        "AssignmentContext": 139,
        "Assignment_operatorContext": 139,
        "Method_invocationContext": 460,
        "Argument_listContext": 634,
        "ArgumentContext": 1106,
        "Cast_expressionContext": 93,
        "BreakStatementContext": 51,
        "Bracket_expressionContext": 10,
        "Indexer_argumentContext": 10,
        "ReturnStatementContext": 132,
        "Simple_typeContext": 157,
        "Numeric_typeContext": 140,
        "Floating_point_typeContext": 86,
        "ParenthesisExpressionsContext": 102,
        "ForeachStatementContext": 17,
        "MemberAccessExpressionContext": 14,
        "Predefined_typeContext": 14,
        "Class_baseContext": 39,
        "ThisReferenceExpressionContext": 20,
        "AttributesContext": 22,
        "Attribute_sectionContext": 22,
        "Attribute_listContext": 13,
        "AttributeContext": 13,
        "Field_declarationContext": 49,
        "Variable_declaratorsContext": 49,
        "Variable_declaratorContext": 49,
        "Variable_initializerContext": 36,
        "Constructor_declarationContext": 30,
        "BodyContext": 29,
        "Property_declarationContext": 50,
        "Member_nameContext": 50,
        "Accessor_declarationsContext": 50,
        "Accessor_bodyContext": 81,
        "Tuple_typeContext": 5,
        "Tuple_elementContext": 6,
        "Enum_definitionContext": 3,
        "Enum_bodyContext": 3,
        "Enum_member_declarationContext": 81,
        "Using_directivesContext": 13,
        "UsingNamespaceDirectiveContext": 29,
        "Interface_definitionContext": 6,
        "Variant_type_parameter_listContext": 1,
        "Variant_type_parameterContext": 1,
        "Type_parameter_listContext": 2,
        "Type_parameterContext": 2,
        "Integral_typeContext": 54,
        "Set_accessor_declarationContext": 31,
        "Accessor_modifierContext": 23,
        "Constructor_initializerContext": 21,
        "Rank_specifierContext": 3,
        "Object_or_collection_initializerContext": 2,
        "Collection_initializerContext": 2,
        "Element_initializerContext": 38,
        "Parameter_arrayContext": 2,
        "Array_typeContext": 1,
        "TryStatementContext": 24,
        "Catch_clausesContext": 23,
        "Specific_catch_clauseContext": 27,
        "ThrowStatementContext": 20,
        "Lambda_expressionContext": 24,
        "Anonymous_function_signatureContext": 24,
        "Explicit_anonymous_function_parameter_listContext": 24,
        "Explicit_anonymous_function_parameterContext": 46,
        "Right_arrowContext": 26,
        "Anonymous_function_bodyContext": 24,
        "Throwable_expressionContext": 12,
        "IsTypeContext": 4,
        "Operator_declarationContext": 1,
        "Overloadable_operatorContext": 1,
        "Boolean_literalContext": 16,
        "Indexer_declarationContext": 1,
        "Expression_listContext": 33,
        "WhileStatementContext": 8,
        "ForStatementContext": 1,
        "For_initializerContext": 1,
        "For_iteratorContext": 1,
        "ContinueStatementContext": 1,
        "BaseAccessExpressionContext": 3,
        "Interface_baseContext": 1,
        "Interface_type_listContext": 1,
        "Throw_expressionContext": 1,
        "UsingStatementContext": 1,
        "Resource_acquisitionContext": 1
    },
    "project_name": "Vextroyer_Geo-Wall-E",
    "label": "original",
    "project_type": "wallE"
}