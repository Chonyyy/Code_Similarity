{
    "total_nodes": 28315,
    "max_depth": 735,
    "number_of_variables": 33,
    "number_of_constants": 0,
    "out_variables": 0,
    "ref_params": 0,
    "number_of_methods": 61,
    "number_of_classes": 21,
    "number_of_interfaces": 1,
    "number_of_abstract_classes": 0,
    "number_of_sealed_classes": 0,
    "import_statements": 5,
    "number_of_try_blocks": 4,
    "number_of_lists": 2,
    "number_of_dictionaries": 0,
    "number_of_enums": 1,
    "number_of_delegates": 0,
    "function_calls": 32,
    "enums_names": [
        "TokenType"
    ],
    "control_structures_if": 34,
    "control_structures_switch": 4,
    "control_structures_for": 1,
    "control_structures_while": 7,
    "control_structures_dowhile": 0,
    "access_modifiers_public": 117,
    "access_modifiers_private": 43,
    "access_modifiers_protected": 0,
    "access_modifiers_internal": 0,
    "access_modifiers_static": 8,
    "access_modifiers_protected_internal": 0,
    "access_modifiers_private_protected": 0,
    "modifier_readonly": 30,
    "modifier_volatile": 0,
    "modifier_virtual": 0,
    "modifier_override": 10,
    "modifier_new": 17,
    "modifier_partial": 0,
    "modifier_extern": 0,
    "modifier_unsafe": 0,
    "modifier_async": 0,
    "linq_querie_select": 0,
    "linq_queries_where": 0,
    "linq_queries_orderBy": 0,
    "linq_queries_groupBy": 0,
    "linq_queries_join": 0,
    "linq_queries_sum": 4,
    "linq_queries_count": 0,
    "library_call_console": 3,
    "library_call_math": 6,
    "number_of_lambdas": 0,
    "number_of_getters": 8,
    "number_of_setters": 7,
    "number_of_tuples": 0,
    "number_of_namespaces": 0,
    "method_parameters": [
        [
            "Main",
            [
                [
                    "string[]",
                    "args"
                ]
            ]
        ],
        [
            "RunAsync",
            [
                [
                    "string",
                    "source"
                ]
            ]
        ],
        [
            "Get",
            [
                [
                    "Token",
                    "name"
                ]
            ]
        ],
        [
            "Eat",
            [
                [
                    "char",
                    "expected"
                ]
            ]
        ],
        [
            "IsAlpha",
            [
                [
                    "char",
                    "c"
                ]
            ]
        ],
        [
            "IsDigit",
            [
                [
                    "char",
                    "c"
                ]
            ]
        ],
        [
            "IsAlphaNum",
            [
                [
                    "char",
                    "c"
                ]
            ]
        ],
        [
            "AddToken",
            [
                [
                    "TokenType",
                    "type"
                ]
            ]
        ],
        [
            "AddToken",
            [
                [
                    "TokenType",
                    "type"
                ],
                [
                    "object",
                    "literal"
                ]
            ]
        ],
        [
            "VisitAssignExpr",
            [
                [
                    "Assign",
                    "expr"
                ]
            ]
        ],
        [
            "VisitBinaryExpr",
            [
                [
                    "Binary",
                    "expr"
                ]
            ]
        ],
        [
            "VisitCallExpr",
            [
                [
                    "Call",
                    "expr"
                ]
            ]
        ],
        [
            "VisitConditionalExpr",
            [
                [
                    "Conditional",
                    "expr"
                ]
            ]
        ],
        [
            "VisitFunctionExpr",
            [
                [
                    "Function",
                    "expr"
                ]
            ]
        ],
        [
            "VisitLetInExpr",
            [
                [
                    "LetIn",
                    "expr"
                ]
            ]
        ],
        [
            "VisitLiteralExpr",
            [
                [
                    "Literal",
                    "expr"
                ]
            ]
        ],
        [
            "VisitUnaryExpr",
            [
                [
                    "Unary",
                    "expr"
                ]
            ]
        ],
        [
            "VisitVariableExpr",
            [
                [
                    "Variable",
                    "expr"
                ]
            ]
        ],
        [
            "Interpret",
            [
                [
                    "Expr",
                    "expr"
                ]
            ]
        ],
        [
            "Evaluate",
            [
                [
                    "Expr",
                    "expr"
                ]
            ]
        ],
        [
            "VisitLiteralExpr",
            [
                [
                    "Expr.Literal",
                    "expr"
                ]
            ]
        ],
        [
            "VisitUnaryExpr",
            [
                [
                    "Expr.Unary",
                    "expr"
                ]
            ]
        ],
        [
            "VisitBinaryExpr",
            [
                [
                    "Expr.Binary",
                    "expr"
                ]
            ]
        ],
        [
            "VisitConditionalExpr",
            [
                [
                    "Expr.Conditional",
                    "expr"
                ]
            ]
        ],
        [
            "VisitLetInExpr",
            [
                [
                    "Expr.LetIn",
                    "expr"
                ]
            ]
        ],
        [
            "VisitAssignExpr",
            [
                [
                    "Expr.Assign",
                    "expr"
                ]
            ]
        ],
        [
            "VisitVariableExpr",
            [
                [
                    "Expr.Variable",
                    "expr"
                ]
            ]
        ],
        [
            "VisitFunctionExpr",
            [
                [
                    "Expr.Function",
                    "expr"
                ]
            ]
        ],
        [
            "VisitCallExpr",
            [
                [
                    "Expr.Call",
                    "expr"
                ]
            ]
        ],
        [
            "Stringify",
            [
                [
                    "object",
                    "value"
                ]
            ]
        ],
        [
            "IsEqual",
            [
                [
                    "object",
                    "left"
                ],
                [
                    "object",
                    "right"
                ]
            ]
        ],
        [
            "IsTrue",
            [
                [
                    "object",
                    "value"
                ]
            ]
        ],
        [
            "CheckNumber",
            [
                [
                    "object",
                    "value"
                ],
                [
                    "int",
                    "side"
                ]
            ]
        ],
        [
            "Error",
            [
                [
                    "string",
                    "type"
                ],
                [
                    "int",
                    "line"
                ],
                [
                    "int",
                    "column"
                ],
                [
                    "string",
                    "where"
                ],
                [
                    "string",
                    "message"
                ]
            ]
        ],
        [
            "Print",
            [
                [
                    "Expr",
                    "expr"
                ]
            ]
        ],
        [
            "VisitConditionalExpr",
            [
                [
                    "Expr.Conditional",
                    "expr"
                ]
            ]
        ],
        [
            "showError",
            [
                [
                    "int",
                    "line"
                ],
                [
                    "string",
                    "message"
                ]
            ]
        ],
        [
            "report",
            [
                [
                    "int",
                    "line"
                ],
                [
                    "string",
                    "where"
                ],
                [
                    "string",
                    "message"
                ]
            ]
        ],
        [
            "HulkExpr",
            [
                [
                    "int",
                    "MaxParameters"
                ]
            ]
        ]
    ],
    "variable_names": [
        [
            "var",
            "tokens"
        ],
        [
            "var",
            "parser"
        ],
        [
            "var",
            "interpretResult"
        ],
        [
            "string",
            "line"
        ],
        [
            "var",
            "parseResult"
        ],
        [
            "var",
            "scanner"
        ],
        [
            "string",
            "value"
        ],
        [
            "TokenType",
            "type"
        ],
        [
            "string",
            "text"
        ],
        [
            "char",
            "c"
        ],
        [
            "Token",
            "invalid"
        ],
        [
            "List",
            "parameters"
        ],
        [
            "var",
            "_params"
        ],
        [
            "Random",
            "result"
        ],
        [
            "var",
            "cosa"
        ],
        [
            "object",
            "right"
        ],
        [
            "string",
            "nameValue"
        ],
        [
            "int",
            "i"
        ],
        [
            "var",
            "assignments"
        ],
        [
            "object",
            "value"
        ],
        [
            "var",
            "funCall"
        ],
        [
            "var",
            "args"
        ],
        [
            "object",
            "condition"
        ],
        [
            "object",
            "left"
        ],
        [
            "List",
            "values"
        ],
        [
            "var",
            "name"
        ],
        [
            "Expr",
            "result"
        ]
    ],
    "method_names": [
        "Main",
        "RunAsync",
        "RunPromptAsync",
        "Get",
        "IsAtEnd",
        "Peek",
        "AddToken",
        "Eat",
        "IsDigit",
        "IsAlphaNum",
        "ScanString",
        "ScanTokens",
        "Advance",
        "Next",
        "IsAlpha",
        "ScanToken",
        "ScanIdentifier",
        "ScanNumber",
        "VisitVariableExpr",
        "VisitConditionalExpr",
        "VisitUnaryExpr",
        "VisitBinaryExpr",
        "VisitAssignExpr",
        "VisitLetInExpr",
        "VisitCallExpr",
        "VisitLiteralExpr",
        "Accept",
        "VisitFunctionExpr",
        "ToString",
        "IsTrue",
        "VisitVariableExpr",
        "Interpret",
        "VisitConditionalExpr",
        "VisitUnaryExpr",
        "VisitBinaryExpr",
        "VisitAssignExpr",
        "Stringify",
        "IsEqual",
        "VisitCallExpr",
        "VisitLiteralExpr",
        "CheckNumber",
        "Evaluate",
        "VisitFunctionExpr",
        "VisitLetInExpr",
        "Error",
        "VisitConditionalExpr",
        "Print",
        "report",
        "showError",
        "HulkExpr",
        "Parse"
    ],
    "method_return_types": [
        [
            "RunAsync",
            "Task"
        ],
        [
            "Main",
            "Task"
        ],
        [
            "RunPromptAsync",
            "Task"
        ],
        [
            "Get",
            "object"
        ],
        [
            "Advance",
            "char"
        ],
        [
            "IsAtEnd",
            "bool"
        ],
        [
            "ScanString",
            "void"
        ],
        [
            "IsDigit",
            "bool"
        ],
        [
            "ScanTokens",
            "List"
        ],
        [
            "IsAlpha",
            "bool"
        ],
        [
            "ScanIdentifier",
            "void"
        ],
        [
            "Next",
            "char"
        ],
        [
            "AddToken",
            "void"
        ],
        [
            "ScanToken",
            "void"
        ],
        [
            "Peek",
            "char"
        ],
        [
            "Eat",
            "bool"
        ],
        [
            "ScanNumber",
            "void"
        ],
        [
            "IsAlphaNum",
            "bool"
        ],
        [
            "VisitAssignExpr",
            "R"
        ],
        [
            "VisitUnaryExpr",
            "R"
        ],
        [
            "VisitVariableExpr",
            "R"
        ],
        [
            "VisitCallExpr",
            "R"
        ],
        [
            "VisitBinaryExpr",
            "R"
        ],
        [
            "VisitFunctionExpr",
            "R"
        ],
        [
            "VisitConditionalExpr",
            "R"
        ],
        [
            "Accept",
            "R"
        ],
        [
            "VisitLetInExpr",
            "R"
        ],
        [
            "VisitLiteralExpr",
            "R"
        ],
        [
            "ToString",
            "string"
        ],
        [
            "VisitVariableExpr",
            "object"
        ],
        [
            "VisitUnaryExpr",
            "object"
        ],
        [
            "VisitCallExpr",
            "object"
        ],
        [
            "Interpret",
            "string"
        ],
        [
            "VisitConditionalExpr",
            "object"
        ],
        [
            "IsEqual",
            "bool"
        ],
        [
            "VisitFunctionExpr",
            "object"
        ],
        [
            "VisitBinaryExpr",
            "object"
        ],
        [
            "VisitLetInExpr",
            "object"
        ],
        [
            "VisitLiteralExpr",
            "object"
        ],
        [
            "IsTrue",
            "bool"
        ],
        [
            "Evaluate",
            "object"
        ],
        [
            "Stringify",
            "string"
        ],
        [
            "CheckNumber",
            "void"
        ],
        [
            "VisitAssignExpr",
            "object"
        ],
        [
            "Error",
            "void"
        ],
        [
            "VisitConditionalExpr",
            "string"
        ],
        [
            "Print",
            "string"
        ],
        [
            "showError",
            "void"
        ],
        [
            "report",
            "void"
        ],
        [
            "Parse",
            "Expr"
        ],
        [
            "HulkExpr",
            "Expr"
        ]
    ],
    "class_names": [
        "Hulk",
        "Atmosphere",
        "Scanner",
        "Call",
        "Conditional",
        "Unary",
        "LetIn",
        "Expr",
        "Function",
        "Literal",
        "Binary",
        "Assign",
        "Variable",
        "Token",
        "Interpreter",
        "ConsoleLogger",
        "AST",
        "RuntimeError",
        "Error",
        "ParserError",
        "Parser"
    ],
    "interface_names": [
        "IVisitor"
    ],
    "delegate_names": [],
    "node_count": {
        "Compilation_unitContext": 12,
        "Using_directivesContext": 5,
        "UsingNamespaceDirectiveContext": 7,
        "TerminalNodeImpl": 4539,
        "Namespace_or_type_nameContext": 239,
        "IdentifierContext": 1283,
        "UsingStaticDirectiveContext": 4,
        "Namespace_member_declarationsContext": 12,
        "Namespace_member_declarationContext": 50,
        "Type_declarationContext": 50,
        "All_member_modifiersContext": 167,
        "All_member_modifierContext": 217,
        "Class_definitionContext": 21,
        "Class_bodyContext": 22,
        "Class_member_declarationsContext": 21,
        "Class_member_declarationContext": 140,
        "Common_member_declarationContext": 140,
        "Typed_member_declarationContext": 101,
        "Type_Context": 339,
        "Base_typeContext": 347,
        "Class_typeContext": 276,
        "Field_declarationContext": 39,
        "Variable_declaratorsContext": 39,
        "Variable_declaratorContext": 39,
        "Variable_initializerContext": 10,
        "ExpressionContext": 757,
        "Non_assignment_expressionContext": 698,
        "Conditional_expressionContext": 698,
        "Null_coalescing_expressionContext": 698,
        "Conditional_or_expressionContext": 698,
        "Conditional_and_expressionContext": 704,
        "Inclusive_or_expressionContext": 710,
        "Exclusive_or_expressionContext": 711,
        "And_expressionContext": 711,
        "Equality_expressionContext": 712,
        "Relational_expressionContext": 722,
        "Shift_expressionContext": 735,
        "Additive_expressionContext": 735,
        "Multiplicative_expressionContext": 748,
        "Switch_expressionContext": 751,
        "Range_expressionContext": 751,
        "Unary_expressionContext": 868,
        "Primary_expressionContext": 792,
        "ObjectCreationExpressionContext": 32,
        "Object_creation_expressionContext": 31,
        "Argument_listContext": 166,
        "ArgumentContext": 274,
        "SimpleNameExpressionContext": 525,
        "Constructor_declarationContext": 16,
        "BodyContext": 16,
        "BlockContext": 105,
        "Method_declarationContext": 61,
        "Method_member_nameContext": 61,
        "Formal_parameter_listContext": 64,
        "Fixed_parametersContext": 64,
        "Fixed_parameterContext": 92,
        "Arg_declarationContext": 92,
        "Rank_specifierContext": 1,
        "Method_bodyContext": 61,
        "Statement_listContext": 150,
        "StatementContext": 363,
        "Embedded_statementContext": 320,
        "ReturnStatementContext": 88,
        "Member_accessContext": 170,
        "Method_invocationContext": 199,
        "WhileStatementContext": 7,
        "LiteralExpressionContext": 176,
        "LiteralContext": 176,
        "Boolean_literalContext": 7,
        "ExpressionStatementContext": 159,
        "String_literalContext": 52,
        "DeclarationStatementContext": 35,
        "Local_variable_declarationContext": 33,
        "Local_variable_typeContext": 37,
        "Local_variable_declaratorContext": 33,
        "Local_variable_initializerContext": 32,
        "IfStatementContext": 34,
        "If_bodyContext": 38,
        "BreakStatementContext": 22,
        "Type_argument_listContext": 41,
        "Simple_typeContext": 82,
        "Numeric_typeContext": 64,
        "Integral_typeContext": 29,
        "Tuple_typeContext": 2,
        "Tuple_elementContext": 4,
        "Object_or_collection_initializerContext": 2,
        "Collection_initializerContext": 2,
        "Element_initializerContext": 16,
        "TupleExpressionContext": 7,
        "AssignmentContext": 41,
        "ThisReferenceExpressionContext": 46,
        "Assignment_operatorContext": 41,
        "TryStatementContext": 4,
        "Bracket_expressionContext": 16,
        "Indexer_argumentContext": 16,
        "Catch_clausesContext": 4,
        "Specific_catch_clauseContext": 1,
        "ErrorNodeImpl": 2377,
        "AttributesContext": 12,
        "Attribute_sectionContext": 14,
        "Attribute_listContext": 12,
        "AttributeContext": 12,
        "Expression_listContext": 9,
        "Property_declarationContext": 10,
        "Member_nameContext": 10,
        "Accessor_declarationsContext": 8,
        "Accessor_bodyContext": 15,
        "SwitchStatementContext": 4,
        "Switch_sectionContext": 46,
        "Switch_labelContext": 48,
        "Throwable_expressionContext": 14,
        "MemberAccessExpressionContext": 1,
        "Predefined_typeContext": 1,
        "ParenthesisExpressionsContext": 5,
        "Interface_definitionContext": 1,
        "Variant_type_parameter_listContext": 1,
        "Variant_type_parameterContext": 1,
        "Type_parameter_listContext": 10,
        "Type_parameterContext": 10,
        "Class_baseContext": 14,
        "Right_arrowContext": 2,
        "Set_accessor_declarationContext": 7,
        "Accessor_modifierContext": 7,
        "General_catch_clauseContext": 3,
        "IsTypeContext": 8,
        "Cast_expressionContext": 39,
        "Floating_point_typeContext": 35,
        "TheEmptyStatementContext": 2,
        "ForeachStatementContext": 4,
        "ThrowStatementContext": 3,
        "ForStatementContext": 1,
        "For_initializerContext": 1,
        "For_iteratorContext": 1,
        "Constructor_initializerContext": 1,
        "Enum_definitionContext": 1,
        "Enum_bodyContext": 1,
        "Enum_member_declarationContext": 36
    },
    "project_name": "eblabrada_hulk",
    "label": "original",
    "project_type": "moogle"
}